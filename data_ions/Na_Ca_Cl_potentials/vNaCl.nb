(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    343302,       7466]
NotebookOptionsPosition[    329859,       7101]
NotebookOutlinePosition[    330216,       7117]
CellTagsIndexPosition[    330173,       7114]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "This", " ", "is", " ", "to", " ", "get", " ", "the", " ", "SSM", " ", 
   "potential", " ", "between", " ", "Ca", " ", "and", " ", "Cl"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7102649792930727`*^9, 3.710264995116156*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "The", " ", "main", " ", "task", " ", "is", " ", "to", " ", "get", " ", 
    "v_", 
    RowBox[{"{", 
     RowBox[{"R1", ",", 
      RowBox[{"Ca", " ", "Water"}]}], "}"}]}], " ", ",", " ", 
   RowBox[{"v_", 
    RowBox[{"{", 
     RowBox[{"R1", ",", " ", 
      RowBox[{"Cl", " ", "Water"}]}], "}"}], " ", "and", "  ", "v_", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"R1", ",", 
       RowBox[{"Ca", " ", "Cl"}]}], "}"}], ".", " ", "I"}], " ", "will", " ", 
    "denote", " ", "it", " ", "by", " ", "fvR1CaA"}], ",", " ", 
   RowBox[{"fvR1ClA", " ", "and", " ", "fvR1CaCl", " ", "respectively"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.71026499825111*^9, 3.710265075490095*^9}, {
  3.710265651428103*^9, 3.710265706299102*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "handling", " ", "of", " ", "the", " ", "surface", " ", 
    "charge", " ", "is", " ", "a", " ", "bit", " ", 
    RowBox[{"tricky", ".", " ", "Maybe"}], " ", "use", " ", "a", " ", 
    "smoothed", " ", "charge", " ", "will", " ", "make", " ", "the", " ", 
    "analysis", " ", 
    RowBox[{"easier", ".", " ", "I"}], " ", "can", " ", "just", " ", "use", 
    " ", "the", " ", "delta", " ", "charge", " ", "for", " ", "now"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "when", " ", "a", " ", "surface", " ", "charge", " ", "of", " ", "Q", " ",
      "is", " ", "convoluted", " ", "with", " ", "a", " ", "potention", " ", 
     RowBox[{"\[Phi]", ".", " ", "The"}], " ", "\[IndentingNewLine]", " ", 
     "result", " ", "is", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["Q", "2"], " ", 
        RowBox[{"\[Phi]", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SuperscriptBox["rqcut", "2"], "+", 
           SuperscriptBox["r", "2"], "-", 
           RowBox[{"2", " ", "r", " ", "rqcut", " ", "x"}]}], "]"}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], ",", " ", 
    RowBox[{
    "where", " ", "rqcut", " ", "is", " ", "the", " ", "position", " ", "of", 
     " ", "the", " ", "surface", " ", "charge"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7102650806990833`*^9, 3.7102651054663067`*^9}, {
  3.710265248784752*^9, 3.710265279744948*^9}, {3.710265443859396*^9, 
  3.710265506926138*^9}, {3.710265553682022*^9, 3.710265597873509*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "The", " ", "screening", " ", "charge", " ", "around", " ", "ion", " ", 
   "Ca", " ", "is", " ", "denoted", " ", "by", " ", "frhoqCa", " ", "for", 
   " ", "the", " ", "full", " ", "system", " ", "and", " ", "frhoqCa0", " ", 
   "for", " ", "the", " ", "GT", " ", 
   RowBox[{"system", ".", " ", "Definition"}], " ", "is", " ", "similar", " ",
    "for", " ", "the", " ", "Cl"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.710265862579651*^9, 3.710265914543026*^9}, {
  3.710266242203391*^9, 3.71026624555298*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.71026592333629*^9, 3.710265926355338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "=", "71"}]], "Input"],

Cell[BoxData["71"], "Output",
 CellChangeTimes->{3.710265938261664*^9, 3.710352271784429*^9, 
  3.7110305985587597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Qna", "=", "1"}], "\[IndentingNewLine]", 
 RowBox[{"Qnashield", "=", 
  RowBox[{
   RowBox[{"-", "Qna"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", " ", "-", 
     FractionBox["1", "\[Epsilon]"]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.71026593989459*^9, 3.710265987968454*^9}, {
  3.711030602712653*^9, 3.7110306122471867`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.710265989380877*^9, 3.710352276618862*^9, 
  3.7110306185002737`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["70", "71"]}]], "Output",
 CellChangeTimes->{3.710265989380877*^9, 3.710352276618862*^9, 
  3.711030618501813*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Qcl", "=", 
  RowBox[{"-", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{"Qclshield", "=", 
  RowBox[{
   RowBox[{"-", "Qcl"}], 
   RowBox[{"(", 
    RowBox[{"1", " ", "-", 
     FractionBox["1", "\[Epsilon]"]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.7102659937620983`*^9, 3.710266011367223*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.7102660132562428`*^9, 3.710352280353044*^9, 
  3.711030623250388*^9}],

Cell[BoxData[
 FractionBox["70", "71"]], "Output",
 CellChangeTimes->{3.7102660132562428`*^9, 3.710352280353044*^9, 
  3.711030623252274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d", "=", "0.2"}], "\[IndentingNewLine]", 
 RowBox[{"ss", "=", "6"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fintqcorrect", "[", "r_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"0", 
         RowBox[{"r", "<", "d"}]},
        {
         RowBox[{" ", 
          RowBox[{"Erf", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r", "-", "d"}], ")"}], "/", "ss"}], "]"}]}], 
         RowBox[{"r", "\[GreaterEqual]", "d"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frhoqcorrect", "[", "r_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"0", 
         RowBox[{"r", "<", "d"}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"fintqcorrect", "'"}], "[", "r", "]"}], 
          RowBox[{"4", "\[Pi]", " ", 
           SuperscriptBox["r", "2"]}]], 
         RowBox[{"r", "\[GreaterEqual]", "d"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]}], "Input",
 CellChangeTimes->{{3.710266030730188*^9, 3.710266031942965*^9}, {
  3.710266085822029*^9, 3.710266200701087*^9}}],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{3.7102662167695837`*^9, 3.710352284538159*^9, 
  3.7110306307490396`*^9}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.7102662167695837`*^9, 3.710352284538159*^9, 
  3.711030630750663*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"frhoqCa0", "=", 
    RowBox[{"frhoqCa", "-", 
     RowBox[{"Qcashield", " ", "frhoqcorrect"}]}]}], ",", " ", 
   RowBox[{
   "without", " ", "considering", " ", "the", " ", "surface", " ", "charge"}],
    ",", " ", 
   RowBox[{
    RowBox[{
    "total", " ", "surface", " ", "charge", " ", "is", " ", "Qcashield"}], 
    "-", "Qcacut"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.71026623003589*^9, 3.710266365421957*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rrhoqNa", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/anggao/Desktop/Na_Ca_Cl_potentials/rhoq_Na_full.txt\>\"", 
     ",", "\"\<Table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.710279801784951*^9, 3.710279864187711*^9}, {
  3.7110306406190033`*^9, 3.7110306453423767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frhoqNa", "=", 
  RowBox[{"Interpolation", "[", "rrhoqNa", "]"}]}]], "Input",
 CellChangeTimes->{{3.710279876735718*^9, 3.7102798848133163`*^9}, {
  3.711030647974955*^9, 3.711030650711924*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.0010000000474974513`", ",", "1.9990000949474052`"}], "}"}], 
     "}"}], ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.7102798871489277`*^9, 3.710352290389715*^9, 
  3.711030656180952*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rrhoqCl", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/anggao/Desktop/Na_Ca_Cl_potentials/rhoq_Cl_full.txt\>\"", 
     ",", "\"\<Table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.710279895310557*^9, 3.710279900285453*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frhoqCl", "=", 
  RowBox[{"Interpolation", "[", "rrhoqCl", "]"}]}]], "Input",
 CellChangeTimes->{{3.7102799044220467`*^9, 3.710279914928157*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.0010000000474974513`", ",", "1.9990000949474052`"}], "}"}], 
     "}"}], ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.71027991651432*^9, 3.7103523004451027`*^9, 
  3.71103066180025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"frhoqNa", "[", "r", "]"}], ",", 
     RowBox[{"frhoqCl", "[", "r", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.1", ",", "1.9"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.710279925642695*^9, 3.710279946223919*^9}, {
  3.711030665139035*^9, 3.7110306658176413`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
HF0Kl4/41hH/EKFzTMStRaYZ1mqfq5/ZIYLH26Dm1uYOSLj1ePwJHQmOC7K6
0v1qA81fDlYV9CRI55y9KfqoGTb9LIlkRhLUvPWrePasBrIE7vmc3UsCh5v2
cxynyuF2pT6r2z4S3K12Tu7DlwLjDe3Eqv0keJ7gXt3/twTKlv+Toh0ggQ2y
pqgdK4b73pdrzrOTIO/acXcWrjRg5z2v5s5BgqeRhCUXmefQVHJqtIaLBJrV
lMxq8Uj0UEPS4jcPCaRVLFZiLeOQwKIIXoGPBLJ/VC4lPXkMnzz4vDwOk+AZ
e/69Xd0Z8JyTg6VekASex7jVLz0rB8kC5vg/wiSYaDE/Eorpc1yVQVJJlARk
+kc78+1VEDD7p9JTHNtPgZ/8eLYc5N3IVxslSBDrbT3xqLEIFlnXh/5KkqB7
szlv61YaRGQvmV0+QYLAHyvujGwBAMpf171OkoDCJ7F+NyoE4SbHX6BTJGg+
zhfy81o8SnQZ2EcnR4KVUtu/ykfeo+vM3R+U5UlQm5FOPGMYjLbSmo/6niPB
EPN9iXLulyjnYm15ywUSMNb2yIo/ikWGo6VX6C+SwJCCN+j7nI/ip6t8nlwi
gUjYUtajsCo0M1+PvgOGTxBBO+ZAIxL60bxzWwWrd+rXLLtXIzJf77jUpUqC
lMPzpc4F9SiN9MnzwjUStDrPJ0iJ1KCl3wP1uRokODi90kZULEOSdGNb/Fok
MAhaNU1lz0EOe6YVQm+QgO2Kjs3ZqERUwDLn/lcX4x+173tg8BHhOL5XO+mR
oJ75yVxqaAmS5ftJnbtNgg+WRa2/T1ejJ8K4szeNSNCpU5LBR65GVUdJT1vv
kmAyKaS8OuED2jyxWX7GhARfXW54FiQUgKLcX2KGGTYu0Hfei7kZPC/Qy/FY
kCDteqH8XkIzNF3e6xJkRYKY4xm/nbdrge4/lpJNGxI4igd8Mb6VDyrXD27Y
25OA7oqurmaCPQq4ySPz5QEJ+CmmTytDilC34eGHWk4kUPuXEd3D2YCYTUUK
Gp1JWC486RwLa0VaVkd/yTzB9Ox6bs9b1VYU7iAllepKgmM5J8KcziM06HzK
/qA7CV6qiwW9+lSJOJ7J57zyIEHJA8kPz/Wikf5LhR8kTxIULLXza2jlwwe/
yxLW3iRIntn67xy+EaZfX7Ue98X0e6NGe2eyBQQi1DOu+ZOgwS/ovExmLZjG
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
ogK/vOIwsD1G/wNS4HIg
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxEl3c4lf//+O2dvTOTEVJkj54vDZFRKIS2layiLUolFVpIkrIKGWU0UPcd
Ze+9neUce++R3/le1+/6vM8/9/W4XvdzP+/zfD3lz/nbuTMxMDDYczMw/N+z
qOW0XsLrH8Dw/3+Eqmq1qp//MRe2R26R+B+f+cTOaada/D/muZ/Xw1nyH5/T
2bx9o6/kf8wfn/THSfbX//hr7mTGE7vf/+MLog/VVDz+Y6kQ2dw/N/7ju9ZH
Czbe/8dW419++k/9x6QdV1rsI8v+x7zpa2tbK8r/x795YkK+d//HQUHqjMcn
/uPu/SfZooX//I/TSL/4Gc7/x4ZyYYqUzf/Y8w3HkWyDiv/xqWqQWbf8jx2W
rk5YnvqPD9gPPRkL+4/luMuqVOv+YzGDlVc3B/5jXs/dnjXTFeB7vl85bJ84
xhrrqSvJXAk2Uzdq+fS1sPWyJFZvkUqIa246v9NKG5ubbm/7oVwJU448P+O8
hLFRmS1pnIaV8N7/pBPvRRUgWh0IPGFFZwnH6YKKo9B189a+zFOVQO4ItoxW
94TGjHyBlYBKmD77j7Pe/QZUdIwQzO9VAqEg8OId5wj4ySL/OT62Ei4dbmlO
3PcSCrWcQoc/VgLp6/mtyOUNfDrz1Ea/uBJU1vNklHckQ0p0hXREXSWoVlgG
iQ+mwevSjfHOgUpoy+MRPkTMhGej2qXKM5WQfCB0V53tZ3go7vPkGnMV2DAZ
E08dL4QQs1TnSpEqMKW9jWQyKIYrQT07xFSq4HLBC8p+m9/gkyKw4mFYBcGs
zcu1rJVwvsm86qtVFZDubVdhjW8A53+hr9hOV8GjdMEhOe02sFP/5uFwqQok
GpdCVjx7wMJ5UufDvSpQ9wpa760iAIpQZF2MrYL490C7bzkE+l9d2w5mVEHY
1qc3D62Nwi7Ky9TY4irgf95YKiw+A0qCtZeH6qqgco0t++KrBZBGTPt0BqvA
qv8Zh/LwKgj7GQg8mKmCq2/m7h94xIC4EwMIbczVcG7sxr/RGWbEVPMxb7to
NaisCD7tbWNHK0sDIUEq1WB4c8HXyY4HTSuK2vwxrAZrc9tA4b/8iGZvLS1s
XQ27Y7rrBduF0MDd++PnT1fDzHBiZMchMdSeV1JScKkazs+YOS5Ib0V1/bOP
me9Xg/efO0ZPjGRRObeqs31cNUSE5xQH9cmjYoOzO1IzqqFj/p1j0+nt6Itn
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
/2HTOrdK1BWpgC/u4k3X3cC8L/z+82kHFVy/OKwczKfvu4nsDaoaVPCvrMqS
jl/FTjVZd2ZqUWFg6u0TkehVrJM5hqCiRwXr+WWeD6RV7Khez8hHIyocn7pf
eOXBGlbjLTenhKhQevUyyr+8jh1I8lhPP0AFu2tFExzPNrBfzdmsihZU+n74
qkqi5B+mzzrHm2ZNBW++kF5K9yaWr28grmBHhddZf4sW9BlwdZ9Q+RQHKryK
jrnLe5MBT3/3V1XehQp7J34S+34y4DKt3NrvT1OBz3U5SFieEY9nszORdaOC
b3jEwJViRlzQMN4syYsKKuK2zzYcmfBI34Ej0r5U6Bd50bFtnAlnS95+IvES
Pb9dMY63bZnxO23e57ZepUIRkT01+jkzvsr+5WLCTSocfFB5OKCEGQ80WgqS
CKVCy98H6VnNzPi4n0lI/D0qTBWkhV39y4x7pNx7KBZBhXzNLd/WiphxQnv1
s7hIKgh2NCbm5jHjzpz8CSLPqXBTUOtKG5kZbzN2SI2JpcJtJiP18+dZcJuA
xGyhBCpovbUNqm1jwatSSUUvkqiwzfH1XIo4K27aqYIJpFLh6WOXb2YJLHgx
l3/Vs49UuMpPTBmj+6e9t6iZL5vu/3jO7/xWJjz30lpP9Ge6vxMHJky2MuEq
6aaULUVUKFje8+6GChOe0vVwIvIHFb40Jq07nWfCpXgaFrl/Uen7h6T7oQIm
PA6EGZ6UUSG8OG4tt4cJ5wt05uSqpELDhddcp2uY8IgP7wUf1VJBYsz3ykIJ
E87UQ93K0UQFGbLi+WulTHjwlp2KD9uoIPl1qfnHKhO+iAI12LqpwLtlg2Dr
zIwHBP3Qe9BPhUM/Bvoma5nx0Y+biIVEhdgVT0dVOxbcrffg4XtUKojZvzCz
YmPF+3kj7ZnGqLDZmPz7xGtW3GFfi+vdKSpENAZc2zfKijddEfdgmKcCsSB3
aOIcK34485R/6DIVHrGZnyXIseB/+tKu/1un9+NkbODRTiZ8L//Y3duMNKi+
V0xmrWfEv+/XfLLOSoPhGp+MR05MuNa1azG3uGgw02YQdsaRGc/O+vl2lZcG
p+X/BRfR/VMaYP54Q4gGwcljZ3Q/seDvBQ5/XhajQaFnz52ycGZc8uCzH9ek
aCDvZW7yRZ8Jf3m9o2xRjgbmOjbxnIKMuPZDHY1ORRocEcvYHDRixDtiY15/
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
hZdHfnKrmKyB4lyEpjyOAsMlH6rPmq1BhaZOy2WggKSm3P2j1mswuv/CwQYb
CgT+GN/aa78GF2rd5F7rU2HB3zl++9kaELK7Ctsf00BeiEtx3WUNhA0//dGW
o0NkbfnslDsW32VAq9+UDjh9PY9OH8znGtejb5vQ4TqZKlAZuAbp30+OEm/Q
ITH0fUP62zWwWnprp+BFh5/iMibvw9fg+NVv5b/T6KDTOvLPN3oNcNvFXvci
6ZBr8jzZ8SO2n/Q1XrCXBsy/OZVNk9ZAwuRPWqwvFYxjSpY009agt8Pry+3z
FKg6p+N7ORtbK2zmftAkw4E+krBkwRp8Cbu8wKJOBhuriBbeUkwfxnlMhyzI
0LrjnNnuqjUoYg071m5LBtndibuW6tag7h++U1uHBFn79uRWNa3BkSSWTZHT
ROA95KoZ3r4GvHV5hduVBAjh+Uqy7FmDjNGAG5uY3/4K6kTD4BqQoTvmOIEE
DiJI/sjYGiRl6/1x6abA8knJWcLUGhyN/L0FvVTQPRPn1T6/ht1Ht5knvCjQ
LsNyPPHLGiydKM8OaiaB/MXn7U7f12AinxjdvpMIObBorYFfgz2Mrvz25zaA
/7rGXlHyGqz+uLs5kboBYbdqirbpa/BNytKx+CYRGLRP6I7+XoM7r+8/SJwj
wjO995u5DOvw7oXfwK9HJFi5zxjvt3Md5DabH0nEk0Df1P7KA7Z1IM93eJy6
hfnTfGZJev86aHoxHnkgSYCLtmoBbIfWYfxmqenyI6yPOpSLL3Ovg81p6f2P
5b6CoLNwb7XAOvBYqL5n/LIC4a/ePY0QxuLPjUW1XMbeUT7bnNYn1uF8hCxz
Jd8avAi0rlCSXId54osXY4w4WH07fo/73DqYpLweb9deB4OIq382LqxD164D
RUf/3wdiipI7Lq6DgKBcW5jed1BMELiWBOsQECZw4EvxKhR8Dv7mfG0dRIiR
LebGX0EoczNY8+Y6tBfyKdzIWYHIPDMpMc11eHu9XaL9z1dgLhka+qOzDuuD
9l+uC2D3XuUVp7G76/BsrR0cmHDwvS6XO99wHbyWtZUZbPBwv5m7zv/hOmwT
dsnvPvh/3QWYGFqsg+Xe7sXU1a9wpY/MJGO7DtyTDz6Mzi5B0bBJxh6Hdbg2
0CtG5FgC4cnem19erMM5K+7nGjuX4f2cAr7mJYZzu3YPk/wXYPmSER7puQ7M
YsQj8mJfwPX7QRkbv3W4Y+WbKzu1CGt47wnloHXYu7uNU+viHBhS8G48oRhf
xu1p+5Wmof/nfUFSxDqwCiwEF91cAKW/HU2d2D1kavhS+jB+GUp2XDBPjl+H
V2feS3///RVEdqewuiavw+nqJa3FvFWI2bc/Tyt9HSYyAk5Gin4F1kPuWidy
1kH85+FzJlXL4Mbzg/y3YB24cP2pF18vAE5QP2a8dB2U5K8xbhlMgbFIi0JB
FaYHmz+J9oYjMHjy7FxA/TpknTv/o9WgF1TOfPI2al6HIT6/Y3yM2DwlwyZy
oWMdJJi1LW4ytYHYRZcO9t51YBnILQlxaYNYWLFZGcTqcb/r/FBHJ7Bdv7Ov
bmwdFpVkowo9+sH9VkNx1PQ69Gq5n/A8MwwErVN6tgvrsCnA8S3GbxRM9WJ/
qqysA+5wiFTuzlEYvr8zgffHOki9nG8v6xmGq6bPgIxfh4/f3KR95YdA9ciu
CmfyOpxkLdwV7zwIt/rjJX/TMf5fHNnbcnwQNALOpnr9xs4/JrceVRsAbcU2
HmYGHPyNN/E4H9QH/1HuhQcx48CsbSHuoU0X6OcQWPbuxoGQmW91sVEr3Hvo
5xGxFwfBlmFz1mfqwZCbm3qYEwcv5wLbXI8VgclAns1HLhx4H6t9bBfiCY8C
lZcE+XAQkPSQ7455JjK/PH439SgOtjmGE6sLK5EV1ab/hAgOBj7OTnaZImSb
++9anjgO5PjKcGajTcj+0fvas6dx8LTpustAdDNy5DkpXX4OB5sHnv4RaWtC
LwbrsxRkMd+N07e939Uhl9c6RxuwuYPdSq/mR2cZcrvyLVoFcDCbfs75XEMu
8qC9Yu+4ioNDZR/s7g/mIO88Dj91NRzU94kHP1UrRX6P038N3MbB7rNcszke
1SiQ96KD7h0s/rFDP+8wNaA3Q/2rk3o42LNx/I78XDkKCXpsZHQfB7YeE/FJ
nenoHfwcWTLGgXHiQ0umQhcUSQ+5ZfEYBwyiBX1npG6g6PxjTWuWOHBN3Pm2
428BijWrkHv6BAfjZfBFx6YRxfOpF1AccPD2q963htOdKHF4QcTVCQeeQmY6
Ofs6UcqbF/HbL3Gg9G1PmqxxM0pX2s3p44mDQbJqI+V9Fcra/BS00w8HzwuK
FT8eK0R5BdL/3rzGQef4XNWHxDpUaN7htC8EB4+6bMcOVLSjEn5DXGQ4DiKi
Fyb38Q+g8hHioyPRWDyLX1fXXYZQVXDAVHwcDlhELzTk5Q6gWmVebaFEHLiI
hgm/mu9BDT8L2tNScDB/nmNs82YXaiq8evlkJg5U+Q9sJeT3o1aLydL8XCx/
dnuJWNFR1CFgJyFdhIPeqx34TfMp1D3K+LmiDAcJOpWRJfzzqO9tzJFL1ThI
ekfPfM24iAZVToWhehzomChK86UvopFfiPlaMw4yDx7lJgouofEi3Ved7Tgg
MUafkWNeRlOWP0i3e3Aw58W/eV/rC5oV9LQaGsBB5IM3glevrqCFMc4FvVEc
7G33T7f9uIKWQzL1piexevuXLyXMLaOvVxV7jeewOfq1MUO+3iL6vjWo8mUJ
B2EcDuOFyjNovdi82nIVB+SOjmixqnFEsNo6g1vDQYdqnyr6NIpIR99lOGzg
4NiaefzQ2xFEHT8uQKPg4PErPsFJ1xG0GVoV9fIn9r3O+yENxjG0dU2D7e82
DqgSmS39HybQn99L3r6MeOA46ml3Q3kaMZQ6b7KwYHOpcVzc52eziNlmj/1b
bG6vG2UV9bObQbuOJa/s34+H62uJxyfmp5B0qUY97SAezEb/1R/SnESG139H
z3DjocH2ad0r2iQKnMiybxLAg25S0pQtYQYVWevfyBTGA6UmbMB8ZB5N/94h
FHoCD2vsrtwGEotoZ1jxz2eSeLA8pp57LmAOnRUyGTI4hwf6iY61F+zT6H4J
e84VWWyuP5cVe31yHPlfq/EVuYTH7hvq81yrCVQ4bvmATQkPV3vYjxg+nELT
VodliNew81bOi4NcM4j5dzP7+E08KJjylMg1TyGpUIevtZp4kM7WWSz9M4ru
HRVs+PwfHrYvXW3qdh1E/sU9Ma8N8CBUqPXS42AvKrj68qmdER5sRoyP7Qkc
RpNjYmr/PcIDFyPPGQ6LSbTDalRIwRIPZ3d9TdPVn0dSWz6/BJ/gAS/K7LkZ
togMQs4MMzvigb0r61ruzCLyFZzLWXPCgwrTcNS+54soryjYb9AND+n5xin2
+Dk0riJvWOGFh9i/20Ee25OIceyrTII/HioEPSvq/EeRpGXUXt83eFD9Gee7
umsY6f9SWrUMw0PYRn5o9f1x5P2W0KARhQcBqYbHOudnUY5AwofzsVi8Bw5/
4cQSGi286cDzCQ8tPiCnubqM/ilvqv37jIcnV7/tivj8BUmMph37moEHUee1
eZPCL0jXQmerOxcPPDcX7Xc3LCPPn/+Gi4rwsI9bVWCmZRFlB+fnxpTjoQfJ
t0i9nkOj/A/83WvwUCOvXDHhMY3+FrAaPULYO6nDwGX35xkkrlxxQa0VD5/d
8kSVBeeRzsjjfVJdeJjMPPpMGC0id/MD3w7248E+z2maN20ZZW42oF/DeAhO
41HX9FtBw2+exC5M4MFEY1VcRngVbfPxOrbNYvVx+SS0sfcbEivouJm7hIfj
1s6+PrRVpK3kJByxigfmXz2fGMxXkduw8G/ndaxeSd+fXHL/itLNBkcMiXj4
Z9g8Nqy2ggbpHnkqNDzIXK/Mldv1BW0FnQoQ38JDAmu6hPLyEhLhmzLa9w8P
+n1Z/acNlpBWfqAsdQcBrmeIxPxUWkJuILN/mpUA9/InD2trLaG0oaVvaC8B
osnNFzj1llD/43eN6ZwEuGL7KOaj+BL6SVOMe3uEADJkWQM6YREJB605OvIT
4FjBoj5n1iLS4I29dfcYATYHLOvewCJyzbt+/LIYATTrXvs3ZS2glCuU38Kn
CPB5p8PHw9/nUe9g8ijrWQJsCPzzWn0yj+iPNPMJMgRQYc58JXNpHgnRfgeM
KhBAKW+D0/nGPFJ/nW1cc4UAVQUvPnG/mUfOPHflkq8SIPuhYmQrbR4l5zJz
BKoRIKizgGdfzwIy3Jiq5dYgwDSzvgNjwCI6cr7QMvcOAdQoiqLJasto2Nn/
4BV9AiSTrSWU+FdQWM09NHifAJaUxlBDw6/o1l8p28cmBFDfMzqye3MF7VRh
PkJ/TACSZK/b07wl1Bgw1RxkRYD+MtHToR9mkHtXgT2fHQHyL59YmtwYQfJ7
/XkLHDE8J6rZlHwHEEX7XruSMwGaTfhGS15ifn0v9WzEjQAGGfs9lxR6kc3k
DkELLwKk9pGL8g37kRj/VNdPPwKc7Yvbd+7VEFoyKXB6G0QA5zD38Nzroygh
1e+YYCgBxgnzQR+OTyCDbwZ9RREE8Dd/pFbtNYUOnZJ6eTWGADNr9VW/ds6g
AfsdouMfCcCcEvSC/mkGBZdMDlolEcCG0Ue3H9tXpee7/04lgDQdV2TaPY6Y
LvqJh2URIBg39DWvdQjVexiMCuUTIImiZWd5vBu5Np32Li0mgBTfjcGjy21I
ZucOSdUKDO+M9g/PzC5EVJucmKwhQE6nul1Waz/KDcn3s0VYPodqp3xrhpDF
oO+Zvy0EEB+LnzZfGUTChwxmwjsJsMxyYHf7SC+au3v69fE+TH/DA6qU2XYU
G890vmKIAKsGidOzgk1Id2FiXm2cAKbycnzGszVo//H84JlpAsw2TMdM/SlD
3Ra+svYLBFDkK7aX7StCgTl3lxlWMH56BkTucGQjZYJkWNR3AmQIZ6V9Qalo
+xzTRTE8AW4o4vgvtWaiKqeJr1UkAhhGtUq88CxDz6vzItTpBEi8Ad+cLnUj
qT8+l+e3CFDhSNecjRpDa0p3fzj8w/ThUGkp9msWZfhLRu9g3oCQFmPDFPcF
9LCTUTmGdQP6x1lpxtQZxM8+gRPfuwEnhUV2nMT64aRWXmztgQ1IqMu+eO6/
AfQ+yueaJtcGfKu3Mfim3Yq0JvSJi7wbsBjLbP0trAyx8UkmPD+6AXURTVEC
C76o3ZhRjUVkAwylWf4lsOSAb8o4JVZ8Axp+BBvUxVbB5dXcpFOnN0BS8vqm
XRqCnyd91Buwd+cCgzPP84xGKLPT39SW3QAe/R2puDNV4FB8KvXLxQ2gexgX
rjEmwykag5YzbEDZ4w837z9MR6vy41us1zbAN+Bi3UZsPUpxz82IV9uAP2Zi
4+hFBzJu9NaR0tgAZ6ve6PoPfYiHWf9v450NaFz5ynxtdACN3jiV85/+Brzr
uZTH+LIDhb9l0F+9j+V/aHK/9GYmuj0wxvjSBHsHX/1ZPiFWBbsO5ubvMduA
Ah98GPu5HmjW976XaLUBtyRMHVZudIHnR72d5+ww/jzPvgsYbAIdtZ+leY4b
8FP0kIBvSyGI0T8+EnfeAGJL+Gk2pwC0lXr5QJrbBvAeC6Xb3MhH/XcW0VGv
DVBnVfG70lyJUv752sf7bcCV8a4GwzP1yDlfVOBI0Aawnzac3OioQbcedPZE
hmzA+OJ/b1BnCRLcbeu2L2ID2LaPstPKkxG5Yu/J4OgNmBw2//RAPQjazYom
dn7cgHk07u/dnQEfOf8L9EncgFHmFOUAwVKwb6TJ/EnB1qxGugIsNaBiH/vF
NXMD7n8Uirl1qhG4+C9FUnOx+DvOVkgxtcBa15ySQ9EGaP+jXOjpa4UGF++N
9TKsnnMMCk3SbRApejzRsnoDRKZPazjONoHFSNvtL/UbYGlm8N3hWxVc9LH6
bdy8ARU22xdZFHNh35k9OdPtGzDxRtbWMz4clmfzDfR7NsCuBrGX20VDRbD2
ruEBLJ+Dp14IFydBsDylXGN0A0zDZPp3M6WB8Wq0Wdckls+JnnBp4nuQfi9/
8Pochp+pJcfrymfEojLT1Li0AYNrlm5XJcvR9IaHg+LqBmQ3FIeG/KlDBZ+E
jlatYfvypB88l3ORr3pL3/kNjI+n354lTWaC/i9z90LKBvS2By3WbDSBRCbr
qVM/MTw+/1nwDHfCH93cqYxtTI/4Ky2etlVgxXjiWgQDEYQe7P+4eTUW6Ri4
8g0wEUG326n4r2gTUizsIrPvJMLSiynfWrlWJMbC131rFxHUPN/U+DiXIA6j
J5+DdhOhbreX/aUjqbBVWu/avocIUpQ9MfjNZlhh26/NvI8IDS1t8S6bndD/
0PSECgcRnqQRFQ9bdENVVfFfL04isHastDOHdkHK/h3j9YeI4OJiMnTiRzuE
WOjm/+Yiwiuh4wSlj83gXJ/ur8BDBNyJ4bv5XHVgemjzgQsfEVYfo9ZH58vg
lq3a+XIBIvhRdpTff1YCMs1xbJSjRNgl/w0nFV8JgjzrS2eFicBrccjY80MD
sDooVtuLEOGk/FlRiX/NQG4PDc8TI8KLNCcOb2orzAosWK6JE+EyLvc64582
aH9xFsRPEbE3tMP8c/t2KOrx4bI4TQTtyw37/+m2w0fhEXzqGSK81bmZudHX
Bv4vRdqWzhFhbKnmtFR+K9gPOiUclSFCkp9zZstqMxic6HhuJEuEiplTTHpm
CFQ8udXj5Ymwe9B4+HtRBUiOWQtPXSSCJxeuYm05D7gka39xXcb+X2rfxZqS
BAx+7EO6gO2bdxvx6sTC2pRRVqQyEc4kJCgbMyTD6NlCr8GrROAUkus+cSkX
e6cw3N2nSgSOvzX6d1qrQPG28YK7GhGMPgbIxk12QDVHneX6LSK0PrEW7I4f
AtkxHuI9DSK81//mGnpiHMriXFw7tYiA50uTsKsdBWnjMQY5HSKM/8k+33p0
CIqEz79J1yXCcn9Dn9X7HpD6Fn7g0F0i0E25r8xv9UFuLiHO9x4RFO9zf8n1
GQNxh9vCpAdE+F390aGeNAMZMjk5JsZYfXJbJqK/LoDIr13n+02JUF3SYy6c
NwUp9ea1io8x/hzb+6nswyDk23I115wIOc+PKvNat8Mn1WO9PFZE8JCa23uA
uQt493jpBtkQgZ2b5Hfx4TDEDszO0p8QYd6mNkI2chK43l80N3+K6f/u+q5I
nhmIMojFjzgSgT/7l/+42ARwCNCdVF5gfnielt4tNAxhS//9LXImwrZDlkz5
QDewZxQHHn1JhHOmhneMe7og2Gb//rBXRLhhSPKIOdMLrGfsPmx7EMHaW16D
sWEQAijdR229sXgK5/Tqfo4BU5V41pQvEW6refjlhM+Ct3vgWbUAImRWyVf+
J7EEf5VWqipeY35q1RVbtloG950qyqLBRHD+OTc99mARtrqSuqJCiPBOdvW8
q+QMuIT9ucP0jgjNZtR52egxoOo8mHaIwPRs8EPdzmgUnh2pfrQQRYS2HuUo
x+pRIM5wrWvEYH5Wi3iu5jcGdskvntfFEoGalRz9Q38M1syGf0vEEyE3hhcH
2yNgdfKsf9wnIuTftftzImQYVvGh7KzJRJgMDc6ZcRgCs5L1984pmJ85b29V
Vw/BsvNNga9pRNgc29vnyDgMJpcy0//LJMLh8meO+1aHYPYfs1RzNhFCzrYG
iOP74X7ro4qzeUS4/nf55KhZJ0wGNV5JKiCCOlNw2tB4M+hrCHbsLSaC+2XL
Ws3PTTB6wF3LvZQIDLrtd27YtsOd8amJtXIiXLzRL3/5dh/0f5QzvVdFhD+H
Y7eepgzDbZPo7x01ROjvbDz07NQEdB+nOMjWE+EfayHXL9w0qH3X/pWGsPrU
9e/oOjIH7XkFPgebiXBlvxrtguA0XHVkZ/NtJcJIzrGpjcURaLxgE0lsJ8Lj
8pQYwkY3XNnq4DXpIoLrZuvL9ZQWqGsQTe3rweqnvRIYWtsBF/38Tin2Y+dx
UypNzX1QdWOpNGcQ0welwLAufwgusIMizwgRuCUO5JGPD0DJYELr6zEiDM1d
LTi/1Qlno7du0yeIMPxe/aReeQsU3DMYM5smQk0FjVxp0g6SghVGI7NEkFs2
naJmD0DO8sFV5QXMb1oy9s7HRuFEpqN90RIRdJrOsNhh/rO/9tiU9gXj23OX
fw/PAJQt6epcXCXCVpCaeKNfE2x5ql7z+k6El61mr+oC0kGJX162dQ3Lz1j/
wsyvVAisPim+G0+ElQt/LrV01EGvPh+v5gYRrrmRhJ5rdAEnlZ09ikQEabmb
SdrOQ2AQ8ffPBIUIo0GU8xYuA5AoRdzgpxNBXtCwU1S8C1Z6lpYe/iRCWZDL
/Gf5ZpCwHhnJ2ML6SbFyYvKVOnBkaWtb3ybCjo26e1TvBqhKrag8+48IXIdT
ovdqNWN+ycp2YiTBetzyy1JKO1ybj4uv2UECNgZ5bCLpg+BXb0P/7STB/o7R
OfGWYRjk9vC6xkqC2dnPvFPa48BVYe/4ho0EVuqyb62nJ8HwP9PH/ewkcJu6
zRXfNAmpxDt6B/eT4Mqj06WMgxOwFnr1hsEBErT01h38YTAOZ09dUPh0kARB
MWySjAlj4Nwpdmr5MAluFdHsFGzHoM6cW+AENwmM+Nc0rtqMAtMOtv1PeEmQ
sCbx5x/XMKgl/2Yo5sfyv+VBN51ugbDLeDJNkAThHAPRPOrvYHR6fuXiMRKk
f9u7EVdTg3hdB8e9jpOAb+aSIuudZmR6uLmzVZQET5rQzAmVLJRRUlqzW5wE
o48XDl9zKAW8VnqepgQJ7PTxxzmfdUHpz8k13DMM31lhLb6fpRCyYyL0kRMJ
8sgvggPmasBi39jZSRcSxLzUUhJ7kQ1KPCMjGm4k6DVxs+j3CUG8IkPOLe4k
iHsTZxulU4SoUgM8Cl4kUCo3UeqPCED9Cn11BT4kOJY9mfjlcDFkXesxEfEn
AYMW6XSKWjP4anUxfQwkgaxG+khIYxsY3u9I3/+GBOi4kxhLSAvImrepBbwl
wbt9HwUEPtcDh0PL+lYoCX5n8n5/5lQEP9yawhzCsf95XVA6kmEHzQHo3Gok
Cc5VlbnMROajhPD60QfRJHDi+ypnt1yHnONrXYY+kGDptvvDn0pNSDujmvfG
RxIMe+w95NXejCSKK+vrEkhw91+7xchsC2KuKzeVTiIBnYnh9+Pn7Wi+vXRH
1mcSLOzKK9o+3I2qhoozBNJIcNXiwXMR9z4UOVt4MyqDBH1/blq+w+b3J9/y
cazZJBAgSzrvkxhEquTcd565JGDKEX7QxjqIjv7Jlqbmk0DnOWfi3LUB9HNX
1ph1EQnA/ne2kns/GubMcF0owfTmmdZEtO1DeQJpfHrlJGBf0N/95EAvChRP
aeiuJIFF7j9z/mfdyPR88kOlGhIont9sJoR2ootXEpkr6rDvGWp1Dz5uR4du
JmSeQpjeXZcZ771sQYT/Pt763EQCHGasKxMNqNM4Fs/VivGfFPrc7GUVSrGO
CQ9pJ0EdHAmV/FyO3F+8P8/URQLjx4TJDs4GpO8VOe7SQwJ3VT+a95k2dDY4
/CW+jwSXJI2De8V7EVt0GP/jQRJocPcqoLdDaCUpBE0OY+ePCS+IvRxF9TnB
jzTHSBBfcLu86s44iikP2tk6QQJ5i6/BfG1jyKExMEthGtOnZbzpYNkQutXj
r144S4JWFV3i0GQXEhn3JYgskMA0JIkRNTeiv4veER+XSHDza9kOpxP1aHLd
U4ZjBcOXXJlp5FyHSujuEwGrJMB3xLeFWdSjEMZXbr+/k4Az/n2kTWoNsmB/
KeC4ToLuyc2iS7sqkNIRl8ZVPAmG5I4O6NwsRbzCTo8NiSSQCLbIqrpXjiiS
z1mGySSINLxQLlzegHrlHLNv0EhgGykfK57bhjJUnt6u3ySBid2FcwOifchb
w25DeosEGSRFU8W1EXTfwDYya5sE/M5wYDF7Esk8tr4g+A/jO9ri1XjHDNpn
bzkZxUgGzsGETh29KfTd1fzVbmYyRL2467NTfgQ1+z0W9GIhQ7bCl6Hch10o
IexhE5WVDNLafDuTLZuQc5yJmc0eMghVjPbv1mhB2mlGuxb3kuH5O7ckKZsO
dLLwQY4eBxnk0xuy6Tt7EcfTxn7ESYZLnCte/gm9iC4lSjl5mAz6LKw3Dn/p
QbOEN0feHyHDwTD/TJOlLtRcQLj0l4cM3p2JrmW9rSjL/j9TK34yaPPPdI4K
1KEwqSr/YUEyXIwuJeN+F6EXBP5sxWNkmOUJGT96Nw/dL/DpyzhOhmscBhsJ
cfVIyX6VxCFGBjO35A3z1Q4kJqXO9UqcDOuWSZm6XIOInVB48asEGZu7ueW8
IwYQOf+QidZpMqxsrXSw2vSgSbuXftVnyCA2cENeaV8Hajg9n3lcmgxZj2re
hYh1oDS8Sm+oDBksUP6OT7J9KDg/k7gpS4Z7K6O/hXKHkIMd++FHCmR4r3Xw
gHjHCNI/7ajQe4kMgUrua2XSQ0gRP2YkewVbp33ymOTpQcL5F32TlcgA4cxe
AqItiNUuKYPtKhlUPap2+7TUIoIkc8+L62RQWHGNtOWrQKM4q435G2TIz49Q
CSgpQbV5fQdv3iLDK5Plh6qUIpTyRFq+9DYZHhmnORzlKUJBkh8MBbSw9W6f
3iXjYmSP++39+g4ZGPul3N7wliPdPNN00n9k+HvFI9/xWwO6+KSt64E+GaxU
WXPjDdqQkKQEoc2ADH4mV1gzfncjFlwY59kHZOh/Y7U8y9mPcLkU2Y9GWH7E
f0be/Fi/sTV4wGxKBlNB+Q++vn2o6lS9l/0jMnTtjjlYLtKHEtePpU2akUHv
uO2EJMsg8s8N7FSxJINrB397+tMhZGO7jsuzJkPkf9wnha2GkfYp7QNHnpAh
hPL09oHiISS7XnbBx54M74SNIjLcB5BALs/9dQcynD6U4dsT142YbT099Z6T
YXH0P7qNTBtak/iSgpzIMNY+JaX+BqHBtRsdJ13JgMLnVbaKKlBFTt56lBsZ
FFNrDgY6FqMEmwMcf90xvQ0+qlg5WI18JZxlrLzIIBhX408Tb0ZWa9MGwz5k
CNrRY7uo3YE0c8BD0Z8MS2kmDDtVO5CMTdrnjEAyWP9hlLrX0oR4JXa3c7wh
w9uc/DMWXpWIYc1uze0t5odmwbg9TAVoNXt439dQMvCHzwjsSahAvdZy57XC
yTDJfV40nbERlZxMuFsdSYbO6u97fuFaUOwPBvfj0WRIZiyL6dBrQp7Z5smh
HzD/JaadDqeWIzPr7tbNOIxPncMZisnJ6NbJMz8eJpDh+7AOX91pczj7I2pv
byIZlAqTls/q3gKu7J/nZD+TYd/6wzitPb5o28pIPzmVDIduVD544PkeLYs3
u7FlkME/8Wkjp28Q6vwulvQiC/PrDrzuFzEZKMx62zKfQ4YrJY3H5LLfgLGy
/52j+WSIj2vMUGCMAvZp9wWTQjIES53PKYuPhNpnTnbJxWQoKX0yk1oQBjZ7
7H8vlpKh8kVQSY2nH3CnWbw5VoHh6321EvrqHnQomhx5VEUGpj4R3WQNT+Q8
djc9pYYMaoGPHXOTwpGIvfb5L3VkSJc3SXgYHYuGWW42HUdkMGzgXuX3TUQ+
ScpaZk1kWJU7+V9eZjI6K39xLq2FDHZXL93/RU9C84PStl/bsH4g6fX51+0P
KNT61C/RToyfd66Tt1W8kCKTyGuLbsz/1+f7h28GwdpH/sOZvRh+473SF/Gf
Ie784dRv/Zi/+FXu3FwvAbXevefEh7D6Ww7ZZfLVAd2MBVmNkKHROpan6nwT
pP/5ezt7DOPr0OZysmkj6MZsTv+YIIOEZWBIXHIJMJ0hWklMkyF8adPin7ov
FHd8p9vMkmH41PXyV29zkKnpkn/uPBl4WYW9pXVK0L5fU5y4RTK05oRXHD5f
hOoihpMlv5DBwyolOOJ1FrKV6JGy+0qGXX5sZRuDyYi3paUu/xsZHlY+unf6
URrqfFB3i/CDDAzTUrZMvLnIhVo2KYUjw8Kzybba/0qQWGi+xVMC1q+8pGZW
ZqrRqGgGtZCI6UtWNbzrYDPya0j0JZKx+AnLXpec25H03Q8c52hY/63PTxnk
70KLG+8SHTfJQKMX3/h9vw29CwqSLPlFhiPPDm+INtWhK8d8asi/yXDixdOf
/1nnIlz1S7XzfzG+4hWPBZ11QfE6z8afM1Cg7K6gd++DV+jWuo1ZGRMFGM8n
Z1z3f4d++j0mU5kpEN5wKFl5JhZl8Bt6X9hFAQMjmdN9veFIr1x3n/NuClil
2VZ9ePEGmDU1Eir2UKDvYu2RnqxsKFm9LrG5FzvvcbSW604VPPS6UiXHQYEF
ztjjF/a0AQe3nKorJwX09ykoH2zpg4aiM6NVhygg90Je0ppnGOxuij/6xUUB
Abtj0g2vh4F/WYiowEOBJu/Lb6UKuqHbjcfTjY8CDfNWK4MZtfDyICd7rQAF
hKz3vGY55wrieWwffx+lgMXwS+P1wlw0fm2HuKIwBVxWz8rMWZaggLnf5e4i
FMjf+nrT1bsEyThTr9aLUYCu1Xx3VacALe/DD/0Rp4CYsGgF8XsKCs/8anLl
FAU4mLXsWKd9ESjN4z1PU+B0XOW3VN/3QJgcf4XOUODEouf0Ua4MSHAc2M0g
TYGYVa6yp+QcUGfr/KAkQ4GKCf15eYsC2EppFPWRpcCVC1edNKqKIOtSdWmT
PAV82lzcQvTK4e5osTLTJQoQBxUFjv2ugY/TFd7PL1Og0Y9MEWtogNnFWrQC
FNh8sVKZcqMOBL81/tVToUD7ztBa3ruZYIpvu9xxjQLejsWkL7GxKIXS7S5/
gwJ7+p6JPj9Sjr7+GqjNvkmB5tkA0VLlMiTOMLbFe5sCeZd+JBVZZCAblmmF
EE0KBBmK+eE/ekAe+4LrH22snv5lw+dQERA4Vyrt/8Pw7DcQ53ZCcJbnB31B
D9ODl5RK7P52eH6UcOGOAQVuPDlmQ2LthgpRyovm+xTo9j1lWWHYCT9P/Sw9
b0QBt9kDK+X1rXBR+g85zYQCuLDCX3nMjeAuzyTN9YgCNkpTySTPSmi4ssvx
tRkFNDTe+6fnFwLDdfainxYU7J141bfDKgVU1A9sWFtj+rwiOnT/bSQE3OGS
mrGlwIW8Cvl6hkDovMtnd9ueAgOdtLTsXUHAZiyUV+9AAQdpiePv7sTAbTPR
dannGL8HrKP8/bMhzEZCItkJ05MNj9NMdxkMOpyxPuBKgZqo26qfteqA00Um
y9eNAvt0/vlNPkSg66HwjeJOgc7nx37J2iL44HdFzNyLAqOaL5iZ9Rtg+s1V
83EfTL9dGy6VsvXYvaSWdsOfAj+mGrS2v9eBcYzGl6pACpS4/bip1F8HyQk6
whJvKHC8hWGfOmM9LKfcfRj/FvPH2JXl8op6EMk2TGYPo0BY3f7UnUsNYFH4
cMEjnAIKU8cLfa83Qna5heBGJAXO7R0q405vAlytrZFpNFbfJ7+SL+i2gFSz
Q8LQB0zPF6flDpBawaHTaUblIwVu47fX2zTaoaTfjbcsAcNj5nd1WbEDqKNe
90STMP/Ey48OP+gAuRn/2JjPFJA//3XTxbQd3JbeTOxKw/6/tzgjzrgZ6r6F
cb3MoEDGpbGKXbga+IuP0lvLosAMQV1en6cYlKix7x/kYnwKufhdrkoH361P
I735FJj9arqqdjwZ2hhSOa8UUSBa85Kp20ocsO7KulNYQgHDppcuz9jfw629
+eFC5RQYCjaR6/vpDSEHSwYiKimgeWwo8SmfEvTzVO7bUUMBKJDIpz3RRxxC
dRov6ijw4pXYbOFyOPwn1hTytYECOo21vY7zaRAj2d6j30TB7qGOqBHHIpiU
7mHrbKHAtS1XHmpDKfAqDN5UaKeAeMtsvX5eKRjCWFBOJwVItceOMFgWQ+L1
6Q6+HgowXVDRFKjMgiX1BZbQPoxfjzcRVS99QURn5frfAazfDS4y7A1MRBYG
P/yfDlNg+JPmzVPTBSjLmNCyOIr1M2exy5v7stCaGYVJZ4ICvxP2i22XRSDa
1ZDcuCkKWLukyjm2eAPDcVHdpRkKMDDOf9c8/xLYmBq2xeex+n0YN358PB0d
XtJPd1ikQAiLR4v4agUSatzQqFrG/AHVl5NZGpFEUhD93woFoqRmu6QSqtAF
z2NJN75hfgauMdGiZKRkVHPj3Q8KEHxqp1/+lwrqiv8Rx9cpYMwQZryvowr0
+XCxggQKCHt2/FBdqoWHW/7KFkQKZF8qPyq+WQtPpgTW8skUaC02d/wlXwMu
VRWRNCoF7roxRh0QqgLfD1qXLm9SQLZmQn0uvwJCnL9/8f9FgWevfrgIxVTA
Bz2fkN7fFMiMCl+K7qqCFBneC4f+Yn5fYHoDIc2Qd7B07gEDFXb65HHSoQsq
yeqBqUxUyHsspmr8px+ah1ak1pmpEC/IzLD31CD0FXlMSO+iQtCP9nsOlj0w
+Y7L2203FYTdCRQJxTb4Yl8o3ryHCoZhHKOazg1A0FAb2r2PCgwf0kdrVerg
l+TSyzscVPDn+Sy5Mt0AzOxuwnGcVHjEFFn0+X4TNudx9iweosKDDSRohWsG
nu7c5+JHqNDsl3rQKK4Z8+s1fgceKnRMtcl9SmgCqaC51ko+KsgrX22sJyFQ
sHS2+ydAhYNWXDuvDFbDNdX9XDeEqKDcf/utOUsJaIlmNYQJU4Gl8YDy6v4M
uM+sbDkuQoVaoTBF23exYP5lar/gCSr8mUh7v/dtGjg0P6syP0mFniNTnvkm
RfDq856H+aeoEKt3XY9ttAICvdN2005TQW7gAvnBYjWEm1wuUTxLhbYCx376
SiXEXxm/7y9NhbVYU0UOjXLIEHi6o1cGy++++eTxM6VQtL0r76Achleo+qL9
WDnUziTrPlCggmmQWjqDRQ201yj8SblEBc/if1EiZxAMxQ2nr12mQiO9oT/H
sAlmXW01pZWo8C/wtgKrfRN8u8u8+VKFClqV7JfsjzYBWfZTUtM1KuDk25j4
Cxrhz2FZtd03qBCe/v5AVn8jsNL6ido3qRBxK0Qm514TcI5axsWqU+HKk8rs
li9NIFDKoLKoQYW0Ee29c3rNIB4Zt3ZCmwped7uZcaMtIO0oHfVUhwqBVk6J
AVdb4bJ2z6VKXSxf3snDQmPNoHbGbOWvPoZHRdYu7G0l/LfvT4jqPSokE7n6
anB+yBgffSHsAfa9tG8gvq4WWfdKzY8ZUWGMP3dNPa0DvcjtCBQwpULkxSKc
Bnsr8go2PWP+iAoLkh20mF/lKNj610SeGRY/s2yDJ9IavVeL9KZaUIGPvf7H
U95CSDpx6qSiNbZu0Hns8rIYKmol/nO1xfS3JSnB0FgE/VoSHmV2VCjsmRFP
MiiAr19OZhKfYngz1bWazpTAtsvJIclnVOjkiDA6FVEFB9lP/rZ6geGtw5ku
lzeARLK4aLozFcaT9atUG5tAWUZca8mVCluZNLM22SYw6DzxUuAV5ieXxOzl
EwieGp5IvedBBbbrZPbwtzUQSBTri/aiQtHNoBc+beXwyV9sc8iHCr0X49yv
HS6BMm6xY/v8qfD9acb6nFsu9OSJqt8KpIJKx9+fRUvJsKwk6hQYRIXF7bbt
V5cd0K9RkaTmYCpI53CbdF7IRhzWIl1/Q6iwfzLeb/t1BTrx5zjl4jsqnFxl
msSvYvNtxHEBlwgqDLYsLL6/V470RI/fKI2igm4aZ1P/t1T0pFrYcSMai0/U
+Wb0xhf8NITjT8VSocrk6o03YhnwcelYm+VHzO/rMk/X32VCidOxjdQEzM9i
imxRT9Kwd/UxnsVEKlRvhz/7lZIAi5+ErvJ/pgKZyWyv5p1w+HlOyM4glQoJ
vl/i0LvnsL/96If36VQI1uVoCxhxRWL3jzYNZlLhlbbxE++kd+gyQXCdPYcK
CrQ9bZE5AUjXV/DwzTwqWAnurek/4I5suQQhoIAK09vdmUc2/JBvjoB1UxEV
xL9Kz9l2J6O4KwJRf0qokMGqumOIsRIVDfPXK5RTgSBq+EHrVAvqsOD/5lRJ
hXLBrrcG/7rQ/BbfgZJqKnDFHeUoW+9FtDC+S4RaKtgXzMnJqvUi9uN85hIN
WHwetvhk1y50vJL3nUUjFU4Rqz14ilrRRXXe6pRmKiiKFxG6CyvQnQWeL/Ot
VDDIPUyZzn6DrJ7z7OXrwPybpfHUhjMXvHbxyN3twvTnS1295FsGMfHcD6N6
qLB9/uFdY490yD/D/XagjwqsCeUUd5ZQ1NpypHzPIBWIZBLtdWcpmr17ZOHG
MBVkt7gv/OxCiLLOtdt/lApzlkLa58taEJs31/nGcSrculN7JnpXOxI+xGW0
PUmFt4ZR2zIJ7Ugh6/Br+RlMr+8+sejoNSNtxcPFL+aoMOSiPlezowZZDh6a
KVqggpmkjNVCTyHyNDu0E7+E6dO8eTZLOhNF/zx45uQKFa7uMbNHMiUoL+Tg
PfNVKjxp4+qxc61BLUIH/T5/p0K/Pa8B/mATmi7jzJ9bw/pBEHusA1MTIqlx
TvDgsfqmWlNK9tYh1rkDjPobVCDx/Jfk1FOGjjoeOBVJokKNvdvIsnkukt15
QK+fgvUvKc/qWrUcpBHH4cVGx/T8LU3ckiMXmZ3myFb9ifXbgHt6Sddy0f4z
/P6lW1S4GSZTptOWhmrOipsI/aGCWqPCasS0JzKTlrkY+o8K142YHoUKx8N+
GaXDW4w0YCFfUPj0MA9qLtwmWjDTAN1WXaEH5oOZnEHPCAsNbD4s+U7w5cB+
BbMMpd00cGvpD/WgpkLNRQef/D00ID3R0dd0SgRzRXdD3n00mCcMJjJ/igGO
K0FyrzlokKz5iiNfORBq4D0nlZMG3mbS3+8N+CJz5WS86WEacDvvum32OxNx
XM3r7DtCA7V2qEvGl6Gaa1WpF3lp8HvNnT3xci0yV231zOSngcAev8k+x0rE
oTZ479BRGmSbsvhP3ixAtTdnZXyO0eDIUvCLryejkYX69/2E4zRYLLv9IEwy
GDg0qGv3xWgQ2XniY4BSCtRqMrR3iNMg1kbl/dmhbLDQZv8sc4oG9cYweedU
LnDocLt/Pk0DTa6h2GvHP0LtfyJ3952lgVnfgmX8+DNkoXdW+pU0Daa3dl4I
n0pAB+4q7v0uQ4POFvYJn8YgVGeg9l1XDlsf4Nz3Hn0Ei/u6LU0KWD6T8ev3
/hTBAUPTRClFGjC8MeXnpVVAndGTl/FXsPxu7zVo/1MGFiauuqzKNDj4Z8/O
H/eL4cBD/zNOV2mwfWo+YOtfDtQ9Cmdbvk6D4bq2txFbuWBplvBVU40G5fW1
sb4ihcBpkdVYe4sGbJeDDlJTiqHOsixeXIMGI+/txk6+KwNL60bnaC0a8PR7
do+oVwKnbe8dJh0ajDoy9bXuq4K6J5OST3VpMBAwcVvjJPa9/cquWX0aGEx9
Ki/++xE4HYjLavewfPIrj0zt/4TqHbfryx/QAC/q1nedWIL5nzVO2JgGpZUh
eyQ+FCFOp0Mv3pnS4NbweuOfiM+o3llIa/sRDUxlkZ52nTmycpWUsDbH+OC2
deeYvAScbvI7xy1pQG2se/EhKhnVv7q2qGJDg2DtNabeV8XIykO7tvAJDRiP
zYaxW1ehg16GMfxPaeBSLHNDt6AUNXhbOb5xxOrHnC5MoGYjK98Xt+nPabCK
7qIjznHooL/3icfONBA5x5/zZTUaNQSEMA260kC139L0sehnZPU6dk7xFYZP
szrQ7FIOOvgmrSrbgwbilzcqo66XoIbgoigub2w//iylW7YSWYfU2fv5YvXb
srRkk61Fh8I6bxL9MT15hrO5utejhnejIkavaRDyiNb/SakaWUcs/ut6Q4Mo
BvE1jrxSdCgKNy0bguHntCRpReSjhvc/y1PDaJAnKjZ5oaQQWccwR3BE0GD5
oMJL3K4KdCiW44lHFPZ9taKjuV8dev2sqKgxmgZOM7+O7jZsRFu3tWk7Ymnw
gHv81LOIBmR/gqhw4yMNgnY4Kvoa16AlxnDP4AQaNCN1HouCMqQ7e6alL5EG
qaoJ7iM78lBnxcCuA59pQO8MUj5eHY8uRTy9rZuK+Tfu96tGJUAFtvsjPqTT
wEHh4wE/hQ9wTLVwbDqTBvw/ftkPK6XCeyEtXsEcGjyzLjocfDgTWH8TjB/m
0cBKuSnWsyUDXo2FpaYV0ODv7mPdcfzJQCiU+v6tCMOT1mKSdUgRHgX3S54q
xfIxcOa+lv4ZjZnZO9qX0+CQNWvYlkcxUoN9FcWVGL74AcpnywpUy1OwRa2m
wUmVf+utKlVIiqoB8nU08JMbU4+aqkIp/Xi/Vw2YftJ+NYslVqHD2aGdDY00
CF2kG6scqUZBfqf3MrVg/c17n0g+ezXaNuq7c72NBv56DIlE0yr0VN4uJqiD
Bpz3chNPq1agZc69Mz1dWP9kFhxRfleC9PF5R/f3YvU8+RT3mKUAdXXcNtPp
p0HNgxNfXxZkIcUUXFb0IA2qR0X0D1jnoiL3EPzkMA08uLtsN2lF6PhdSWn+
MRqUBH7ff9i3DMWc63U2mcD6i55QtbFyJWJjf1KbMkWDxJS38W9uVyKP1T0M
qzMY/9+S+rsEKxCxMffayXnsfFxq27+aUmQWr/7mySIN3GUepBVtFaAJp/W+
wmWs3pfWe8dCU9Et7beclBUaSBFJbO/Fw1CDxKm7st8wP6V/YA0+5AXndvbE
v/yB4RnnTZRzjIG0BZvFunWsn4ixfkh2TwbuGjZRBgLWj3kFHqsxpcHb9znW
V4kYH0fVKHkD6fDX/lZBIJkGEnjlDqf1dHh2c43cRaXBt1KrlqjYNPh6PFhu
7yYNTrgqLtZufwaDvyfdtX9h5x8oqup/SYDeya7GqN80aHv789WL8SiAUuud
E3+wfv35XDvrZR8oCd19i5eBDmdvHPcvPPICiVplhxkx0UFJ747enpE4FKty
cySZmQ6DjjncoUyZiF3gx5EVFjrwk3h3J74qRF6bQYYndtOB5fZNk5jIYkQe
Ev9ss4cOL67w6UW+KEIWeZ1f8/fS4boMa4HPdi6aCrSSIO2nQ703c+JOrnR0
+yHrUxnsZRmmYKcpZB2H0KWsUpdDdHhiYb0WEu+JpLnUftZw0aHV9XxWZLwv
ZBC/Kf7lpoPpopHdVEUM8PS89lHmo8PhMWZb4nY8hKSfaPcXoMNUpEl7o1ci
MHh3sHUexeIJrTmmSyXB8/uWWnuE6bBTc3bx/PYnWJXZ9V5ThA4tR1mq8gMS
AO9e+qZZjA7uFhEejCGfgNpq4iV7kg6N3onTW5Mp8Jud3SnnFB20+5e0BJ8X
A5NelY2gFB2kNqX2KcdXwe5PZqaRZ+kQ2ntJKzm4Dji+cuiznKfDods2Yy9x
xXDkdL262wXs/JBXrvi0Kwg6WSsT5OiwVeo7R0nPQaL1h+UeXaSDXKC+ucy5
IiS5s1lyXJEOHLIXB4YYwtF5DXvhW0CHaFWbqodhGXAxmpe7QZkO5y++TGK7
WQ3Kc+17pa/RYc28Nz3YsQ7URJ/vyFClQ+k8W3q4Rx1o2h39xXOTDrg3PCPW
Z2tAr7yHEKpOh5qE5P201XIw/OOywqhJhyKjNhfhxSJ4dF1k2kmbDrTq5Idj
qVlgHTo48EOHDpM8oWjkTSY4jLm3GenRgXzzno8eWxG4CJysHbpLh8y0YwKf
tErB03ys6Pp9Osjns2+3hJdAQL5PRrUhHbyjHlf+VxIAIbTTCadN6LDi6/B9
LjgPRV2ejvj8kA5s5rG7qBZ16GNA4OvDZnT4manw9F9rDfrcJ+3xxoIOI/Nv
i7ILClHW4YVnf6ww/bq+ehI84o0Kjd5aOdrSQfm05P1xmTSoSJcz/mpHh9NX
v/i86imGevyX/+450OHuAEsH95EKaL0QfrPvGR2Go+kVl1A59HgogrITHW7/
Z7JNWcqE4bbvMuUumP7v7vDSbnVDU3ujJU660SHn760K/vfFaFFPWeiTO6Yf
fJd/VmIz+vYJf/iAFx2Ost2f71jqQYSvcXsCfOigX8bmrfV3ENFOqzL+8sP4
FX2b1uk8gLadyPQngZifnGY97y81oR0NibjFIDpYXeT8/DAyCrGxqC/rvqVD
wqNrz/6WVcABzc2JzlDs/N5G8xRyLXDHpPYphmP5vuuIcTKuhqPzWi1FkXRY
vyLHFPygCMTEtqtEojG/HCs6m1n2DJ22zyqI/UAHdTHvd/t3VyCZCt009o8Y
f784q/DnWtGlvwwfvRPo8F2RVHrhVgdSUc1/R02kg09uOaHMoQndDLsXYPUZ
01e98APbZ6VIe3znq9lUOhj+e/RIODIS3RUscdDOwPB2MPmUSLxHxhbGFq1Z
dDAYzJ1qckxG5gVshvK5dFBpO24R+ywLPaFX3MnLp0OkEZNDk2omen7l8Q2h
Imy9UPNkl1Iycgvcf/l9CR10x7mPmXtGIJ/+WmnWcszf6qrZjNGvURCXlbh7
JaYfk2cP3+Ci0TvjQ4LEajow3RVjdP8aj2IyGg+a1WF6MY/8U5McgxIIT3ZP
NmB+eqA64tueBqmyPP/UmzB/9h/3PrVWA8/u3jOOaaHDQ7F8TfvnLaDiGle/
2EYHwk2ZCya5TXAgbor/VCcdBm4MploHl8BiNY+7UzemZ+FSrn4nQ1Q0fW8G
9dJhc32i9PWHYuT1O+4i2wAdep13ODOWFyFN/uk43SE6MCt+/RAfn4kEL/P+
ShzB9KdEsF+biUYEo/sGP8bo4PrxDnPnzzeo3vNj5flJOmjKFd8XSf+EQpKm
uTyn6XBmz9Ro6tFMZNjI69w5S4cC+8Nya7J5SHLp/hjnAh2CQp6F9k1+RL8Z
42WMljC8K0kBvbyh0C08E5X5hQ420UsdI6Rs+HiVj0L6Sofc1ICBsDNFYGP2
QEfxOx1iVzxuxR9OAIWA+OLANTq4mVyzcOGJQKwZMxxDODrYms3vM8beC5Pt
fA58G3SYfX/pLa2gGGV9ezBgTqJDiaRK5PGz+ciFNUGqiIL1s/9Yg3RqUpHq
ydnQLRodZGsk1Lkfv0dct/jx135i/d/him3G4zC0amN4+90Wdj8IO2mtO71B
5W8Tcqe26VClJFC31RqE/PNm2UT+0UHvB8sQA6M/0u3jt7Fn3ATu56Vylwpe
IRGCYVfVjk3o2xj93C/jiyj7PonvYNmEILHBY0/kolDzmbnXGqyb4Ft9eOPn
nmIUqS3w7QPbJlwxUuVb8qlHjxyNVJfZN4Ffsd/5l0YLOhf5KV1y/yYwnRT7
Qs9oQgylc8wuB7Dz09OMgzoFaHBEwKzpfxVXdzxX3xuvKLJSGlYqREVGJGU8
kpFVUglfO9mSkWSUTVb2+Nh7ZO+sg2RESKFUiBSysj770+/+/jyve+9zn+e9
zjkceJBQFElOqU2H7C2TN8xH8aA7SZ7yPNUCzkcy+fU58eComceRUNkKijJT
/tnceNAnplt1C9UD2z2+H0u8eGA8GhHglpwPU09MlS6ewMMu+kuiPTrqqDwl
M+v5KTy4vb+w8TkqEfm8nqL1C+AB7yRw6497LtKe5DM9LIQHBrFHTgiKEC/Z
tM30DNZ/4U3fhfOF6A9PFm/JOTzEHnnFeiU3BzXLT3tviuIBV/I7qMoPh8JN
TnxVEMfDo6kX1bxZycjomdmVMEk8cDBfFrfKKkFns7JSR6XwsN+caHA7tBYR
0DSBVwYPBjIUlzhSI+qbOWFgI4uHj3IxYZTjtShlt3lj9RU8ZPf/CDYpjEc2
/NlHKfJ4GA+uOSXCUAAy12YeqwEevrI76kndbYJ9VifHYq7iYcRIzi7MrBXG
g8ylv17Dg5cT54yBQgsUFGTHn1bD8NQuEfySVw/uPTMbztfxYB4cevPN6xxQ
+X1Sr1kTe+5UVxD/phgdZrSoptfBg+8XdcvWsx1o7kwO+82beDgip0Oif9CL
ajR+OKfewoN1BvuFTK8uFGB/anjuNtZv5uBxQVoFMlXqq+TXx4OP6ZOIDZs0
uHLUOcbCAA98ZlH0/743wNHlIy7ZRniYGfDPuh9QBX87W29NG+NBz0e4qMUv
CQaT71/gM8P0N/ysTSsJh4qdmDhMLPCQEin0kk+uBAVdq95Mu4+HZEHGnY+X
C5E5l8GnyQd4YFvfsjtRk4Xk12h1XLZ4+F6cZGuXGYM43xYkGtjjIWG6zphl
Ixxt4bQ9kh3xsGF4VKLxdCQafrSpP/4QD+WMfG67RqJRqRru0hEXjE94f/x2
SDQK4b3KeccND4OtRa1dzYHIcuM3Ie4xHk76v7J76uCGFPuiv3x4gofo1cOZ
S7uMEHfmxWZ2LzwsUS6Mv3kcgHbcvuFu+uBBxXafwU3pFDSqEegd/Qyb38BH
h5CQg8pPnDN+74fx2Rj7XiAsF4Vtj8izBGJ+qFN6J8ToDlYDT45rBePhKAW3
qVD1CpRy+GgvQvHwedp27OOfJuB98naq7wUeMmUzD8RwtgJB2xExROLh3Djt
Xd7xSvjEz5GtFo3xG0Wc+nf7KVQRXvsFx2DzBIdb5W7loYghc4vuODxcNzmS
WXQ9HlnnMyjTJeKhqv6zVjBHCSh7VfArJ2N4uM5lWOxBwKd7l84/FQ+LZwvb
iy/1Auk0ZQ6l4UFd2v3x40vdME7O7aZl4ME+rqtmXrUNaj5oFChk48Em9X6d
VHkVRBetB/vkYvz06rCmN+eAnW+ydUs+Hmi2f6LVbxaCym1FdVIhHoqrt90G
dlXAybPzwpdL8MCudL5XpbsGKLQIRs9XGF88j78001fB508XFhvKMT/1B5nO
Xs2DutIv/duVePjhfa9eYyoaYvz8SqVrsDwIHA0UuGQJjvrCEW51WN6N/BNY
VsgDddEhh5oGPFRoM9vxWdQB/57H2n+b8MD05fwPHr92oE3wnJdowUMje11Z
x/FOmCzvYnVuw8O6jl7Vrvut0BBot1qOMH13BrN6ltVBnCH78HInHu7bHBz/
9q8EHoo3Vop04+EAa39rzq9C0NxrGmPfg4dJbs68ZlopnP5K71LSh4c7wVF1
+9KrYFf1q1sL7/Cg8WgHpzZZC99C9C4Iv8fDl9tly6kX66HJmHjIehgPNcfu
5RjM10PChezN/A94MKQnldzuq4dHjOqf5j7iQVKH87SEcR1oTa3U8Y/jQUhH
LcrwRTUI1SUkWnzGw72YSH4O2TLYEy7nkT2J+aHEXYzuNZafZrP609+wvH3E
ymqumAHNF19c4pvGw9O7ZsSKkFhIYpbgNPmB5Qu19C3drCu4/BgnpM1hfnC+
/1KsNRjNCIaHM//C9N2vYItdEpGurQKv9wKGN2mJlbyvEqFX6+VLS3ho+TBp
bG5Sh8TW8sBoBQ9xLRx/9nvXo8wL9z70r+HhJ81M6VRGLWL1YLp/eQPTD5Oo
Dkt5BZbfbVvFW3jwlOTQ4PiaiZYpj0I48Vieaar+PPngBRgrCXKGEfEQLm/L
pfu8DAYCJ0rwZDykrVOvmmw2wpXecDkbGh7cG7XwmgutUMqk+H58FwEKQVk6
oa0duG/8NVWjI8Av89XQv7xt8CI2f71+LwF4L91IL79ZB4RP9wJOMxKgo6hq
iXsmA2w5mQ8nMhFA7tCI5Gp5Avr8X3sBPSsBLlg9k5Z7U4rUs1wuuR8ggFV+
gU/T91LUMCvYP3eQAB7+t2Z1PuYhIaHPRrcPE+D8K5LSv+YIlGgXsdx1lABJ
wXKDhsa5QF+u+OwCFwEGhJeKi55h+b3+90AuDwHOXn/4Xxl/O8xJFeQc5CNA
T3zuSOjdRtB7YiDlf5IAYQy8ZiPd8dDVzPx2nR/r5/uhofPOpUiS1q5vfpoA
krcTCIshDSj7quvCsDABSK1f+z0HCxB78GkvOEeAyPgMGd/EVHje95m5UpQA
+InMQY8jzbDKHJnBJ06AvqlzhPCJt2B6E8SjJQlg8KJ7baJ/EIbiNjqoUhhe
znTaGRYjoDBeoOckg+H55w3bish7KOMy/PlNlgAfdSJ/cdzvAl4TFg9tOQIY
p/UuKNOXQkQ2YmhVIAAiCY+IDqYg0pxrqogSAXiicNyNN9OQvbCQSJoyNo/W
5WMv9ELRF/svrUyqBJB1meWzLA+D6xWRN7zUCfATE4b2dCI0/YWZRQ0CSBsm
b+UzJoPwxU0XQ20C3Fe75XpkOx6SPAvp+m8QwFYQDVzrfQb7Wg0TZW9h88uz
UUeLItDjfyzCxbcJcCZZuTNfPQv9VO5oOqZPAG2nUzwa7bnoToibZqgBAXaV
z7sSOK6i7n6hbztGBFgQ4x47LV0AUqyTTtYmBDgRV5crdLcOcnWj/o2ZYXgV
jHz5FlEPhxKUYlUtCUCj+SRZb1WB/8Qmf70VAajR2q64kAJY5y6qE7QhANPn
wQvbvAlgbmqklmBHgLsTx7beVXrBcA7rZzpHjG/CAPVEyANQnO+wc3tIABWV
2dmzaaFQccadPPuIAPkX9l5dkauF447CUXpuBBjW6zE5NtQJkZWTfF2PCSDC
v+A1cbYXKBtRVZKeBAja5uU2sOkAB5mryjleBPALC+XUtXGAyadbH9l9CcD1
yWOLdw0hzbaiB37PCTDv3z3o4PEOBXxZNe/xJ8Dohahtw4ke1Lx90ZgliACG
pH8sTrs70MZB33t6IQSICunKOO5dic6JdeulhBGApdeYTTEqGVlqMt+YCidA
jZBJmpWMD8JZ62kIRhHAvLZYf8VSAY0GpKrYvyRANo+DyTE/R8SUNQNVsQRY
3l//Zp9pClJuEZbbiSeA17nmZ7j4YuQ18VBGPgmrr2GVKA81qGazXjIghQA+
UZMtDTfr0dIBqmgfjgCs7Qk7dDZ1iF9U5QxbBgESJ0595hquRkbXIwTuZBFA
xoxSYdH9CsVZjfLhcjB9LPl8F76Sjfr9uLhn8ggwOPRZ6ffGM7Qrw/yIUCEB
Jj36DcNKIkH2dRG7YzEBKjsX2uTncNh9f5W5ppQA4koLuLHn8VD89yIDoQzz
v+5r43u/n8MMq+8exUpMj51fvwWbP0Sc57qpgdUEKJZwVSXZeSFdNWZify0B
lM7qePo03UBhlnpbBxoIoPWnkld6MAA6nqWu3W3C9N/1PYFbJQUIuJmltGYC
6B1+ulq0VAISjcK/frQSQOKGkhRbey3Yfnz4Qxhh+n372V1T7TVkr9V/c+ok
wBWn4p/fS5vhMzN1ovYNAZo1tJPyBxqA/YzKR+JbArhPHkjr5KiG6yoRQ9BH
AM606yW8ffngZz7aH/yOAE3Mac28NfHQ5MP1dmAQq8/6W5iZ+wxaTzHvODhM
AFy6/Xj1qXh0pr6o5d4HAsSFhs9Wluci8w+rDRkfCTDztmAv899XKGXlYs3c
GAF0mY1Apbkajez3LT/7GcuXxZG9klJ1iFGou9h5kgBiD3iEtW7XISVl5vz6
bwSwvune3SJVgzxN9bLIUxhe6j+ffxkoQ1VeqbirPwjwp9N9o4o1Fy0kzSSG
zmH9nam+4+SkBSdrhWPfzxNga/vNSzr5PDAYfhjJsYDpefepMtHRaoj5Ux9q
uITtF3Gds0ZB9dDLQA3IWiaA/DPvfcfEa4EmoPJsfhXLq+tZpsVr5SCjFPFU
5C+WBwUiv/2+5sFD41F3l03M/6VjiXGPcVDoyfWocRvzb+GZc/jLsTCVYO5A
xRPgszuHoV5xMBytLrK+RsL4dH3XcP7Dc7jxftXiBQXbH+Jzn9qfDISQxYsm
wzQC9OInN7NtoqF9r6/Bkd1EUL/cGnCLORV2TnXf/o+OCCT88XZ8WyGIKTLf
zNlLhMTRip14phqwNtLT/M1AhEvbbjbG042Q6ZGqep6JCHs59aqvZ7fAeNyM
khsLEeZ/yjdyXW4Etkph+ddsRHB0mzl1IrQK1AYeXvrHTgSZhKTtn99z4NDd
rrnHHETYt3jf3/BQCHyfOhKzfIQIfhbNVZ7DMqjY1k7+PicR5D4W25rfC0Tu
G60LX7iJYCmU6zx1JAEp+bAn6h4nglCq2J1Jk3zEss/qau8JIuSvPC8XFcbu
yy8bVxT4ieB1zStgaa0G5XEx4+oEiaAnalzLKF6LHuaZqokIEyEV1xfUfqca
XTlfs5Fzlgis26c4yDzlaF/j3ixOUSIYL/ay0AkWoVElQ62XYkTw6TxIuT+d
gzLfleH3ShLhuKhI8NHeNGR3Z1e+jxQRvk10goNnKpKeuq27eZEIRoUE3bX1
XLTLtohiJ0sE/Zh7wkZFJWjwL6l45goRAoa2kVBFBUr2vnH3ngIRmFsEuelb
ipHl3tzdQ0AE0434AzzZGUjs5Xa5ijIRtqStvnI+D0UkTg2jFhUiNF2VPXY5
9SV6m5u+74I6ERhjOHZTN/NRjOh6TbHG/+tLpp15VYmMG66ZndAmgufx90T+
3ZXojFIyc9INIijx3ghmbneAzf6lRpZbRFBWl3jKZ1wD7bcVrQJvY/2bqtzL
V++A8O+x7KS7RDhQn8fd59sC+jbzrY8MiMC/+4azrGUZ8P+VtftthNWTdPWm
mNmhVa/II6Ym2HMdc0rvvTz0mn6m85MZEQTfVBqH+BWgoGiph1qWRGg1lo7L
pOUgXc5Q7i4rDL+/THibX3GIN3eyR9aGCNL7GQhJpiGwICLmVmlHhPUixjed
2zlQV+9/QsiRCApFpIw1fCE8h7GB9IdEMB9smvA79RRp9p/x5HAhQoqlR2e+
TS06ettHMNyNCJp3n23kL3Wi2W/DI7s8iNDde0f6dewbVG4t4PvEE6uvpVp4
LqcNea57nF31IoLY5ZH5x5drkIrXuzErXyLQl7iIf+otROz0fAFfnxNBhVmD
C0XWoq9RLmJ6AUTof/7K4sntVlR47O1kXxARqDOOeuK0DuSawxkKoUR4tDif
sh5bixRFHKUaXhBhV4OnsyHXKbS/Hk2LRhLhQeeR/GyZavikyBGZF00ESthY
2wC+CrL7rGW5Y4kQM6b89bnoI3DUa/4ZE0+EbZZ+nfNDVUj2G2ssQxIRJMue
vBVabkH01hYKz1KIkNuut3QpoQ4Nr9UtbuGw9xc/UF6M5yHcU8YkhwwiPDzb
0OVk9gCs6YyVZ7OI0HfI/MHhYld0Iapy1SCXCNdFDGtq7iYj2lG6tOF8InSG
x/LevJKH3mXrq6sVESH7ohedeVIcSjxXutlagvnvro9yPMoA8zpqllQZERKa
by4xZtaCqOIt7dIKzL8HciaWDFqA3pfZ60g1hu856hXTa6/hW8vbIr9aIsh7
vT1p+aMW6kjPx/7UE+Hs7+9Pb2cXQ+TlK3T3mojQYxGRESIdA1aeWxJdzUQg
nEhhUZOPRfKNFabn2zB+nUpbD64VocM7tpEpCMMrre84I3s1+iMt0EzXhekl
d6nN4mQt6nL7/vthN+bfJNeI9+G1CFeTfGSyhwjcet/Ew8JqkOvfW9dU+zF+
enbseeirkKYEi0vVABF6g15vqw2XIH7nnkyeISL8lBst8nfIQ6Ryv8GQEUxv
tBGD9w8y0ejyFdLfUSLkiZ59Mf0kFZWKbAubjBFhR+P45MXRJBRgX3m3bwLT
j4SEHltBMjIqsQuUmsT8wUY4tqs+HV1YEKjO/EaEjdiZg/EZ2Wi/8NTU/mki
NA+E1mtE5qCZByksj39g8wucPBcxno6a8vWuzMwRoY6DndijFIti5lhstX5h
fuDHWeW9UUa2/L2JDQtEuGMyRwvemwZKFv5vTv3B/Be7spC5XAGc2XJ/I1eI
MKS3JDR/tRHWp7b5CGtEmFxWn9/pboG+41Xa9zeIUIqLCjf51gjZxvZeQ1tE
4Iq0lnSJrgHPNMHiy3gi8DWIWPaGvALdyamxfCIRAr/XSdRzVoMwVyodOwXb
T4ZDZb4ENALt3m1JbxrmN+9xOvvpVhhPYjX7tYsEnjwsS1rVLVAx1ht5i44E
fnRGh7zvVUPI4YDm1r0kOCSuyW5jmASmt+UXhBlJsJj0DS7VJCCZuJ0j8Uwk
6LFfH7XcSUFsH6qu0VhIIJw+36JxKAH9OuDgYneABCaKAgIFxBDUfuN01qeD
JGBz3P3o2L4AlBQ1PQiHSXAybuJcq1wEejiYSio9SoJjj3f2qQ4kIVXmO2eO
cpGgtGq+u9ErH/Fqsun785DgalS0pMuhWrQV1he4fJwE7zkWFvU+N6PB3oDq
eydJ8HF6k6/GA6H8fQrTXfwk8Br+zjMl0oh8VPEsYqdJ8PzPwTxZvnx0J6j6
SqowCT5rK9+dCQgD0TcOtvTnSDD79ks9Z20O0O8RSnIWJUFX5ebQgk4ifFOa
eTMpRoJd6RaOv10loO457q+qJAnccWwqTCOxKLL9zolqKRJ06AyGvokwQvep
bDq8MiS4OK3Pye0SC1fk+71CZUnw7D+qxt6X2XDIO7B44woJktYzwo/qJ8HS
a4VxEwUSPDp1hf8kpwvqIuDp+gFb10Qm1dZmItylGklpZRL05Wn4t7bmI1cP
R7MsFYyPnxdNo0USkWa9UBSTOgl00y0/2jjeAf6tmebHGiRIIH/5lRkZC13M
4nqNWiSI2bx+P57PA90X8F0k6JDg53shLdlXeYhebsDvii7Gv+bcb3mVGpSv
x8Xpo0eCyOAX0nbmjUjF3qay7Q4J5od29Z6XrUc//evV/umT4JJV1a43vNUo
KJVuSsmQBFyrKUwjTMXodPWtxwH/kQDF0fjur2ejnr4slm4TEmRYyuaquKQg
65mVvL3mJMBFHqgUYY5G+whycuqWJEgv5z30isUNFR4IHw2zIsHaX+F0qcdJ
oCb82e6dNQnwg6l/XrsXwm9Fod0sdiTYOqoq6zf2CsL03VN0HEigrSfufOdd
Npx52CX+0gnjI6yq46lENuoLZu8dcSbB+Yr3u4PVm5FdhqnpIVcSKJr1nvdL
e4uY6su2b7uTYGE1Lv3Hnn5UOkiKTPQggXT1r71bnP1I8+d1wQlPEkxy+yrd
8+lFS+SkFk5vErSHHccRirtROMe8npEvCUTVnxisyXUiERGppbTnJNij+uLA
wjtMn8r+/t/9STC861+hOkMtcjQa5jwRRILRv1F/J6EEsbgerzIPIcHAa0fr
9+ezUdkLB/XcMBI8jDLdLRISh7RzXk/NhZOg9lHEkMCFALTSxOBxOooETW9n
rmXXPkXRI3dZbV6SYD02XNR5z3MktpCXXxxLAmjjVPX5FIKG/v2VW4onAeFB
vZXph2jkfEzpo0gSCTQdN+ynK2MQu3i0vVMKpq937dqJi3GoSu3b7kocCfQl
e/syGpKQrum51PV07HkIZ2TF1xy0/thT4kIWCbi5Pwgd6S9FMVE9vW45JKi8
GtL/0KsKSRYcNqvPIwGTxuyz4KUqNNpqubNTQIJlLfS9ySIBuX6qipItJkEr
F7cu7wDmh2WaoFcpCZYMn7f0bdZCDZ1Oa0sZCd7er7EUZ28APZ6029QKDH8v
4zUx4RzYvLC4pFiN8U+0N5R/mYESNC8F+NWSQEoKIlp0G5C0ZTBXVz0JDncx
Way8bUKfnn6somvC8Ba93JPFUosex566rtqMzc81Z585XYCOljhPh7SS4Mch
kxvvdIJRQ0ebR187CSjWCgX1ApZI/zMzG1Mnpqd02W3ZcUvYWTMs0HpDguPX
25LGw9whiaFYPuotCc7w+/575xkOl07sfBzqJUH+Yxyh/EQ6fJZRcWB/h/2/
68AKg3EeeN6I26M3SAKJcgGejPh84LSeSY0fIgEncaNx99dIaPIVkxwbIUFQ
UYfX4mQKMkj06Tv6EcvrEFsBmbtViFj2zsxgjAS3jsF/fMlNCNfNiU+dIMHI
+Qce9Q4t6Mo36+ivX7C8TZUy+fGoBT206BzX+UaC13Scz2+KN6HcXzwnOqZI
YHzKJLJJrByNO3jYXPhBgpn39WZ3Zt0R09+Ryvw5EuyzpU/f71wEih4ihKO/
SEBL5qJ9k6gDV3Kw0osFbH0gTC/ych0U+s2EkZdIUM2RXZlbUg2Te+U+OK1g
fl2KvTYW8wrYIhK5Ztaw/GRX27qrXADK7OsWehskaJB/PK+Rnw0eiZql3Vsk
uDZs/YTqlgml3AUbMngSWGkPSpYXFMNU1r8rJUSMf4O66LyyOjh02iiQh0KC
MO3A118SW0GttG4gikYC//m+cUaNDvAWP3B4124y3L3oQ94T0wpVdXbGrnRk
sK9IwjtcaoCfl7vzf+4lA82B+KA3qxw4Ed+KPiMZ9p670fbqST5oqzy92M9E
hjOblRM/fyWDX/9HXzlWMtxH8cdLzz6GuhtiPeUHyNDRe8W3ty0FLXwMYzt5
iAwU1oVms4UKxGs4px93mAwVG9++ax1rRLpTCln0x8hwMK0rte39axR0P+W3
BxcZFukeXJ7UqEFNCxviizxkEDdT1bHOzkXLTjqe//GRYfwnn7pIvCc6uVnU
8f4kGWQjkw2CYuLRHc89+5UEsP6OTS3r/SpCYVTjWzWnyfBQ6qX8L+y81RrQ
mCp4hgwXRFjx/xnXo3WGQ7NJ58gw0nb/js6uGiQY5Xhu/3ky5B/bz5ZnX4IM
DvW6eouTwUvWILH8SQqKTD7VsiJJhuv/VbSIWHlDB68Pnbk0hpdUnnkfczZs
5YxrjcqQoTrB1DX3fiGcEZZMULlMhrBmjdXL835gXBbxrUGODMH2vJ8C6ApR
jOQvwbOKZLBqri39kNyAuhuUnNKUsP5J6Fbu+wZEkEurZ71GhhWXW362/vlI
tHOb+lyVDEZa1NeiV2PAXE1XbUOdDDGn/0XfulUBCQOl0VaaZHitRKgu5C+C
Pt29E+Pa2Pcrx/aJXU4CypjZCY2bZPDTyzb9Y3QHSfzXbNNyiwy8B294Vbdi
59mZw1Xn75CBXuvrNpNOMaQ8cCZk6ZPhct/ZG7t/VcPgUr/SIUMy/Hy06bj4
uxh2PRJ8EfQfGRb2v/pFOY5D0tvPPuyYkIHBvGaQgO0ntl5fuOzMyRBpSPtl
XtGN0v9JWX61JMOaUPiDZKUuNBIUXarzAOtHkaM5rbwZ0TMtbiAbMlz8UGpf
mVSOZF9ek7tgT4a339KGW/bikOPhzMB8RzLYrkrvKfvvKcpOJQwcdSbD83DZ
ACSpD5/4bh9+4UIGA9tvpzX3xiDG/HJjshsZcEOj1fdfViKFs4wFTh4Yv44t
w721WB6E7ug3eJKBPBVo8O5sF5KZ/8n4z4sMv1i98qUfIiR17WOzui8ZLP1u
PJOiNSCJnE7HmOdk0BzYFdyt/QqJ/qvk++JPBo1bmj5H2bLQWZPMkVNBZCBI
D5ZxH8tGQi2RAfYhZDhdNB0emJGH+Lm8pWvDyFBaq3GC4Xkx4nti94scTgb+
VUpokHg54hm7l6IShfnt/Frwn11ViFNKTTPqJRmIjnvEE7Ur0eFYacpYLBkY
058vnN7E7n9r/BV8CWRQ2v2Q6MBpBaw6B81tksjgPcEzo4krBaZX/w5WpZDB
/4GpRvf1Jti3f/UNAUeGANvX9QKDzbDH5tvjqxkYv47FTTwyDfCv+51weBam
J8E9t559KwcK/+svozlYfaHLKhNSqUDwK4rgycf4rFD2ffonCG1PJSpYFZLh
GbWsyZclH23IB62VFWP6cR5v0fxahlZxrjnbpWRoHRCZGJMuQH8I5rcVyzH+
SGN6TxUCYUH/5t7QSjIoJmRfvsxQDT/rFBqHqzE+HY6UZuS1Y/uOqB1nHRmY
ZQYSt0I6YeoRN49FAxmyBfc/4LDvhMkhxvclTWQwdjzD0N2AYEIU/2yjmQwf
nNmGyD9ew6fweQm5NjLIGPrHU/SrYWTh42wgIoNZi+Dc6d4cGFTrShjsxPiI
/ellLOYH/flVake6sfkTd15Ky4ZAz54sgkkPNt/z4r/XvLKhyzyqtLCPDO/m
Co+qRpZBe7u38do7DF9zhjNGuBpo4bVnk31PBs6G78yL6+XQ5GXQ4TdMhraz
QR15B/Og7rOaa/8HMnSHtrcWG4ZDlcxFwUOfsP4+uT0Jv+GPyhMExo3GMT31
kY5/tk1BpRsHw/I+k6Fd7OB2iVUOKtTddWV5kgxcNfIQypCH8ipW/0h/J8PW
SqWJ41giymb5nuE7jfnph8wGy5AGpNsP3Oz5QYbiubQH/pEpkNr3eveBn1g9
N3YR2cMFkCRUXHvvFxmihn625I4WQVxQ0oPsBTLgR+9Jly4VwcvZoGOLS2TI
6fccq4wtgEglt37JFTIo4FSLUybTISzTwttrDfNLxJ4LHcIhEEy5ef7NXzKU
mdMXabS5oAAjxWnmLez/0dNnEyJC0LMm0dg7Oxg+9FuznQFu4HWU51oGgQzJ
mjQLXuVUeOK+f3ueRAa1IzypGnWF4D6KLxSjkiH+ZsjQwRel8Ejil8GTf5gf
imPnTKOLwTH6E1PHbgrcoCkc4MTng91yVysjPQVMA91zdr5lg7Vm9cNb+ygQ
QW0xb+bMBsvirJM4Rgp8rd/hHXuUBQ4tW7cnmCjglrrX8X5FJrgPaYQeZqXA
zPSloFWndPD5kdl86wAFRIcevvn8LhmCtzZXog9SIOAZ/ZTmcBxEM2icGuSg
wC7GG6dntyMgiTvzzv6jFGCYZXiq9jcMss5vhqpxUiAy4pHchTNhUKx0vSWQ
mwIx1iFexIwgqL6dsdrBS4Fi8aiqY1c9oNl64xSNjwI+aGxPvUEwevNU/a7c
KQoMbOfqBYiko8HI9DBPAQrIVzqYk8QL0VjW35b60xTYOvZDAfW+QlM1amsb
whRwSHX0rfQtR7/epvFLnMPmvf/U9mTtK7T2ef2ukygF6PL3vqGMFSDCH9UX
pWIU6BB4xmBV6oN2/cO1/pbA8OPrLzxmkwf7D62vCUpRQGzW6xaxuxY7X6gK
WF6kAJvSGH2Z62vgkcXpZ12igNAhZl3lonIQ1Fp78e0yVi9ydePz4DM4b6rS
xiVPgdKj+w0yyXlIxiV1XV+RArm/bB2CQooRBK0KJChRQMlFOfzwG090Pfna
vQ/KFNCqZi3m+FAIuqUp4Wyq2P+aGQ6u9DSCYdtKm5Y6BXZSR/ad8moGyxHl
v2EaFLCKfqrzMr0R7OeSBXu0MD56RKrMwmrAbWf5Ht0NCpw487vs3N4S8Nmv
HKGkSwEp2+m95aezIZg3ud1XjwLSia3rXI+iIVp8+W/zHQpky3NNPykRRcnK
V08T9CmwXFbGf2c+DGXfTTK4aEiBtu/6A4sxCajE9k+E639YP9YyrEPHU1GN
txKqNKHAggDndtf7VNQcnbixbEaBbdPi4FPaMehNztLpc5YUSAkvdglhtUeD
dWBoY0UBSrmwGxODH3zqTYjMt6ZA3eysYNd2KHyfXEQ/bCkgO24i5uXth36t
KG7yOVCg3tvopFZyJlrblSBk7IThZzn4snSwGBE4Fg1TnSnAW5zVVhVRjHYL
K0aNu1Bgd+ER3lsiOMR0Jb6Dw50CJ0/uzF3M0QAOnYVNXQ8K7HF9NRjljgNe
cwXhaE8K3Hn0SvQ8TxYIusUZDXhheo8+f9DBFwfnQ35HMfpSQJ/jHS2/MR5k
UuU7VZ9j779Wf/9nPQoUy2K3AvwpwDpvJ/pRKwHU0S/hjkAKXLBb/mC2kw66
o3L/UYMpED7heoN0Mx8M52Oir4Rh+DGK3GQ8VwaWhPnOJ+EUSJ21ls4ergEH
ZrntukgKFH1uu9v1ohHc+WLObERT4G3G8dh3Ey3gKzn/n3gshndgp9l9PgQh
KldeOsZTID7W/5VFUgdE33vZVZJIgTDa9fMC0x2QbP9z+1cy5m8e5z2OGwik
/6hO3sFRIG67dXZ6sAlGHIrau9Ip0MKaIn9OoBoclxnzJLIocC6LZ3EWO5/v
d7IPzcyhQP7d4EM/dhdB4cqAA0s+BdrVeze7AytB+eF5Xa9CCgTzndBjN62D
qdVo6YViCti9VnRs2qwHb+d1Tv1XFGCCQ6Yeu2uBc/0W9U05BRRVtfWchsqh
7lHtD8kqDN94AT3hgXzQ/Xu4J6uGAh5vvgY/wM7bKy4epaz1mN7Lvqbnj4VA
+MZEtHcjBRwN7y/ruDwHIbfLbouvMTyMtcca2rOgaxN3714rBdZLsyMViNVg
5k6Re9uO+fFia43AYgtQtkxOSnVSgJ48QJ7d7oCUx4g+5w0FrFvdsn6e6wDp
nZOLbD0UIF5lZo8/0wofPALe+/RRYMOwvHTGoAEe4ueql95RYPxro7HRWDUw
eaomGbynAH/mYYYy4xIoJBR69Qxj+Pe0jn9JS4VrTxnNpEcxvdbVBrVfi0Iz
RLtruZ8o4P76oELmuSrk4zUgzD6B4eHiOuGx04w4yaIsz75QYLX/EHn2Ygeq
945e//OVAlxR+SpjKa+RHmXtk+EUBUZGVfgTjKrQqs+t170zmF8ytbQE0jNQ
OLUm4+IcBQIZ7wl5bGcj4WeHA/LmKbBJ7jQeCStF3bTH1gcXKPBX0+UTd0Y1
Mn8+ofl8iQINk8asI3crEeWfrPjKMpZn19y1BTyTUaofjuO/NWx+l8BZRZ44
kNlNwff9xfwUZPFSzb0ERv1NvslsUeDdLyYZMbU8eLgHdeTvUOBnfSvX9Ls4
YA48WXCIiOWTDu2BdNwBVEwX8MKPTAFGIYl/yjIhoBI057RKpQCOj73WUD0P
ZuhV9Yx3UYHyPixQubkSfIMLZd7toULpFdoq4XIVcO9j5JHdSwXrHYujLKdw
0BBi96+AgQpxW+u2GcfCkR7DwBwHExVIlBFvp195aC1UtM+fhQoz2lfZauqf
QCRjdNkaGxV+VoYbiadWwZkXazEmB6lwln6gx8m9Hbr333o8wEEFm+KfHaeM
EFiE1xhePkoFzzZ2rtP76oHGdFixiJMKQZpyaWd+5AAu4jH/ER4q7Ao7bcr/
QAtkWCb2BR6nQgdD1cKjD0HwMVL2z/oJKuxvCboUiDLhEStu2JSfCh/OXFux
OFwGLNHk2kFBKlgILU/lsNdAMZtJyhVhbJ7rc0a8UvWg+rLdp/gsFTjSsi3+
0jfB7IGTFkdFsf/3TK9wdbbAsxh/1SAxKujtypSuYusA7oNzZzckqDDrnuub
fLoTGmNV2MylqHCY1cGaS7gDeP9cNs6/SIWJ0TTqnEotBKiIly5cokLZ9bkz
13Pj4XeGIEH0ChWa0s0Ehq9mI208l5qLPBUuuXxOZ1EuQdW6BxLqFanwTlwA
VxqWgY6W0s8SlTB8n/JcD5AzBG86krjiNSqk4Gt1M57nwIzxmm+AKhUKThXZ
fJ0rBtWGnwM96lRoKNPax5DwCkoPTHIxa1JBfkAreD2vFA7YDdvc1KYCS8Gf
4V3e+eDe1V0ff4MK7jrD8VcUwuELTzPdZ10qnPzbEmw2+BIpPq68xXubCmtb
l6IFzPJR3lB+lvldKjx8Gm3l3JKPGM/gVvLvUWHouMcVzbOpyMn/pdyiIRUi
xxJO7s30QqOTQS/OG1PBivZo00DBDy5Je024mFIhLG3ExfeMN0qPcj7dYE4F
zdXeXz1PcWj3bys3kiUVnv0oLz8kX4SslYw6FR9gepO/YcKIytBA6s0DgTZU
4N/NqV3i8ApJbKqY9Nph/Kr9qbvoV4QSta+8YnakwnslgpZMcg4iFYgTbz6k
gpc8bnmSFoPM/gmqJzyigh/LirN8uTl0G3AnfnalwlQq/vpUXCycrTkwx/uY
Cl3OmY4K9kkQzbxX0uIJFZSanLUZGW/DphXpWcFTKgRoc9tOiyQhg/a1wUVv
Khyc1/03F5iP2o7Nc4s9o8KITSw5KTcT8btM2rr6UcFcv4lqj3sIoe+GGxoC
MP4hgPDMLA+WBd7Sk4Oo8Lv2CJ/q3Sq45dusB6HYPIpl8e4JBdAwXpkd+IIK
hMdtejfH/IBHomC1N4IKe22WxWy+piO/Fzh5lmjMr3m8lBXnEjQ/+zJcN4YK
TLc1Uth4CpGmfPDnhDgqhPAPd+Z35KDKRC+hLwlUMH67t+WceBY6vObsfjyZ
Crz6hF3/jVSip9cfdFmkUiF1/shW2XYLmsoxYi9Mo0JttO7EW7k36Br5pulS
BsafYGNQ1Ku3qPiOaplYNhVoukYnDx9tR6wVV0iuuVRwafT1P7/+CrkySFxv
zMf01+Sq+HHaAybMTyeRC6kgnWVYiXdOBvlm7p9QgvlbLEbNLu4pyuFgvxD0
CvP3pQG+8zMFaJ/TXr++cqw+s8/naPVa5NBDes9SRYXV9bOCt5Mq0MiJdZ5b
NVRoiyTYOalloItP5+0S6zA9Nz9hvLHoAbjRycYvDZh+/osZaFnJhH8iI3v5
XlMBV+NvPxiYBVbBb29btlCh7+NqpaxKKvRPNecUtmH+kczhZVSIAjHZqrUl
hPnvbm24u5EKSogtUBDvooKK6qXjzP+9RMQlXIRbN+b/N9/0e1NTkEHRlD65
hwoGeSJ1N/RiUdN9fv7AfirQcwf0pw/lwLGT1itMg1S4Q33d3VPYAB7fSpri
hqiQzVfh9CO/A8ZTVgK5P1ChKuG+hHprM1y8K3kz9yPmn1FdY7+xckg4+Jj7
3Dimv2fjj88Nh8DW+6b56s9Yfyc2DjLYOsKdcErV5a9UGF1vyuF1S4JaNSWf
zu9UKB63j+DvKoBDdEHqGjNUWLnryJOmVQSuqPfQh1kqMJ43/KMwkgyj3sxT
BvOY3nIXvwiGPUWSsjdLZn5ja9m74KGZj2K24txtl6jQcu7izi7FWrReNQ7r
y5g/vj+qJbM1I10nbmbPNSo45HE5oDetqPKs6fi/v1i/R0TPukhWIrZfOTmh
W9j7R2gfowo10MPceccDeExvzrgP+oQieG96VjaZiPUbwRk87RMDojxOdCco
mJ61qlbb6cpR5ETVUCGNCnd1OefyIjvQn/itVLHdNAhtn958Mt2FNHVlHzTQ
0cBHh8qoVt2MSll8JBT30cByibNwpr8M7e9H5LeMNKi7/MU1bTYP2QbT9eow
02Avo4YMx1oT6ruqHjfGSgPC/V81iTbdSJgWbmLCToPCMMmpjcPvUEjz0Jn5
QzQw8BK44+nWhX55HNpyPEKDs4dOL63VVyE1KX20dQz7fg73l8EwDArWUsN9
uGkgt8ASfM4gA+jLvt+lP06DOLKPtF5JOFjZnjoVeYIGdlS1Tv+voahb8MEy
Bz8N5Mvrrt7twyGBH8WNaYI0aI19muyZjkMBGcsBAsI0yBZp+XevPh7NGkrc
eHUWW+tahvCHOSLlo+5cUqI0MKffeTPDlgI5o40/m8VosF9SPX0juBR2vSRX
KkvSgJr1/OG5klow1wLvd1I0OHc4NTtvrAEQQ6CangwNtM5ektBbbAS+7p6D
k7I0YBdNKdlX0gDP/Ji+W8jRgPEhEX03qobv8jeKFxVowCSY5nMnPg/kibFu
Lko0YEuQPOn22w3S68cUico0eJQuoSEQnIHILlxM/qo08KCM6ur/V4GMxEzG
GK/T4HV2Ep2TQj1qXsrOjtGkgQ0d95/qgkbEVfTTgVOHBnzHrvy3xVOPPO+f
uZR9kwbRH7y7RZ5Uoc8nHPec0aPBjo5i0/7FfCT7rfJ95R0aVAAdSGuHoeSU
zZRL92jQ+wln/7I8DHbuXLJChjTAXTlsOCeVCvoHvcXVjTE+v6ueItSFoYb3
7aQhUxoE3Ppw/ZZoBToSvqdH34IG93688zXb14Tc1dRip+7TYN3kaeQAXQX6
tCfc2NqaBsssByR7Q5LhfyeRYRQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0},
  Method->{},
  PlotRange->{{0.1, 1.9}, {-203.13527613097418`, 98.8094917535585}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.710279947038232*^9, 3.7103523055150537`*^9, 
  3.711030670643272*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"frhoqNa0", "[", "r_", "]"}], ":=", 
  RowBox[{
   RowBox[{"frhoqNa", "[", "r", "]"}], "-", 
   RowBox[{"Qnashield", " ", 
    RowBox[{"frhoqcorrect", "[", "r", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.710279965518119*^9, 3.710279982357861*^9}, {
  3.710280050615937*^9, 3.7102800683899527`*^9}, {3.7110306756899652`*^9, 
  3.711030685416465*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"frhoqCl0", "[", "r_", "]"}], ":=", 
  RowBox[{
   RowBox[{"frhoqCl", "[", "r", "]"}], "-", 
   RowBox[{"Qclshield", " ", 
    RowBox[{"frhoqcorrect", "[", "r", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7102800799694557`*^9, 3.710280086559766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rqcut", "=", "1.99"}]], "Input",
 CellChangeTimes->{{3.710280137868819*^9, 3.710280141124565*^9}, 
   3.710280329617976*^9}],

Cell[BoxData["1.99`"], "Output",
 CellChangeTimes->{3.7102801420739098`*^9, 3.71028033017448*^9, 
  3.710352312551116*^9, 3.711030691679389*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Qnacut", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"frhoqNa", "[", "rp", "]"}], " ", "4", " ", "\[Pi]", " ", 
     SuperscriptBox["rp", "2"]}], ",", 
    RowBox[{"{", 
     RowBox[{"rp", ",", "0", ",", "rqcut"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710280151626164*^9, 3.7102801955526037`*^9}, {
  3.711030694978817*^9, 3.711030698945018*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.0130356097471755`"}]], "Output",
 CellChangeTimes->{3.710280199211038*^9, 3.710280334258321*^9, 
  3.710352317659522*^9, 3.711030701820424*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Qnacut", "-", "Qnashield"}]], "Input",
 CellChangeTimes->{{3.7102802151560793`*^9, 3.710280220424425*^9}, {
  3.711030706394554*^9, 3.711030710376707*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.02712011678942905`"}]], "Output",
 CellChangeTimes->{3.7102802207927094`*^9, 3.7102803395287113`*^9, 
  3.7103523202542963`*^9, 3.71103071254115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Qclcut", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"frhoqCl", "[", "rp", "]"}], " ", "4", " ", "\[Pi]", " ", 
     SuperscriptBox["rp", "2"]}], ",", 
    RowBox[{"{", 
     RowBox[{"rp", ",", "0", ",", "rqcut"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710280358396522*^9, 3.710280375500885*^9}}],

Cell[BoxData["0.9625261566066159`"], "Output",
 CellChangeTimes->{3.7102803790758543`*^9, 3.710352324041911*^9, 
  3.711030730437722*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Qclcut", "-", "Qclshield"}]], "Input",
 CellChangeTimes->{{3.7102803805698147`*^9, 3.7102803862744093`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.023389336351130607`"}]], "Output",
 CellChangeTimes->{3.7102803866930428`*^9, 3.710352326191285*^9, 
  3.7110307325303183`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fG", "[", 
    RowBox[{"r_", ",", "rp_", ",", "s_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "r", " ", "rp"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"r", "+", "rp"}], "]"}], " ", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"r", "+", "rp"}], "]"}], "s"], "]"}]}], " ", "+", " ", 
      RowBox[{
       FractionBox["s", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}]], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"Abs", "[", 
             RowBox[{"r", "+", "rp"}], "]"}], "s"], ")"}], "2"]}], "]"}]}], 
      " ", "\[IndentingNewLine]", "            ", "-", " ", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"r", "-", "rp"}], "]"}], 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"r", "-", "rp"}], "]"}], "s"], "]"}]}], " ", "-", " ", 
      RowBox[{
       FractionBox["s", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}]], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"Abs", "[", 
             RowBox[{"r", "-", "rp"}], "]"}], "s"], ")"}], "2"]}], "]"}]}]}], 
     " ", ")"}]}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.710280437721768*^9, 3.7102804679824743`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rhosurf", "[", 
   RowBox[{"r_", ",", "rcut_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"DiracDelta", "[", 
    RowBox[{"r", "-", "rcut"}], "]"}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox["rcut", "2"]}]]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fVR1surf", "[", 
   RowBox[{"r_", ",", "rcut_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "r", " ", "rcut"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.28209479177387814`"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "4.`"}], " ", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"r", "-", "rcut"}], "]"}], "2"]}]]}], "+", 
     RowBox[{"0.28209479177387814`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "4.`"}], " ", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"r", "+", "rcut"}], "]"}], "2"]}]]}], "-", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"r", "-", "rcut"}], "]"}], " ", 
      RowBox[{"Erf", "[", 
       RowBox[{"2.`", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"r", "-", "rcut"}], "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"r", "+", "rcut"}], "]"}], " ", 
      RowBox[{"Erf", "[", 
       RowBox[{"2.`", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"r", "+", "rcut"}], "]"}]}], "]"}]}]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"to", " ", "get", " ", "fVR1surf"}], ",", " ", 
    RowBox[{
     RowBox[{
     "we", " ", "already", " ", "assumed", " ", "that", " ", "the", " ", 
      "smoothed", " ", "length", " ", "sigma"}], "=", "0.5"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7102839342971992`*^9, 3.710283969007811*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Calculate", " ", "fVR1CaA", " ", "first"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.710280505537027*^9, 3.710280516130117*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", "0.5"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "sigma", " ", "parameter", " ", "for", " ", "v1"}], 
   " ", "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.710280678419003*^9, 3.710280694509677*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.7102806958975563`*^9, 3.7103523370455227`*^9, 
  3.711030744068589*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"frenormNaA", "[", 
   RowBox[{"r_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"frhoqNa", "[", "rp", "]"}], 
      RowBox[{"fG", "[", 
       RowBox[{"r", ",", "rp", ",", "s"}], "]"}], "4", "\[Pi]", " ", 
      SuperscriptBox["rp", "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"rp", ",", "0.01", ",", "rqcut"}], "}"}]}], "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Qnashield", "-", "Qnacut"}], ")"}], " ", 
    RowBox[{"fVR1surf", "[", 
     RowBox[{"r", ",", "rqcut"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7102805412721043`*^9, 3.710280618988769*^9}, {
   3.7102806497351007`*^9, 3.710280666226983*^9}, {3.7102806981768103`*^9, 
   3.7102808014093657`*^9}, 3.710280947876142*^9, {3.710282617443756*^9, 
   3.710282624563342*^9}, {3.7110307470251083`*^9, 3.7110307571693068`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tableVrenormNaA", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"frenormNaA", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.01", ",", "4.91", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7102808614897346`*^9, 3.7102809138493834`*^9}, 
   3.710281015752431*^9, {3.710282631483317*^9, 3.7102826444578857`*^9}, {
   3.711030762785973*^9, 3.711030766455534*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.1783359343236652`"}], ",", 
   RowBox[{"-", "2.168687882528967`"}], ",", 
   RowBox[{"-", "2.145573565443396`"}], ",", 
   RowBox[{"-", "2.1097638653296813`"}], ",", 
   RowBox[{"-", "2.0624240660689175`"}], ",", 
   RowBox[{"-", "2.0050396173520264`"}], ",", 
   RowBox[{"-", "1.9393251968224696`"}], ",", 
   RowBox[{"-", "1.8671254306845535`"}], ",", 
   RowBox[{"-", "1.7903158485853532`"}], ",", 
   RowBox[{"-", "1.7107118836734825`"}], ",", 
   RowBox[{"-", "1.629992166373167`"}], ",", 
   RowBox[{"-", "1.5496402805436527`"}], ",", 
   RowBox[{"-", "1.4709068761738333`"}], ",", 
   RowBox[{"-", "1.3947918734623306`"}], ",", 
   RowBox[{"-", "1.3220446992399657`"}], ",", 
   RowBox[{"-", "1.2531792287183068`"}], ",", 
   RowBox[{"-", "1.1884994242054217`"}], ",", 
   RowBox[{"-", "1.1281315370348381`"}], ",", 
   RowBox[{"-", "1.0720590695834589`"}], ",", 
   RowBox[{"-", "1.020157341013482`"}], ",", 
   RowBox[{"-", "0.9722253130372293`"}], ",", 
   RowBox[{"-", "0.9280131746439974`"}], ",", 
   RowBox[{"-", "0.8872449521112291`"}], ",", 
   RowBox[{"-", "0.8496360355065877`"}], ",", 
   RowBox[{"-", "0.8149059653043829`"}], ",", 
   RowBox[{"-", "0.7827871035714421`"}], ",", 
   RowBox[{"-", "0.7530299457696461`"}], ",", 
   RowBox[{"-", "0.7254058455256891`"}], ",", 
   RowBox[{"-", "0.699707862778497`"}], ",", 
   RowBox[{"-", "0.6757503395057727`"}], ",", 
   RowBox[{"-", "0.653367684075592`"}], ",", 
   RowBox[{"-", "0.6324127245305653`"}], ",", 
   RowBox[{"-", "0.6127548845571937`"}], ",", 
   RowBox[{"-", "0.5942783490384187`"}], ",", 
   RowBox[{"-", "0.5768803199366047`"}], ",", 
   RowBox[{"-", "0.5604694159917943`"}], ",", 
   RowBox[{"-", "0.5449642381118276`"}], ",", 
   RowBox[{"-", "0.5302921027353306`"}], ",", 
   RowBox[{"-", "0.5163879344500557`"}], ",", 
   RowBox[{"-", "0.5031933038831445`"}], ",", 
   RowBox[{"-", "0.4906555951406254`"}], ",", 
   RowBox[{"-", "0.47872728728618896`"}], ",", 
   RowBox[{"-", "0.4673653354752846`"}], ",", 
   RowBox[{"-", "0.4565306387778185`"}], ",", 
   RowBox[{"-", "0.4461875831086199`"}], ",", 
   RowBox[{"-", "0.4363036489147238`"}], ",", 
   RowBox[{"-", "0.4268490743337013`"}], ",", 
   RowBox[{"-", "0.4177965654841305`"}], ",", 
   RowBox[{"-", "0.40912104643652797`"}], ",", 
   RowBox[{"-", "0.40079944228672026`"}], ",", 
   RowBox[{"-", "0.3928104896348028`"}], ",", 
   RowBox[{"-", "0.38513456965692844`"}], ",", 
   RowBox[{"-", "0.37775355981984143`"}], ",", 
   RowBox[{"-", "0.370650701094992`"}], ",", 
   RowBox[{"-", "0.36381047824588847`"}], ",", 
   RowBox[{"-", "0.357218511363275`"}], ",", 
   RowBox[{"-", "0.35086145729485496`"}], ",", 
   RowBox[{"-", "0.34472691996106997`"}], ",", 
   RowBox[{"-", "0.33880336877964695`"}], ",", 
   RowBox[{"-", "0.3330800645610627`"}], ",", 
   RowBox[{"-", "0.32754699231032364`"}], ",", 
   RowBox[{"-", "0.3221948004022015`"}], ",", 
   RowBox[{"-", "0.317014745608108`"}], ",", 
   RowBox[{"-", "0.31199864345863465`"}], ",", 
   RowBox[{"-", "0.30713882343577714`"}], ",", 
   RowBox[{"-", "0.30242808850751923`"}], ",", 
   RowBox[{"-", "0.2978596785454148`"}], ",", 
   RowBox[{"-", "0.29342723720109176`"}], ",", 
   RowBox[{"-", "0.28912478185767293`"}], ",", 
   RowBox[{"-", "0.2849466763135706`"}], ",", 
   RowBox[{"-", "0.2808876058967653`"}], ",", 
   RowBox[{"-", "0.27694255474549023`"}], ",", 
   RowBox[{"-", "0.27310678502524616`"}], ",", 
   RowBox[{"-", "0.2693758178818914`"}], ",", 
   RowBox[{"-", "0.26574541595612705`"}], ",", 
   RowBox[{"-", "0.2622115673065342`"}], ",", 
   RowBox[{"-", "0.25877047060675745`"}], ",", 
   RowBox[{"-", "0.2554185214980981`"}], ",", 
   RowBox[{"-", "0.25215229999207645`"}], ",", 
   RowBox[{"-", "0.24896855882897714`"}], ",", 
   RowBox[{"-", "0.24586421270821038`"}], ",", 
   RowBox[{"-", "0.24283632831494437`"}], ",", 
   RowBox[{"-", "0.2398821150749717`"}], ",", 
   RowBox[{"-", "0.23699891657641983`"}], ",", 
   RowBox[{"-", "0.23418420260280556`"}], ",", 
   RowBox[{"-", "0.2314355617271765`"}], ",", 
   RowBox[{"-", "0.22875069442175278`"}], ",", 
   RowBox[{"-", "0.22612740664168526`"}], ",", 
   RowBox[{"-", "0.22356360384529428`"}], ",", 
   RowBox[{"-", "0.22105728541653524`"}], ",", 
   RowBox[{"-", "0.2186065394584805`"}], ",", 
   RowBox[{"-", "0.21620953792933045`"}], ",", 
   RowBox[{"-", "0.21386453209495543`"}], ",", 
   RowBox[{"-", "0.21156984827419423`"}], ",", 
   RowBox[{"-", "0.2093238838551478`"}], ",", 
   RowBox[{"-", "0.20712510356255184`"}], ",", 
   RowBox[{"-", "0.20497203595795113`"}], ",", 
   RowBox[{"-", "0.20286327015591488`"}], ",", 
   RowBox[{"-", "0.20079745274088467`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.710280924446254*^9, 3.710280951720047*^9}, 
   3.710280998676681*^9, 3.710281254323854*^9, 3.710282891130413*^9, 
   3.71035259718021*^9, 3.7110310189065638`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"interpVrenormNaA", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"r", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.01", ",", "4.91", ",", "0.05"}], "}"}]}], "]"}],
       ",", "tableVrenormNaA"}], "}"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710282582454468*^9, 3.710282584720724*^9}, {
  3.7102827423037767`*^9, 3.7102827506530533`*^9}, {3.710282965771324*^9, 
  3.710282973876815*^9}, {3.710283303388589*^9, 3.7102833087019253`*^9}, {
  3.711031038084969*^9, 3.711031041500372*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "4.91`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
   "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.710282975879695*^9, 3.71028330948567*^9, 
  3.710352624176073*^9, 3.7110310427948227`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fVR1NaA", "[", "r_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{"interpVrenormNaA", "[", "r", "]"}], "+", 
          RowBox[{"Qna", " ", 
           RowBox[{
            RowBox[{"Erf", "[", 
             RowBox[{"r", "/", "s"}], "]"}], "/", "r"}]}]}], 
         RowBox[{"r", "<", "4.5"}]},
        {
         RowBox[{"Qna", "/", 
          RowBox[{"(", 
           RowBox[{"\[Epsilon]", " ", "r"}], ")"}]}], 
         RowBox[{"r", "\[GreaterEqual]", " ", "4.5"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.71028298104622*^9, 3.710283035062482*^9}, {
  3.710283065643043*^9, 3.7102830886346397`*^9}, {3.7110310461912117`*^9, 
  3.711031055621093*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvR1NaA", "[", "r_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fVR1NaA", "[", "r", "]"}], "/", "Qna"}]}]], "Input",
 CellChangeTimes->{{3.710283379243465*^9, 3.710283409871326*^9}, {
  3.711031059907545*^9, 3.711031065419867*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fVR1NaA", "[", "r", "]"}], ",", 
     RowBox[{"fvR1NaA", "[", "r", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.710283433254283*^9, 3.710283439198636*^9}, {
  3.711031076354432*^9, 3.7110310968631773`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.00010214285714285715`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.7102834396967697`*^9, 3.710352630762072*^9, {3.7110310798694077`*^9, 
   3.711031097933549*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.00010214285714285715`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.7102834396967697`*^9, 3.710352630762072*^9, {3.7110310798694077`*^9, 
   3.711031097968174*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
TbP5h0vO2mlO+D+jIr3g
      "]], LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAJMOnlk5bEkDGjYsxUiRpP5AtwirS
vhJAgep5l9meaD9m8wTRySoTQEesagIqFGg/YrHyIImPE0Cv2IN7JZhnP2yC
U/xKkRNAKZjeDAeWZz91U7TXDJMTQFGSnf/ok2c/iPV1jpCWE0CWXt8Iro9n
P645+fuXnRNAe3yWpzyHZz/5wf/WpqsTQHyfEv9rdmc/kNIMjcTHE0D4IiZi
ElVnP5qjbWiGyRNAlwPv7f9SZz+jdM5DSMsTQGP95tftUGc/thaQ+svOE0A7
+P/FykxnP9xaE2jT1RNAiR4aCIlEZz8n4xlD4uMTQOfGLA4XNGc/MLR6HqTl
E0CVijlxCjJnPzqF2/ll5xNAA1boMP4vZz9MJ52w6eoTQMjxycXmK2c/cmsg
HvHxE0BmoPBCvCNnP3w8gfmy8xNAvshgiLIhZz+FDeLUdPUTQF20rympH2c/
mK+ji/j4E0BG1oh/lxtnP6KABGe6+hNAUKLiM48ZZz+rUWVCfPwTQBtdukOH
F2c/tCLGHT7+E0DK5veufxVnP77zJvn//xNA+CeDdXgTZz9Z4sMF
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
TbP5h0vO2mlO+D+jIr3g
      "]], LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAJMOnlk5bEkDGjYsxUiRpP5AtwirS
vhJAgep5l9meaD9m8wTRySoTQEesagIqFGg/YrHyIImPE0Cv2IN7JZhnP2yC
U/xKkRNAKZjeDAeWZz91U7TXDJMTQFGSnf/ok2c/iPV1jpCWE0CWXt8Iro9n
P645+fuXnRNAe3yWpzyHZz/5wf/WpqsTQHyfEv9rdmc/kNIMjcTHE0D4IiZi
ElVnP5qjbWiGyRNAlwPv7f9SZz+jdM5DSMsTQGP95tftUGc/thaQ+svOE0A7
+P/FykxnP9xaE2jT1RNAiR4aCIlEZz8n4xlD4uMTQOfGLA4XNGc/MLR6HqTl
E0CVijlxCjJnPzqF2/ll5xNAA1boMP4vZz9MJ52w6eoTQMjxycXmK2c/cmsg
HvHxE0BmoPBCvCNnP3w8gfmy8xNAvshgiLIhZz+FDeLUdPUTQF20rympH2c/
mK+ji/j4E0BG1oh/lxtnP6KABGe6+hNAUKLiM48ZZz+rUWVCfPwTQBtdukOH
F2c/tCLGHT7+E0DK5veufxVnP77zJvn//xNA+CeDdXgTZz9Z4sMF
      
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.002},
  Method->{},
  PlotRange->{{0, 5}, {0.0028169014659384893`, 0.0781765785643036}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.710283439748681*^9, 3.710352630849744*^9, {3.7110310799223337`*^9, 
   3.711031097973098*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"successfully", " ", "obtained", " ", "fvR1CaA"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7102834928271217`*^9, 3.710283506508358*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fvR1NaA", "[", "0.5", "]"}]], "Input",
 CellChangeTimes->{{3.7102838852466288`*^9, 3.7102838886252947`*^9}, {
  3.711031105950996*^9, 3.711031106582058*^9}}],

Cell[BoxData["0.03924742790036806`"], "Output",
 CellChangeTimes->{3.7102838892838583`*^9, 3.710352643516357*^9, 
  3.711031109436439*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"frenormClA", "[", 
   RowBox[{"r_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"frhoqCl", "[", "rp", "]"}], 
      RowBox[{"fG", "[", 
       RowBox[{"r", ",", "rp", ",", "s"}], "]"}], "4", "\[Pi]", " ", 
      SuperscriptBox["rp", "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"rp", ",", "0.01", ",", "rqcut"}], "}"}]}], "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Qclshield", "-", "Qclcut"}], ")"}], " ", 
    RowBox[{"fVR1surf", "[", 
     RowBox[{"r", ",", "rqcut"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.710330328463538*^9, 3.710330352114417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tableVrenormClA", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"frenormClA", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.01", ",", "4.91", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.710330387667365*^9, 3.710330395434598*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.164256800231659`", ",", "2.15475300902265`", ",", "2.131982685701976`", 
   ",", "2.0967012998736374`", ",", "2.050050992133629`", ",", 
   "1.993488010380215`", ",", "1.928693808005739`", ",", "1.857477967280559`",
    ",", "1.7816813222398196`", ",", "1.7030869095936454`", ",", 
   "1.623344851947468`", ",", "1.5439152482292007`", ",", 
   "1.4660309268626088`", ",", "1.3906798104006046`", ",", 
   "1.3186048901986749`", ",", "1.2503185727821242`", ",", 
   "1.1861274948338179`", ",", "1.126163780945425`", ",", 
   "1.0704190396580464`", ",", "1.0187780222397351`", ",", 
   "0.9710496586268574`", ",", "0.9269940036944142`", ",", 
   "0.8863443723332609`", ",", "0.8488245486317434`", ",", 
   "0.8141613940008894`", ",", "0.7820934524705069`", ",", 
   "0.7523762804415581`", ",", "0.7247852458217633`", ",", 
   "0.6991164834634664`", ",", "0.6751865928644947`", ",", 
   "0.652831546418513`", ",", "0.6319051606820328`", ",", 
   "0.6122773804620246`", ",", "0.593832541372034`", ",", 
   "0.5764677119261914`", ",", "0.5600911696392106`", ",", 
   "0.5446210340242827`", ",", "0.5299840594705428`", ",", 
   "0.5161145795595667`", ",", "0.5029535887514855`", ",", 
   "0.4904479454275536`", ",", "0.4785496804768391`", ",", 
   "0.4672153969075953`", ",", "0.4564057476820478`", ",", 
   "0.4460849807342256`", ",", "0.4362205417461624`", ",", 
   "0.42678272666186257`", ",", "0.41774437711085655`", ",", 
   "0.40908061292177933`", ",", "0.4007685967639034`", ",", 
   "0.3927873266872595`", ",", "0.38511745295715694`", ",", 
   "0.37774111610748545`", ",", "0.3706418035773477`", ",", 
   "0.36380422265647744`", ",", "0.35721418775802766`", ",", 
   "0.3508585202764864`", ",", "0.34472495948764764`", ",", 
   "0.3388020831197712`", ",", "0.33307923637985315`", ",", 
   "0.32754646836249174`", ",", "0.322194474903685`", ",", 
   "0.3170145470678732`", ",", "0.311998524572309`", ",", 
   "0.3071387535563762`", ",", "0.30242804819362595`", ",", 
   "0.29785965572060796`", ",", "0.29342722451965314`", ",", 
   "0.28912477494406597`", ",", "0.2849466726154217`", ",", 
   "0.2808876039559715`", ",", "0.27694255374626336`", ",", 
   "0.27310678452056725`", ",", "0.26937581763185026`", ",", 
   "0.26574541583461114`", ",", "0.2622115672486092`", ",", 
   "0.25877047057967495`", ",", "0.25541852148567873`", ",", 
   "0.2521522999864907`", ",", "0.24896855882651336`", ",", 
   "0.24586421270714465`", ",", "0.24283632831449226`", ",", 
   "0.23988211507478363`", ",", "0.236998916576343`", ",", 
   "0.23418420260277478`", ",", "0.2314355617271643`", ",", 
   "0.22875069442174797`", ",", "0.22612740664168357`", ",", 
   "0.22356360384529372`", ",", "0.22105728541653494`", ",", 
   "0.21860653945848038`", ",", "0.21620953792933026`", ",", 
   "0.21386453209495526`", ",", "0.21156984827419426`", ",", 
   "0.20932388385514777`", ",", "0.2071251035625519`", ",", 
   "0.2049720359579512`", ",", "0.20286327015591485`", ",", 
   "0.20079745274088473`"}], "}"}]], "Output",
 CellChangeTimes->{3.710330648307124*^9, 3.710352895036312*^9, 
  3.7110313811572723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"interpVrenormClA", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"r", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.01", ",", "4.91", ",", "0.05"}], "}"}]}], "]"}],
       ",", "tableVrenormClA"}], "}"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710330668385953*^9, 3.710330673903927*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "4.91`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
   "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.7103306781754713`*^9, 3.710352913375696*^9, 
  3.7110314314219503`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fVR1ClA", "[", "r_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{"interpVrenormClA", "[", "r", "]"}], "+", 
          RowBox[{"Qcl", " ", 
           RowBox[{
            RowBox[{"Erf", "[", 
             RowBox[{"r", "/", "s"}], "]"}], "/", "r"}]}]}], 
         RowBox[{"r", "<", "4.5"}]},
        {
         RowBox[{"Qcl", "/", 
          RowBox[{"(", 
           RowBox[{"\[Epsilon]", " ", "r"}], ")"}]}], 
         RowBox[{"r", "\[GreaterEqual]", " ", "4.5"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.710330689554777*^9, 3.7103307061306553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvR1ClA", "[", "r_", "]"}], ":=", 
  RowBox[{
   RowBox[{"fVR1ClA", "[", "r", "]"}], "/", "Qcl"}]}]], "Input",
 CellChangeTimes->{{3.710330709185892*^9, 3.710330724620551*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fvR1ClA", "[", "r", "]"}], ",", 
     RowBox[{"fVR1ClA", "[", "r", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "4.51"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.710330727475684*^9, 3.710330791549185*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.00009213285714285713`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.710330792089932*^9, 3.710352921577224*^9, 
  3.7110314366237*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.00009213285714285713`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.710330792089932*^9, 3.710352921577224*^9, 
  3.711031436656577*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/fvc4VNPWGD5RbweX6Dd8e1sTyIL/wMEx4IU
      "]], 
     LineBox[{{4.500712547607467, 0.00312939493319579}, {4.503808334391373, 
      0.0031272438781871133`}, {4.5053562277833255`, 0.003126169459231245}, {
      4.506904121175278, 0.003125095778292409}, {4.508452014567231, 
      0.0031240228346104512`}, {4.509999907959183, 0.0031229506274262635`}}]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
WSPd++PqYBoN/gc7Ue4U
      "]], 
     LineBox[{{4.500712547607467, -0.00312939493319579}, {
      4.503808334391373, -0.0031272438781871133`}, {
      4.5053562277833255`, -0.003126169459231245}, {
      4.506904121175278, -0.003125095778292409}, {
      4.508452014567231, -0.0031240228346104512`}, {
      4.509999907959183, -0.0031229506274262635`}}]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 4.51}, {-0.09225924052646439, 0.09225924052646439}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.7103307464054947`*^9, 3.710330792124682*^9}, 
   3.710352921614983*^9, 3.711031436660348*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"frenormNaCl", "[", 
   RowBox[{"r_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "1"}], "Qna"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"rp", "^", "2"}], " ", 
        RowBox[{"frhoqNa", "[", "rp", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"fvR1ClA", "[", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             SuperscriptBox["rp", "2"], "+", 
             SuperscriptBox["r", "2"], "-", 
             RowBox[{"2", " ", "r", " ", "rp", " ", "x"}]}], "]"}], "]"}], 
          "-", 
          RowBox[{
           RowBox[{"Erf", "[", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{
               SuperscriptBox["rp", "2"], "+", 
               SuperscriptBox["r", "2"], "-", 
               RowBox[{"2", " ", "r", " ", "rp", " ", "x"}]}], "]"}], "/", 
             "s"}], "]"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             SuperscriptBox["rp", "2"], "+", 
             SuperscriptBox["r", "2"], "-", 
             RowBox[{"2", " ", "r", " ", "rp", " ", "x"}]}], "]"}]}]}], 
         ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"rp", ",", " ", "0.01", ",", " ", "rqcut"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "+", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"Qnashield", "-", "Qnacut"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"fvR1ClA", "[", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             SuperscriptBox["rqcut", "2"], "+", 
             SuperscriptBox["r", "2"], "-", 
             RowBox[{"2", " ", "r", " ", "rqcut", " ", "x"}]}], "]"}], "]"}], 
          "-", 
          RowBox[{
           RowBox[{"Erf", "[", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{
               SuperscriptBox["rqcut", "2"], "+", 
               SuperscriptBox["r", "2"], "-", 
               RowBox[{"2", " ", "r", " ", "rqcut", " ", "x"}]}], "]"}], "/", 
             "s"}], "]"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             SuperscriptBox["rqcut", "2"], "+", 
             SuperscriptBox["r", "2"], "-", 
             RowBox[{"2", " ", "r", " ", "rqcut", " ", "x"}]}], "]"}]}]}], 
         ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{{3.710331191070241*^9, 3.710331218242519*^9}, {
  3.7103313585177298`*^9, 3.710331428545743*^9}, {3.710331542199679*^9, 
  3.71033154313218*^9}, {3.710331591994727*^9, 3.710331628853777*^9}, {
  3.710331696314486*^9, 3.710331702153554*^9}, {3.7103340647631187`*^9, 
  3.7103341271415253`*^9}, {3.7103342117288437`*^9, 3.7103342415530376`*^9}, {
  3.711031442198409*^9, 3.711031461142041*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tablerenormNaCl", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"frenormNaCl", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.005", ",", "3", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.710332011200272*^9, 3.710332085482006*^9}, {
  3.7110314669289007`*^9, 3.711031470143752*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.9754438565677348`\\) and \\!\\(1.1630306102516262`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711031530037932*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.9318719145406901`\\) and \\!\\(1.1016994068843466`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711031557224358*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(1.0733879302026463`\\) and \\!\\(1.103099902102881`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711031568237227*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.788107758651857`\\) and \\!\\(9.271503015829103`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110315696355257`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.8916020502833162`\\) and \\!\\(1.0912294067466699`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103158382684*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711031583909247*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(1.0225506783327858`\\) and \\!\\(0.000013390053198542536`\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110315934195747`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.7585665102464269`\\) and \\!\\(8.859609785296457`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711031597054644*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.731128028334895`\\) and \\!\\(8.022918408190981`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711031628757567*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711031628826511*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.09221750976791`"}], ",", 
   RowBox[{"-", "2.084684368388342`"}], ",", 
   RowBox[{"-", "2.064829560345709`"}], ",", 
   RowBox[{"-", "2.0332821457996775`"}], ",", 
   RowBox[{"-", "1.9910210925856728`"}], ",", 
   RowBox[{"-", "1.9393108172625584`"}], ",", 
   RowBox[{"-", "1.879632135576393`"}], ",", 
   RowBox[{"-", "1.8136026833189025`"}], ",", 
   RowBox[{"-", "1.7428835681073782`"}], ",", 
   RowBox[{"-", "1.6691079360677625`"}], ",", 
   RowBox[{"-", "1.5938110747549161`"}], ",", 
   RowBox[{"-", "1.5183744883056578`"}], ",", 
   RowBox[{"-", "1.4439894777508027`"}], ",", 
   RowBox[{"-", "1.3716339860630062`"}], ",", 
   RowBox[{"-", "1.302067951028499`"}], ",", 
   RowBox[{"-", "1.2358416302401114`"}], ",", 
   RowBox[{"-", "1.173311306786647`"}], ",", 
   RowBox[{"-", "1.1146657801434503`"}], ",", 
   RowBox[{"-", "1.0599545619801911`"}], ",", 
   RowBox[{"-", "1.0091183466949059`"}], ",", 
   RowBox[{"-", "0.9620130900702433`"}], ",", 
   RowBox[{"-", "0.9184434517795353`"}], ",", 
   RowBox[{"-", "0.8781769045676839`"}], ",", 
   RowBox[{"-", "0.840964787035686`"}], ",", 
   RowBox[{"-", "0.806555472659138`"}], ",", 
   RowBox[{"-", "0.7747026200026265`"}], ",", 
   RowBox[{"-", "0.7451732030279343`"}], ",", 
   RowBox[{"-", "0.7177503052963402`"}], ",", 
   RowBox[{"-", "0.6922353317471891`"}], ",", 
   RowBox[{"-", "0.6684483802886242`"}], ",", 
   RowBox[{"-", "0.6462275873289326`"}], ",", 
   RowBox[{"-", "0.6254282328126967`"}], ",", 
   RowBox[{"-", "0.605921242283064`"}], ",", 
   RowBox[{"-", "0.5875916028029177`"}], ",", 
   RowBox[{"-", "0.5703369433056158`"}], ",", 
   RowBox[{"-", "0.5540659865299741`"}], ",", 
   RowBox[{"-", "0.5386973064548728`"}], ",", 
   RowBox[{"-", "0.5241580836357604`"}], ",", 
   RowBox[{"-", "0.5103831201290338`"}], ",", 
   RowBox[{"-", "0.49731375761745933`"}], ",", 
   RowBox[{"-", "0.48489733111069455`"}], ",", 
   RowBox[{"-", "0.47308616056312097`"}], ",", 
   RowBox[{"-", "0.46183717345486003`"}], ",", 
   RowBox[{"-", "0.4511112692170291`"}], ",", 
   RowBox[{"-", "0.44087289227959964`"}], ",", 
   RowBox[{"-", "0.43108960706973326`"}], ",", 
   RowBox[{"-", "0.421731780925491`"}], ",", 
   RowBox[{"-", "0.4127722641399106`"}], ",", 
   RowBox[{"-", "0.4041861825932363`"}], ",", 
   RowBox[{"-", "0.39595062007728454`"}], ",", 
   RowBox[{"-", "0.3880445165794754`"}], ",", 
   RowBox[{"-", "0.3804482891405563`"}], ",", 
   RowBox[{"-", "0.3731444488246086`"}], ",", 
   RowBox[{"-", "0.36611596367065735`"}], ",", 
   RowBox[{"-", "0.3593476303719516`"}], ",", 
   RowBox[{"-", "0.35282522062266924`"}], ",", 
   RowBox[{"-", "0.3465355208512616`"}], ",", 
   RowBox[{"-", "0.3404662325002104`"}], ",", 
   RowBox[{"-", "0.3346060434925435`"}], ",", 
   RowBox[{"-", "0.328944195070327`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.710332743683453*^9, 3.710334568463366*^9, 
  3.710353187815671*^9, 3.711031819387999*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"interprenormNaCl", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"r", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.005", ",", "3", ",", "0.05"}], "}"}]}], "]"}], 
      ",", "tablerenormNaCl"}], "}"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7103337897028723`*^9, 3.710333807332765*^9}, {
  3.711031951419117*^9, 3.711031960717311*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.005`", ",", "2.955`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
   "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.710333871173403*^9, 3.710344394086607*^9, 
  3.710353728636405*^9, 3.7110319635771*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvR1NaCl", "[", "r_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{"interprenormNaCl", "[", "r", "]"}], "+", 
          RowBox[{
           RowBox[{"Erf", "[", 
            RowBox[{"r", "/", "s"}], "]"}], "/", "r"}]}], 
         RowBox[{"r", "<", "2.9"}]},
        {
         RowBox[{
          FractionBox["2", 
           RowBox[{"\[Epsilon]", " ", "r"}]], "-", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["\[Epsilon]", "2"], "r"}]]}], 
         RowBox[{"r", "\[GreaterEqual]", "2.9"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.710333880392215*^9, 3.7103339751190767`*^9}, {
  3.711031965872018*^9, 3.711031971206437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"fvR1NaCl", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.710333988080882*^9, 3.710334001448432*^9}, {
  3.711031975686109*^9, 3.71103197626904*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.00006128571428571428`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.710334001915872*^9, 3.7103443994845953`*^9, 
  3.710353734905567*^9, 3.7110319776663303`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
VSik+/n4GMsRzMN/61lWX8X/AFelL3k=
      "]], LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAd25W9Ap5B0B235wrAoaDPxw2ZMgm
ewdAN8SpU0GEgz/A/XGcQn0HQKkzTcyAgoM/Co2NRHqBB0Br8QCvAH+DP56r
xJTpiQdALFO+NwR4gz/G6DI1yJoHQLVhvUMaaoM/FGMPdoW8B0DvnMOwgU6D
P7kqHUqhvgdAC3AtwspMgz9e8ioevcAHQOFYhiEUS4M/qIFGxvTEB0ApdLLJ
p0eDPzugfRZkzQdAsaewvdJAgz9i3eu2Qt4HQAGzQyI3M4M/B6X5il7gB0CZ
BfUIhTGDP6xsB1964gdAm95MPNMvgz/2+yIHsuYHQD79nohwLIM/ihpaVyHv
B0AWb5a1riWDPy/iZys98QdAwURF//4jgz/UqXX/WPMHQCIN+ZRPIoM/HjmR
p5D3B0AbMx+k8R6DP8MAn3us+QdA54BpHUMdgz9oyKxPyPsHQMahaOKUG4M/
DJC6I+T9B0Brnwjz5hmDP7FXyPf//wdAioo1TzkYgz/P4KIO
      
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 3}, {0., 0.1644894206017362}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.710334001963698*^9, 3.7103443995229387`*^9, 
  3.710353734907213*^9, 3.711031977704863*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"now", " ", "calculate", " ", "vtildeR1CaCl"}], ",", " ", 
   RowBox[{
   "I", " ", "will", " ", "use", " ", "fvtR1CaCl", " ", "to", " ", "denote", 
    " ", 
    RowBox[{"it", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7103487714112263`*^9, 3.710348822270028*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fomegaNaCl", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"rp", "^", "2"}], 
       RowBox[{"(", 
        RowBox[{"frhoqNa", "[", "rp", "]"}], ")"}], "Qcl", " ", 
       RowBox[{"fvR1ClA", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox["rp", "2"], "+", 
          SuperscriptBox["r", "2"], "-", 
          RowBox[{"2", " ", "r", " ", "rp", " ", "x"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"rp", ",", " ", "0.01", ",", " ", "rqcut"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "+", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"rp", "^", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Qnashield"}], " ", 
          RowBox[{"frhoqcorrect", "[", "rp", "]"}]}], ")"}], "Qcl", " ", 
        RowBox[{"fvR1ClA", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SuperscriptBox["rp", "2"], "+", 
           SuperscriptBox["r", "2"], "-", 
           RowBox[{"2", " ", "r", " ", "rp", " ", "x"}]}], "]"}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"rp", ",", " ", "0.01", ",", " ", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "+", 
    "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Qnashield", "-", "Qnacut"}], "2"], " ", "Qcl", " ", 
       RowBox[{"fvR1ClA", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox["rqcut", "2"], "+", 
          SuperscriptBox["r", "2"], "-", 
          RowBox[{"2", " ", "r", " ", "rqcut", " ", "x"}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "+", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"rp", "^", "2"}], 
       RowBox[{"(", 
        RowBox[{"frhoqCl", "[", "rp", "]"}], ")"}], "Qna", " ", 
       RowBox[{"fvR1NaA", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox["rp", "2"], "+", 
          SuperscriptBox["r", "2"], "-", 
          RowBox[{"2", " ", "r", " ", "rp", " ", "x"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"rp", ",", " ", "0.01", ",", " ", "rqcut"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "+", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"rp", "^", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Qclshield"}], " ", 
          RowBox[{"frhoqcorrect", "[", "rp", "]"}]}], ")"}], "Qna", " ", 
        RowBox[{"fvR1NaA", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SuperscriptBox["rp", "2"], "+", 
           SuperscriptBox["r", "2"], "-", 
           RowBox[{"2", " ", "r", " ", "rp", " ", "x"}]}], "]"}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"rp", ",", " ", "0.01", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "+", 
    "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Qclshield", "-", "Qclcut"}], "2"], " ", "Qna", " ", 
       RowBox[{"fvR1NaA", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox["rqcut", "2"], "+", 
          SuperscriptBox["r", "2"], "-", 
          RowBox[{"2", " ", "r", " ", "rqcut", " ", "x"}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.7103488247276983`*^9, {3.710348877687923*^9, 3.710349134746624*^9}, {
   3.710349169764967*^9, 3.71034921186003*^9}, {3.7103515697430773`*^9, 
   3.710351648239379*^9}, {3.7103516969965143`*^9, 3.7103517253153477`*^9}, {
   3.710352182177553*^9, 3.710352184096681*^9}, {3.710353074758155*^9, 
   3.710353079101617*^9}, {3.71035381955961*^9, 3.710353837512018*^9}, {
   3.711031986109323*^9, 3.71103204017667*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tableomegaNaCl", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"fomegaNaCl", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.005", ",", "4", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.710349342277467*^9, 3.7103493726664667`*^9}, {
  3.710351903671698*^9, 3.71035190385314*^9}, {3.711032047416754*^9, 
  3.711032050230608*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.06117451680975076`\\) and \\!\\(2.882096590303683`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110320913658333`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110320927790623`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.014025240046808772`\\) and \\!\\(3.66447887399483`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032094153119*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.027276487512974595`\\) and \\!\\(3.8547097609905565`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110320948436728`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110320954991302`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032096267191*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110321236492434`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103212634321*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032136254664*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.05107146747044908`\\) and \\!\\(2.931598914514464`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032139362336*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032140665484*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110321407443123`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.01263652743057244`\\) and \\!\\(3.747132778465864`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032145764579*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110321466255417`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.023419005701951243`\\) and \\!\\(3.920098550067828`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110321470221987`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032148062937*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032148135597*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.05546167913679788`\\) and \\!\\(1.1057553643663734`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032185766859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032188195142*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032188268385*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110321906627607`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032190735691*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.013192283158488773`\\) and \\!\\(2.7843957532095823`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103219560501*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110321956959877`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.02423241493802325`\\) and \\!\\(6.479006992953626`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032197489895*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110321975706177`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.07680917688967083`\\) and \\!\\(9.546710708886569`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032268426016*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032269726413*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110322698046083`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.06400521757506043`\\) and \\!\\(9.677346081593032`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032311269437*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.0720651311110257`\\) and \\!\\(1.3988609357468325`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032355039488*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110323551183243`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.010161636385855745`\\) and \\!\\(6.836533577165276`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032545777193*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032546873755*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.009201225676018776`\\) and \\!\\(4.1926615042827995`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110325975864363`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032598745748*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.0098266631647914`\\) and \\!\\(5.283512503017541`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032648081511*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110326487581177`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032649234384*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032649314414*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.008212560561375737`\\) and \\!\\(1.986072448624729`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110327827798643`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110327836669683`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.006836707060947701`\\) and \\!\\(3.551713069392887`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110328173441896`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110328183661947`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.005829122680038141`\\) and \\!\\(3.318104911389578`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032824241826*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032825277155*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.007449476752131339`\\) and \\!\\(1.4450206808999353`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032835984947*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103283913194*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.006326713402126715`\\) and \\!\\(6.958532660443468`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032883984878*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032884861883*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.005498156430015336`\\) and \\!\\(5.13291794731512`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032887827071*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032888816547*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.007988861188076929`\\) and \\!\\(1.3309267882853918`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103290110843*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103290118989*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032901900433*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032901978979*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.005709425202162563`\\) and \\!\\(3.0515298535332176`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110329352460318`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110329353271112`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.006672584762800691`\\) and \\!\\(6.883936165046974`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110329361233273`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032936199441*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032936599457*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032936666378*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032937593993*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711032937667096*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.005089000662173516`\\) and \\!\\(3.009256837340106`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033276745493*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033278706895*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004832201577788431`\\) and \\!\\(3.2401295540242456`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033327986813*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033329864224*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004999271499727912`\\) and \\!\\(2.3225002666369315`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110333805807123`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033380666552*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033381838087*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033381911261*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004595622976546328`\\) and \\!\\(9.98108008940029`*^-9\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033511550045*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033512539452*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004190563445900855`\\) and \\!\\(5.80164792371726`*^-9\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033525216267*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033526621578*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033530752473*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004367122699158389`\\) and \\!\\(1.0272776046752217`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033562429184*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033563620776*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.00398208601547937`\\) and \\!\\(5.886276013681839`*^-9\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033579556768*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033580994133*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.0036593403687564096`\\) and \\!\\(3.770597320692445`*^-9\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033584340774*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033585482122*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004522735334593627`\\) and \\!\\(3.6011879874993885`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110336192510443`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033619341072*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110336206961193`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033620767024*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004129905645411669`\\) and \\!\\(5.342114912122816`*^-9\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033635950295*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033636031307*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103363713186*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033637205008*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110336414887877`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711033641576054*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1489194757617649`", ",", "0.1475773010476798`", ",", 
   "0.14407189647534313`", ",", "0.13858479617475467`", ",", 
   "0.131393310478359`", ",", "0.12285004006973771`", ",", 
   "0.11334941156330197`", ",", "0.10329076004962659`", ",", 
   "0.09306580062886846`", ",", "0.0830218634126524`", ",", 
   "0.07344668016449485`", ",", "0.06455906055352378`", ",", 
   "0.056505933846764514`", ",", "0.04936604145134926`", ",", 
   "0.043157706339556276`", ",", "0.037851340883232776`", ",", 
   "0.033381040463665836`", ",", "0.029659616738085808`", ",", 
   "0.026587634805428008`", ",", "0.02406422093924391`", ",", 
   "0.021993466730773396`", ",", "0.020288528732411014`", ",", 
   "0.01887469598631098`", ",", "0.01768944794505356`", ",", 
   "0.01668198804287145`", ",", "0.015812742049229528`", ",", 
   "0.015051040715936645`", ",", "0.014373502927942245`", ",", 
   "0.01376293019147552`", ",", "0.013206762076696594`", ",", 
   "0.012695021891265004`", ",", "0.012221152364572281`", ",", 
   "0.01177986370673185`", ",", "0.011366984130818932`", ",", 
   "0.010979454895893817`", ",", "0.010614944429027516`", ",", 
   "0.010271092489931907`", ",", "0.009946374595857621`", ",", 
   "0.009639020904174733`", ",", "0.009347782415738894`", ",", 
   "0.009071370238232417`", ",", "0.008808638424223985`", ",", 
   "0.008558678211799377`", ",", "0.008320441079764877`", ",", 
   "0.008093207213472318`", ",", "0.007876014241843234`", ",", 
   "0.007668403634386884`", ",", "0.007469718864428274`", ",", 
   "0.0072794396350219885`", ",", "0.007097082842269293`", ",", 
   "0.006922236324495876`", ",", "0.0067544969593813856`", ",", 
   "0.006593547686813334`", ",", "0.006439029389839219`", ",", 
   "0.006290706928071705`", ",", "0.006148090333876954`", ",", 
   "0.006011126071547643`", ",", "0.0058794732786009345`", ",", 
   "0.00575286043366187`", ",", "0.005631065776770772`", ",", 
   "0.005513844635943316`", ",", "0.005400975292906122`", ",", 
   "0.005292258684938701`", ",", "0.005187480762862752`", ",", 
   "0.005086454392412097`", ",", "0.004989001398968424`", ",", 
   "0.004894946933713536`", ",", "0.004804140754914393`", ",", 
   "0.004716419889933604`", ",", "0.004631645462153274`", ",", 
   "0.004549685306701716`", ",", "0.004470408141963384`", ",", 
   "0.004393695455876477`", ",", "0.004319434341430938`", ",", 
   "0.004247516672181139`", ",", "0.004177840911102616`", ",", 
   "0.004110312053204357`", ",", "0.004044839972521104`", ",", 
   "0.003981337719467053`", ",", "0.0039197236309318085`"}], "}"}]], "Output",\

 CellChangeTimes->{3.710355773044608*^9, 3.7110341106154327`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"interpomegaNaCl", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"r", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.005", ",", "4", ",", "0.05"}], "}"}]}], "]"}], 
      ",", "tableomegaNaCl"}], "}"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.71035105708675*^9, 3.710351094808775*^9}, {
  3.7103560736591063`*^9, 3.710356073984715*^9}, {3.71103440561924*^9, 
  3.7110344081388607`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.005`", ",", "3.955`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
   "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{
  3.710351099469801*^9, {3.710356069812503*^9, 3.7103560746278887`*^9}, 
   3.711034409434574*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvtR1NaCl", "[", "r_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          FractionBox[
           RowBox[{"interpomegaNaCl", "[", "r", "]"}], 
           RowBox[{"Qna", " ", "Qcl"}]], "+", 
          RowBox[{"fvR1NaCl", "[", "r", "]"}]}], 
         RowBox[{"r", "<", "3.9"}]},
        {
         FractionBox["1", 
          RowBox[{"\[Epsilon]", " ", "r"}]], 
         RowBox[{"r", ">=", "3.9"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.710351102101614*^9, 3.7103511663068447`*^9}, {
  3.710356130413664*^9, 3.710356142493615*^9}, {3.711034412533436*^9, 
  3.7110344216517344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fvtR1NaCl", "[", "r", "]"}], ",", 
     FractionBox["1", 
      RowBox[{"\[Epsilon]", " ", "r"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7103511810130997`*^9, 3.710351222292265*^9}, {
  3.710351303875731*^9, 3.7103513162808933`*^9}, {3.710351350846795*^9, 
  3.710351377013156*^9}, {3.710356091988426*^9, 3.710356113734703*^9}, {
  3.710356147731986*^9, 3.71035620429519*^9}, {3.711034426788836*^9, 
  3.711034427667308*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAANHB6BQAAAECYEVVJYJ9zP6QB951B
AQBAKCyqFZKecz8Uk3M2gwIAQKSkaO7DnXM/87VsZwYFAEDKyCzGJ5xzP7L7
XskMCgBAboyHFvCYcz8wh0ONGRQAQMDlfSuYknM/K54MFTMoAEBWUZjk8YVz
PyLMniRmUABAWls/xr9scz/LCn2Fj6cAQK7Emm34NnM/+Q/kOvL4AEBs78Z6
ygVzPxPljj68SAFA5tbjiIPWcj/onPODSZ8BQPD7Mmw4pHI/QhvhHRDwAUBM
AmvYXHZyP1d8iPmZRwJAWqAdZY9Fcj9ZrXMji50CQCsha6uLFnI/4KTnobXt
AkD0sQAaeutxPyJ/FWKjRANA9iyLwJu9cT/pH8x2ypUDQJjqYoeak3E/nJDG
2VjlA0BXqvGsH2txPwrken6qOwRAK4+J1xFAcT/9/bd3NYwEQKdF9jSLGHE/
q/qusoPjBEAxCt38Qu5wP0bH6Ts5OQVAej+LeaPFcD9lWq0ZKIkFQK+jeDRd
oHA/QNAqOdrfBUDdNwE8snhwP58MMa3FMAZAE0hzmUxUcD+6K/FidIgGQDC4
1oJ6LXA/wRr1ZoreBkBSjKXxBghwP03Qgb/ZLgdA6GWpmDzLbz9DwCjV5DEH
QMBH13elyG8/90PR7w==
      "]], LineBox[CompressedData["
1:eJwVzn9Q03Ucx/FBo+07tu9XOEBld/zSIekAgRCBxfsNGeGcil0njnMyJ7/8
7JeDASuyBEZgZRhyzMB2BMiF3TEognnmT9QVSL/wGuqKELKUHf7o1Mpxa/3x
uuc9/ntFq/SvlfizWKw03/5vW/k3cncjBzWPnB9V1+tB6bDkbXRyUCmUXLmV
pYcVT041LsRysbQyVNq7pIP3OSa26iAXPTVV3gC7DhpmJp1B33ExxF/51zKT
DtI6fnGbRRRe8OofXE/RgXN1Un5RLYV/b+7cfOehFjxVAm7lBIXTa1k1+V9p
wdXf4yeN4eHOe8ln2oxayO69tL2wkoeugbFiXroWWnUi94+XeHgze2q7yasB
qzBnnL8yEEsbudvmLmogseUPz6H9gXhiR8W6rMMaqP0912C/EIiFkW7vkEwD
Mv/EjBeC+Xi7dZF+FKIB3v3CHX4qPnrEqfHsGTU0nMNTJ+x8lIx2ZOafVEPd
67YCAyXAQ6Ieav0BNWRMOnOpvQLsGnxlVUmaGmZCN5m5owJkfVt/uZylBkqU
HpbNofH5l3f2jE8SWAz7865kD42849fNXRYCu76PDK6w0Sit5VrtJQTePPtP
w+AgjQcMcvGTYgKdn089XhyicV645XKKz782Nd1QD9P40zI6yKYisA/vd5Wc
pvGDPL+IviICuqFzifIxGsUfhwW0ywmYjym2opPGvoaX2Ae3EuirSzv/9jSN
w58+u3pGRsChD0o6e4PGr7l5x/7dQoAnuxKS4aLRurs5zyQl0MKOd6XM0jiy
1CIyvkqgo8pD1izQuE0R0K/NJmAr6GymvTTaW/k/lKUS2B3/FqecxeBADF1p
eZEA9znFuxf9GAx/kBTtSCGgHIgwG9kMbrK6rLHJBIIDut+5STHYJjgZeSeB
gPGLz6r7Qhgk/ZINZXEEopoPP/aGMthNnr5nWUPgmoIY5csZvKa+es8RS0BE
iSv44T7f+mQiTkTg5yKbtiKSwepaYfBCNIH61KPuiSgG4yR7zwt9Tgg0qEUx
DLpOD9fIogg0jSTvn17NYM5YHTUQQWCjYKQ4ay2D1lTrkEFIYP52+5xlHYOS
pczR7nACR+01qodiBsfzZx1TKwlIPtw1K01gcF5/ZI7t89196creRAb3dAJv
wwoC7enhM0vrfQ59mlm2nEAO80xRkMxgbvSXpuNhvr+/qUtLfR4ROd9o8fk/
KuRmsg==
      "]], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAmrq8Wwo1D0CnIdhs75NtP0aQndpj
Ng9AEF7oBaiSbT/yZX5ZvTcPQHCCR7tgkW0/SxFAV3A6D0DF1ON60o5tP/xn
w1LWPw9Abf8tTbeJbT+oPaTRL0EPQKPWTshwiG0/VBOFUIlCD0C4SaFfKodt
P62+Rk48RQ9Af2nM4p2EbT9eFcpJokoPQH581TqGf20/wcLQQG5VD0AzaIQu
XHVtP4i7A6WwVg9ADCTtIS10bT9OtDYJ81cPQFkKsC3+cm0/2qWc0XdaD0CA
mTiOoHBtP/SIaGKBXw9Ao7ICc+ZrbT8mTwCElGkPQCfg68h2Ym0/jNsvx7p9
D0AuNbORqU9tP1j0jk0Hpg9ArESj9VYqbT/GzkIwb6cPQPjxR14LKW0/NKn2
EteoD0D2Ql/kvydtPw9eXtimqw9AeyDWSCklbT/Gxy1jRrEPQN0jd3L9H20/
NZvMeIW8D0CPZBtFqxVtPxJCCqQD0w9ATc25zBwBbT+AHL6Ga9QPQFb8JtzU
/2w/7vZxadPVD0Cio4oIjf5sP8mr2S6j2A9AbAMmuP37bD+AFam5Qt4PQGzI
QXLg9mw/7+hHz4HpD0B/pLVOq+xsP1zD+7Hp6g9Am3m/K2XrbD/Kna+UUewP
QM+2giUf6mw/plIXWiHvD0D6PCZvk+dsP1685uTA9A9A9GV3Wn3ibD/MlprH
KPYPQMZk4hw44Ww/OnFOqpD3D0D0g+j78t9sPxUmtm9g+g9AKQy3D2ndbD+C
AGpSyPsPQD3rd0Qk3Gw/8NodNTD9D0DC1sSV39psP1610ReY/g9AZQuaA5vZ
bD/Mj4X6//8PQH/G841W2Gw/seggJg==
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVjns01AkcxX8zhmEMv7JNEo4iIpvosSHr+zUssmnj7CLbIVPa1G/ezIhp
qaFttSJqt0UckUJWtYk6SmmXPKJO5dVI2bFGpihSeWRn/7jnnns+99xzl/OE
obF0giCCdfrf14uS9HWGK/3sUsJ6FFBKe3/Gh0Zg4A3ZkFmXAhblSr9Q0gk8
l95Q1vlIARM11A8G+gSapz31COpUwJWZqBY2i0CFcLjIt0kBrj/5ZlosIpAR
UxsRcFUBzoVszjpHAn3PPRk5ka0A2/bCFXu2Ebh6kMtYE6SANtbB9KzzBLID
rswtu5YMH0m159sPBOZ9fUoJbsnw2dBx7/pAGt49+blt3Z9JoCmYUG4uouFz
11dROa5JwLV8Yb1gnIaJR0rVZ28cgHDF0Y+/B9CxJmxXJgUHYHuV1O7YGTqO
W8XcUbUmwvPS4eKaV3R07sk9rYpJBNsUDq/ETw9zZp28VRNyGLFpl7We0sNt
cZrwgmw5FGQ39UYM6bg6xY23Vg4sddKPFZsY6N7RUb2/UwZzc7XyDb8wcNw/
LoQuk0Hl9B9XlP8w0PH1QNfyJTLwbx7Z5OGhj0NBLyw1txIgNrLKwvFnfTy8
efCmmyAB8MEqj74BfSSbyzlciwQoYrtV/e1qgJdSi4ZD2uPhhvMbXvxRA9yp
9ZbuSo6HO0vf7cl4ZoDSgn0fNrvEQ/CDQw29Lkw0Kpw0idFI4eTee9u16UzM
Sg2jLhVKYWfzb4Hu3Uws7leYt3wvhSVTFemjDobYFyMKGbaUwjFmIoN30BBV
9XZWoh4JKAfudy/sMESOV+GYbb4ENub1a9PsjTCov7hKECmB7hVu26KTjTDD
WvbktJUEZhNMDKVtRuiwuo2IVotBVV5CC7JlofkYkzF6QQw+pY3fREpZuEVp
W9EmEUOOwF77sJGF7tnG0hlvMRRaclvZFsb4PlHmudRQDGuyhmdT44zR9+OA
0LpLBMlD/uK628bYoIyJXl8sgi30NZ5OZmw8HuC99p1IBKyxyBAaj42KiRzt
Va4IlLewoqCOjWVPiYyLC0Vw6NvqcLGRCXptzOUNtgjB8363v1GMCV5/5RFq
uV8IAxy/NMNaEywLzDR1WSAEI3uPxT5MU/SSY73bTQG8XqwZ8YoyxaW3T2jt
YwUQ0WljJqk2xVLHH3fXLBJAdXj+UdN5U/S7++yxpJkPdxofoOA7EtftTXPZ
kcCHiMnjwcwyEi/6lbwLW8WHpg6uq/A8iR/eBEQZO/FhffmUWfcFEqe40eqG
lXwgo6J6yipJTF7WFehkr+s3r97lf5nEfju5ZM6GDxvy2xPT60nM2m35VSWH
D2ZcVqneIxKD719vt6LxIdXq1pH9j0kMm3VQPZ6n4PWUOO7RExLPlmQYZn6i
oKWy16Wkh0RKz6FuboaCVE75de4zXb7nI3k+RcGYJqDz0AiJKaU1Wyu1FOy4
O3N55CWJ+QcanGNHKWg9U30yREti57XD9jYvKSgLNY9cPkbitJeDMHeYgqj6
f9W3J0mcjJVHHhykoP3XvGbHKRKbdg9aub+gwFO8tSL7vY4rNTNvByjgOFwT
7pwm0YldS8b1U3CY2Bd6b4bEL0flfitUFIz3WW9wnSOxseuvUwN9uv2ah+an
P5EYa5ynl9+r289Kn56f1/1tmsgM66HgPxdOIfM=
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{2., 0.0032},
  Method->{},
  PlotRange->{{2, 4}, {0.0031845857872425344`, 0.007042253377407304}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.710351195541026*^9, 3.710351223978147*^9}, 
   3.710351317153755*^9, 3.710351386236219*^9, {3.7103560803134947`*^9, 
   3.710356204724409*^9}, 3.7110344284781723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tableomegaNaCllong", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"fomegaNaCl", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.005", ",", "10", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.710356231331521*^9, 3.710356241323166*^9}, {
  3.7103572070650454`*^9, 3.710357217425723*^9}, {3.7103572818559227`*^9, 
  3.710357282600998*^9}, {3.711034433442939*^9, 3.711034437307086*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110344822522097`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.030821538775256646`\\) and \\!\\(3.5151161415115725`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034483228194*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034483948704*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.007374903350057321`\\) and \\!\\(1.036324084669255`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034484720278*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.010930752862661909`\\) and \\!\\(3.0162043710894995`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034485445201*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034486243029*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034486631633*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034513070752*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.02628251493312843`\\) and \\!\\(3.8960988658231304`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034533899439*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110345345456676`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034534628388*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.0067575292345715575`\\) and \\!\\(9.597017422296393`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110345381300707`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.009911569152403888`\\) and \\!\\(3.0370876038542324`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034540085917*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034540182721*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034541237999*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110345764645433`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.027276487512974595`\\) and \\!\\(3.8547097609905565`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034585186307*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034585266336*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.007187567216186973`\\) and \\!\\(9.27094604654108`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110345901331053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034590198444*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103459139676*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110345914646072`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.010527170417229663`\\) and \\!\\(1.5012742068517553`*^-6\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034593150015*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034593231929*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034593897285*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110345939659157`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.07680917688967083`\\) and \\!\\(9.546710708886569`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034656904237*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103465835668*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034658419898*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.06400521757506043`\\) and \\!\\(9.677346081593032`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110347024106817`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.0720651311110257`\\) and \\!\\(1.3988609357468325`*^-7\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034746688792*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711034746760439*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.005485192228621073`\\) and \\!\\(2.5916142913358`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035527521681*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035529000758*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.005195308915585829`\\) and \\!\\(2.5446498510140258`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035576072748*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035577634223*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.005380044602559518`\\) and \\!\\(2.210165572694923`*^-8\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035627420772*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035627508461*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103563032082*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035630401469*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004383724145307585`\\) and \\!\\(7.999242713119949`*^-9\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035785879177*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035787360965*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.00416578072140359`\\) and \\!\\(7.891816723803434`*^-9\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035838330955*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110358398548613`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035842015993*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035853687351*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035871357173*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \\!\\(2000\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(0.004317386412900577`\\) and \\!\\(7.04481868136589`*^-9\\) for the \
integral and error estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110358923501987`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: eincr\
\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035892430625*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035893707838*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035893782887*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7110359008579187`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.71103594803304*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035949405533*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035964546658*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711035964628196*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711036492409783*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711036513557867*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small.\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711036549980089*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(NIntegrate :: \
slwcon\\), \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.711036550068954*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1489194757617649`", ",", "0.1475773010476798`", ",", 
   "0.14407189647534313`", ",", "0.13858479617475467`", ",", 
   "0.131393310478359`", ",", "0.12285004006973771`", ",", 
   "0.11334941156330197`", ",", "0.10329076004962659`", ",", 
   "0.09306580062886846`", ",", "0.08302186341265191`", ",", 
   "0.07344668037930921`", ",", "0.06455906055352378`", ",", 
   "0.056505933750645485`", ",", "0.04936604145134926`", ",", 
   "0.043157706339556276`", ",", "0.03785134088323347`", ",", 
   "0.033381040463665836`", ",", "0.029659616738085835`", ",", 
   "0.026587634805428008`", ",", "0.02406422093924391`", ",", 
   "0.021993466730773396`", ",", "0.020288528732411028`", ",", 
   "0.01887469598631098`", ",", "0.01768944794505356`", ",", 
   "0.01668198804287145`", ",", "0.015812741962872502`", ",", 
   "0.015051040715936645`", ",", "0.014373502927942245`", ",", 
   "0.01376293019147552`", ",", "0.013206762076696594`", ",", 
   "0.012695021561413854`", ",", "0.012221152563389504`", ",", 
   "0.01177986370673185`", ",", "0.011366984130818932`", ",", 
   "0.010979454895893817`", ",", "0.010614944429027516`", ",", 
   "0.010271092489931907`", ",", "0.009946374595857621`", ",", 
   "0.009639020984031708`", ",", "0.00934778261553472`", ",", 
   "0.009071370238232417`", ",", "0.008808638424223785`", ",", 
   "0.008558678211799377`", ",", "0.00832044107990669`", ",", 
   "0.008093207213472318`", ",", "0.007876014241843234`", ",", 
   "0.007668403634386884`", ",", "0.007469718864428274`", ",", 
   "0.0072794396350219885`", ",", "0.007097082842269293`", ",", 
   "0.006922236324495876`", ",", "0.0067544969593813856`", ",", 
   "0.006593547686813334`", ",", "0.006439029155788648`", ",", 
   "0.006290706928071705`", ",", "0.006148090333876954`", ",", 
   "0.006011126071547643`", ",", "0.0058794732786009345`", ",", 
   "0.00575286043366187`", ",", "0.005631065776770772`", ",", 
   "0.005513845000744876`", ",", "0.005400975292906122`", ",", 
   "0.005292258684938701`", ",", "0.005187481073921646`", ",", 
   "0.005086454392412097`", ",", "0.004989001398968424`", ",", 
   "0.004894947024016857`", ",", "0.004804140754914393`", ",", 
   "0.004716419736139716`", ",", "0.004631645462153274`", ",", 
   "0.0045496853067017`", ",", "0.00447040815996178`", ",", 
   "0.004393695555244404`", ",", "0.004319434341431057`", ",", 
   "0.004247516672181139`", ",", "0.004177840911102616`", ",", 
   "0.004110312444534303`", ",", "0.004044839972521104`", ",", 
   "0.003981337719467053`", ",", "0.0039197236309318085`", ",", 
   "0.003859919166682496`", ",", "0.0038018555620966173`", ",", 
   "0.003745460513431928`", ",", "0.003690667295621558`", ",", 
   "0.0036374149004568916`", ",", "0.003585644209407833`", ",", 
   "0.003535294215697687`", ",", "0.003486314866728197`", ",", 
   "0.003438655606222324`", ",", "0.003392263212291729`", ",", 
   "0.003347093934663477`", ",", "0.0033031044125033417`", ",", 
   "0.003260248485451125`", ",", "0.0032184879214335665`", ",", 
   "0.003177783189647293`", ",", "0.003138097638842343`", ",", 
   "0.0030993962636983773`", ",", "0.0030616435430069187`", ",", 
   "0.0030248077037761546`", ",", "0.0029888579350309677`", ",", 
   "0.0029537642367064524`", ",", "0.002919497891276393`", ",", 
   "0.002886031749367773`", ",", "0.002853339586997676`", ",", 
   "0.0028213961818767536`", ",", "0.002790177356438061`", ",", 
   "0.002759659851506474`", ",", "0.0027298216034365047`", ",", 
   "0.0027006410734893914`", ",", "0.0026720978427628595`", ",", 
   "0.0026441720410215713`", ",", "0.002616844867601331`", ",", 
   "0.002590097837728795`", ",", "0.0025639135097687673`", ",", 
   "0.0025382749012551435`", ",", "0.002513165842704305`", ",", 
   "0.002488570581625109`", ",", "0.002464474137909095`", ",", 
   "0.0024408618113956368`", ",", "0.002417719727373904`", ",", 
   "0.0023950342373518984`", ",", "0.0023727924878108302`", ",", 
   "0.002350981686299016`", ",", "0.00232959000387478`", ",", 
   "0.0023086054989508763`", ",", "0.0022880169709629`", ",", 
   "0.0022678136002754284`", ",", "0.0022479847175951246`", ",", 
   "0.0022285202997338336`", ",", "0.0022094105238335392`", ",", 
   "0.0021906457245863603`", ",", "0.0021722168980487684`", ",", 
   "0.0021541151326191195`", ",", "0.002136331885265205`", ",", 
   "0.0021188588861622533`", ",", "0.0021016880859927546`", ",", 
   "0.002084811671649981`", ",", "0.002068222197259003`", ",", 
   "0.002051912365877779`", ",", "0.0020358751781908097`", ",", 
   "0.0020201037740163004`", ",", "0.0020045916840466444`", ",", 
   "0.001989332312739853`", ",", "0.0019743196081372025`", ",", 
   "0.001959547532311934`", ",", "0.0019450103375506349`", ",", 
   "0.0019307022711536233`", ",", "0.0019166179855749478`", ",", 
   "0.0019027520888751002`", ",", "0.0018890994815954302`", ",", 
   "0.0018756551908470503`", ",", "0.0018624143768335517`", ",", 
   "0.0018493723047602008`", ",", "0.0018365244613973539`", ",", 
   "0.0018238664458123137`", ",", "0.0018113933409941733`", ",", 
   "0.001799102728520998`", ",", "0.0017869888164771372`", ",", 
   "0.0017750482809478722`", ",", "0.0017632773131662951`", ",", 
   "0.0017516721282060733`", ",", "0.00174022923763544`", ",", 
   "0.001728944965320969`", ",", "0.001717816126414771`", ",", 
   "0.0017068392418003208`", ",", "0.001696011131282536`", ",", 
   "0.001685328704654332`", ",", "0.0016747888461737552`", ",", 
   "0.0016643886705322115`", ",", "0.0016541252917880048`", ",", 
   "0.0016439958506430548`", ",", "0.001633997641224935`", ",", 
   "0.0016241280334812055`", ",", "0.0016143844222973858`", ",", 
   "0.0016047642994177868`", ",", "0.001595265186382494`", ",", 
   "0.0015858847129101242`", ",", "0.001576620605689001`", ",", 
   "0.0015674705493470727`", ",", "0.0015584323324664198`", ",", 
   "0.0015495038258426445`", ",", "0.0015406829341397246`", ",", 
   "0.0015319676065882982`", ",", "0.0015233558703363192`", ",", 
   "0.001514845781103277`", ",", "0.0015064354355216374`", ",", 
   "0.0014981230061748203`", ",", "0.0014899066968780085`", ",", 
   "0.0014817847484309631`", ",", "0.0014737554542544576`", ",", 
   "0.0014658171358647044`", ",", "0.0014579681856402775`", ",", 
   "0.0014502067973149427`", ",", "0.0014425318117269434`", ",", 
   "0.0014349415301697446`", ",", "0.001427434502472339`", ",", 
   "0.001420009232364065`", ",", "0.001412664330979405`", ",", 
   "0.0014053986002859223`", ",", "0.001398210364351499`"}], "}"}]], "Output",\

 CellChangeTimes->{3.7103568924893703`*^9, 3.710359862612413*^9, 
  3.711037337122415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"interpomegaNaCllong", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"r", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.005", ",", "10", ",", "0.05"}], "}"}]}], "]"}], 
      ",", "tableomegaNaCllong"}], "}"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710357009844832*^9, 3.710357027199911*^9}, {
  3.710368492638686*^9, 3.71036849554289*^9}, {3.7110377082611847`*^9, 
  3.711037712293309*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.005`", ",", "9.955000000000002`"}], "}"}], "}"}], 
    ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.710357028334156*^9, 3.7103684982007504`*^9, 
  3.711037715085443*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvtR1NaCllong", "[", "r_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          FractionBox[
           RowBox[{"interpomegaNaCllong", "[", "r", "]"}], 
           RowBox[{"Qna", " ", "Qcl"}]], "+", 
          RowBox[{"fvR1NaCl", "[", "r", "]"}]}], 
         RowBox[{"r", "<", "9.9"}]},
        {
         FractionBox["1", 
          RowBox[{"\[Epsilon]", " ", "r"}]], 
         RowBox[{"r", "\[GreaterEqual]", "9.9"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.710357044240355*^9, 3.710357060468596*^9}, {
  3.7103685021779547`*^9, 3.71036850816792*^9}, {3.7110377173201027`*^9, 
  3.711037727293913*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fvtR1NaCllong", "[", "r", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.710357073472803*^9, 3.710357141915101*^9}, {
  3.710357235281982*^9, 3.710357251056322*^9}, {3.7103685122872963`*^9, 
  3.71036855116696*^9}, {3.711037730879146*^9, 3.711037731477161*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.0002042857142857143`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.710368551735311*^9, 3.7110377325625267`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.0002042857142857143`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.710368551735311*^9, 3.711037732593327*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAASuVqfZJxCECmn8dwd8FuP07kkCse
HgpAXCfw3Kp3bT/qw2KAyK0LQGTWaWbEWWw/LhHWHUNfDUCgikaSiThrPwo/
9WHc8w5AcKRdCSo8aj9H7Vr3IlUQQL3WSkT8O2k/2MJkAVosEUAhMeV5VVBo
P7WIxF4g9RFAh9SIH2mBZz9mBXXgzs4SQMlQovLxrWY/Y3J7tQyaE0BAbbUt
o/NlPy9nK85MYRRAacNm9Z5GZT/PEiwLdTkVQHA2qerolGQ/u66CmywDFkDN
5WtVxvdjP3sBKlDM3RZAnfV/xUdWYz8K3HpIbrQXQJs8KEMIwGI/5aYhlJ98
GEBgqgmxzTpiP5QoGQS5VRlAtqQw912xYT+QmmbHYSAaQD0PPupEN2E/WpRd
zgznGkABRXiOBsVgP/hEpfmfvhtAGZFAe8tOYD/j5UJ4woccQPowlzgYy18/
oj0xG81hHUARuIz5SPFeP62FdRFnLR5Akq719RQvXj+HVWNLA/UeQKQm9WnN
eF0/NdyhqYfNH0BLr1vsprtcP5gpm63NSyBA+GaE87cSXD9/wI2YS7kgQBoM
lW13Y1s/TRtVpcokIUCy0Kna375aP0Fux1sRiSFAGpA3QaMrWj+fHGIkzPUh
QLQIJml8klk/JMOnlk5bIkBtT0pDSAlZP5AtwirSviJABpaUeOiHWD9m8wTR
ySojQLib3F7+AFg/YrHyIImPI0A7LldH9IdXP2yCU/xKkSNAksSIFOKFVz91
U7TXDJMjQFe2SDrQg1c/iPV1jpCWI0CO5iGPrX9XP645+fuXnSNAgxp+XGx3
Vz/5wf/WpqsjQFjfR3T6Zlc/ApNgsmitI0DGdc3A7WRXPwxkwY0qryNAtRR4
ZOFiVz8eBoNErrIjQNfi3bDJXlc/REoGsrW5I0DMyg1YnlZXP04bZ413uyNA
1iPSWZRUVz9X7MdoOb0jQIacI7KKUlc/ao6JH73AI0AQJz1meE5XP3Rf6vp+
wiNAxALtwW9MVz99MEvWQMQjQM+R+XNnSlc/kNIMjcTHI0DbIfnaV0ZXP5qj
bWiGySNAV3vUj1BEVz+jdM5DSMsjQAY53ZpJQlc/pnKgmZnMI0CxOKCsxEBX
PzkFb6E=
      "]], LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAthaQ+svOI0A7+P/FykxXP8Dn8NWN
0CNAYO3uyblKVz/JuFGxT9IjQN3jqCupSFc/3FoTaNPVI0CJHhoIiURXP+Yr
dEOV1yNAo52fgnlCVz/v/NQeV9kjQOKTjFpqQFc/Ap+W1drcI0BwvDkiTTxX
PyfjGUPi4yNA58YsDhc0Vz8wtHoepOUjQJWKOXEKMlc/OoXb+WXnI0ADVugw
/i9XP0wnnbDp6iNAyPHJxeYrVz9yayAe8fEjQGag8EK8I1c/fDyB+bLzI0C+
yGCIsiFXP4UN4tR09SNAXbSvKakfVz+Yr6OL+PgjQEbWiH+XG1c/ooAEZ7r6
I0BQouIzjxlXP6tRZUJ8/CNAG126Q4cXVz+0IsYdPv4jQMrm965/FVc/vvMm
+f//I0D4J4N1eBNXP05jkVY=
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.0015},
  Method->{},
  PlotRange->{{0, 10}, {0.0014084507329692447`, 0.015561693543129612`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.710357080374494*^9, 3.710357108167858*^9}, 
   3.710357142625922*^9, {3.71035724758256*^9, 3.710357251634701*^9}, {
   3.710368513972814*^9, 3.710368551784999*^9}, 3.711037732598031*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/anggao/Desktop/Na_Ca_Cl_potentials/vR1_NaCl.txt\>\"", ",", " ", 
   
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"r", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.02", ",", "20", ",", "0.02"}], "}"}]}], "]"}], 
      ",", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"fvtR1NaCllong", "[", "r", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.02", ",", "20", ",", "0.02"}], "}"}]}], "]"}]}],
      "}"}], "]"}], ",", " ", "\"\<Table\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.710368864408938*^9, 3.7103689064270067`*^9}, {
  3.711037738857016*^9, 3.711037743367312*^9}}],

Cell[BoxData["\<\"/Users/anggao/Desktop/Na_Ca_Cl_potentials/vR1_NaCl.txt\"\>"]\
, "Output",
 CellChangeTimes->{3.7103689330353947`*^9, 3.711037745291882*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fvtR1NaCllong", "[", "0.2", "]"}]], "Input",
 CellChangeTimes->{{3.71036897971988*^9, 3.710368980672318*^9}, {
  3.710369043002783*^9, 3.710369046847014*^9}, {3.7110377481418743`*^9, 
  3.711037748916585*^9}}],

Cell[BoxData["0.014089392186810434`"], "Output",
 CellChangeTimes->{
  3.710368981373301*^9, {3.710369044534939*^9, 3.7103690474690113`*^9}, 
   3.711037751969736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"box", "=", "2.97"}]], "Input",
 CellChangeTimes->{{3.710412580132865*^9, 3.710412582681367*^9}}],

Cell[BoxData["2.97`"], "Output",
 CellChangeTimes->{3.710412584772051*^9, 3.711037760208605*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fvtR1NaCllongs", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"fvtR1NaCllong", "[", "r", "]"}], "-", 
    FractionBox[
     RowBox[{"Erf", "[", 
      RowBox[{"r", "/", "10"}], "]"}], 
     RowBox[{"\[Epsilon]", " ", "r"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.710412798050172*^9, 3.710412860449666*^9}, {
  3.7110377623417187`*^9, 3.711037766134604*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fEwaldNaCl", "[", "x_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Qna", " ", "Qcl", " ", 
     RowBox[{"fvtR1NaCllongs", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m", " ", "box"}], "-", "x"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"l", " ", "box"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"n", " ", "box"}], ")"}], "2"]}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710412597512351*^9, 3.710412600611944*^9}, {
   3.710412649861804*^9, 3.7104126659334593`*^9}, 3.710412867573283*^9, {
   3.711037769800345*^9, 3.711037776759397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tableEwaldNaCl", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"fEwaldNaCl", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.1", ",", "1.5", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7104126733242397`*^9, 3.710412699822032*^9}, {
  3.710412790017541*^9, 3.7104127939570723`*^9}, {3.7110377822804127`*^9, 
  3.71103778647045*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.15670779575513555`"}], ",", 
   RowBox[{"-", "0.15624822170668018`"}], ",", 
   RowBox[{"-", "0.15567731203972696`"}], ",", 
   RowBox[{"-", "0.15497773822051086`"}], ",", 
   RowBox[{"-", "0.15421853014329787`"}], ",", 
   RowBox[{"-", "0.15344257698744043`"}], ",", 
   RowBox[{"-", "0.15268525333554936`"}], ",", 
   RowBox[{"-", "0.15197513912417338`"}], ",", 
   RowBox[{"-", "0.15133302456264863`"}], ",", 
   RowBox[{"-", "0.15078506484100984`"}], ",", 
   RowBox[{"-", "0.1503065714135108`"}], ",", 
   RowBox[{"-", "0.14990921352876813`"}], ",", 
   RowBox[{"-", "0.1495860647944584`"}], ",", 
   RowBox[{"-", "0.1493117713118327`"}], ",", 
   RowBox[{"-", "0.14910447486552814`"}], ",", 
   RowBox[{"-", "0.14893887359863012`"}], ",", 
   RowBox[{"-", "0.14880572058999642`"}], ",", 
   RowBox[{"-", "0.14869614198118974`"}], ",", 
   RowBox[{"-", "0.14859568947061935`"}], ",", 
   RowBox[{"-", "0.14851885275640908`"}], ",", 
   RowBox[{"-", "0.1484530035906256`"}], ",", 
   RowBox[{"-", "0.14839662652045285`"}], ",", 
   RowBox[{"-", "0.14834846751326336`"}], ",", 
   RowBox[{"-", "0.14830844976733876`"}], ",", 
   RowBox[{"-", "0.1482761113774367`"}], ",", 
   RowBox[{"-", "0.14826560047668594`"}], ",", 
   RowBox[{"-", "0.14824898124082372`"}], ",", 
   RowBox[{"-", "0.14826707440646755`"}], ",", 
   RowBox[{"-", "0.1482654671162202`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7104127128178167`*^9, 3.710412884377261*^9, 
  3.711037799828169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"r", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0.1", ",", "1.5", ",", "0.05"}], "}"}]}], "]"}], 
     ",", " ", "tableEwaldNaCl"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.710412915935898*^9, 3.710412918209478*^9}, {
  3.7110378714574203`*^9, 3.711037871766685*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQPWsmCOy0b/r61IWB/8h+E2MQOGw/54WK6Mf/h/dD
5E/aX/P+8dH67eH9DGBwwd7iw8I6/2uHoeov2+t3bT6dt/fw/jQwuGafffbP
AsYlMP037fX1ruwx6D68/9wZELhjv+Wz9r3XxTDzHtiHTFqW/TAOpv6hPcNl
6bNvfA7vBxtv/NjeUc3nhZ3t4f1nwfqf2Cdd3LPA0uDw/nSwfc/s8xJl7yxS
hZn3wr5kRsTrpTIw817aT+Ca9/eWKMy81/YPjs26nCsAM++N/QWVTbcFeGDm
vbN/cj9naSUHzLwP9lbavn/1WGHqP9ifOb8tfxUTzPyP9sqiW3mbGGD6P9kb
/rmnsPLfIWj4fLZfccpARfTvof2MYPO+2E/z31N09PchaHh8sQ8snqSz7dch
qHlf7X2XT2WIA/Ih5n2zXy3LM/3ST5h53+2Py12OzfoFM++Hvf83w0cxQD4A
ML7tiA==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.15670779575513555`},
  Method->{},
  PlotRange->{{
    0, 1.5000000000000002`}, {-0.15670779575513555`, -0.14824898124082372`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.030000000000000006`, 0.030000000000000006`}, {
   0.00016917629028623648`, 0.00016917629028623648`}}]], "Output",
 CellChangeTimes->{
  3.710412920038642*^9, {3.711037868974584*^9, 3.711037872583871*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"interpEwaldNaCl", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"r", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.1", ",", "1.5", ",", "0.05"}], "}"}]}], "]"}], 
      ",", " ", "tableEwaldNaCl"}], "}"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710412951367087*^9, 3.7104130096143084`*^9}, {
  3.711037878616184*^9, 3.711037881944686*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.1`", ",", "1.5000000000000002`"}], "}"}], "}"}], 
    ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.710413010845997*^9, 3.711037884083991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/anggao/Desktop/Na_Ca_Cl_potentials/VR1NaCl_Ewald.txt\>\"", ",", 
   
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"r", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.1", ",", 
          RowBox[{"box", "/", "2"}], ",", "0.001"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"interpEwaldNaCl", "[", "r", "]"}], "-", 
         RowBox[{"interpEwaldNaCl", "[", 
          RowBox[{"box", "/", "2"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0.1", ",", 
          RowBox[{"box", "/", "2"}], ",", "0.001"}], "}"}]}], "]"}]}], "}"}], 
    "]"}], ",", "\"\<Table\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.710413032845883*^9, 3.7104130946414022`*^9}, {
  3.711037887002697*^9, 3.7110378931786633`*^9}}],

Cell[BoxData["\<\"/Users/anggao/Desktop/Na_Ca_Cl_potentials/VR1NaCl_Ewald.txt\
\"\>"], "Output",
 CellChangeTimes->{3.710413096604844*^9, 3.71103789480214*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.710413193076379*^9, 3.7104131976660633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"140", "*", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"interpEwaldNaCl", "[", "0.3", "]"}], "-", 
    RowBox[{"interpEwaldNaCl", "[", 
     RowBox[{"box", "/", "2"}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.710413206649488*^9, 3.710413236593226*^9}, {
  3.7110379021707287`*^9, 3.711037905416437*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.8326184617967658`"}]], "Output",
 CellChangeTimes->{{3.710413209749106*^9, 3.710413237110849*^9}, 
   3.7110379167952347`*^9}]
}, Open  ]]
},
WindowSize->{740, 651},
WindowMargins->{{Automatic, 225}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 276, 6, 28, "Input"],
Cell[836, 28, 804, 21, 63, "Input"],
Cell[1643, 51, 1718, 38, 122, "Input"],
Cell[3364, 91, 565, 10, 63, "Input"],
Cell[3932, 103, 117, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[4074, 109, 59, 1, 28, "Input"],
Cell[4136, 112, 120, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4293, 119, 358, 9, 67, "Input"],
Cell[4654, 130, 119, 2, 28, "Output"],
Cell[4776, 134, 157, 4, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4970, 143, 323, 9, 67, "Input"],
Cell[5296, 154, 136, 3, 28, "Output"],
Cell[5435, 159, 141, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5613, 167, 3685, 102, 133, "Input"],
Cell[9301, 271, 124, 2, 28, "Output"],
Cell[9428, 275, 119, 2, 28, "Output"]
}, Open  ]],
Cell[9562, 280, 485, 13, 63, "Input"],
Cell[10050, 295, 339, 8, 46, "Input"],
Cell[CellGroupData[{
Cell[10414, 307, 218, 4, 28, "Input"],
Cell[10635, 313, 361, 11, 28, "Output"]
}, Open  ]],
Cell[11011, 327, 286, 7, 46, "Input"],
Cell[CellGroupData[{
Cell[11322, 338, 169, 3, 28, "Input"],
Cell[11494, 343, 359, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11890, 359, 434, 11, 28, "Input"],
Cell[12327, 372, 118845, 1957, 239, "Output"]
}, Open  ]],
Cell[131187, 2332, 385, 9, 28, "Input"],
Cell[131575, 2343, 285, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[131885, 2354, 148, 3, 28, "Input"],
Cell[132036, 2359, 144, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132217, 2366, 413, 10, 35, "Input"],
Cell[132633, 2378, 174, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132844, 2386, 179, 3, 28, "Input"],
Cell[133026, 2391, 180, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133243, 2399, 362, 9, 35, "Input"],
Cell[133608, 2410, 137, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133782, 2417, 132, 2, 28, "Input"],
Cell[133917, 2421, 158, 3, 28, "Output"]
}, Open  ]],
Cell[134090, 2427, 1536, 46, 132, "Input"],
Cell[135629, 2475, 267, 8, 50, "Input"],
Cell[135899, 2485, 1215, 37, 125, "Input"],
Cell[137117, 2524, 402, 10, 46, "Input"],
Cell[137522, 2536, 178, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[137725, 2543, 273, 6, 46, "Input"],
Cell[138001, 2551, 124, 2, 28, "Output"]
}, Open  ]],
Cell[138140, 2556, 912, 22, 69, "Input"],
Cell[CellGroupData[{
Cell[139077, 2582, 444, 10, 28, "Input"],
Cell[139524, 2594, 4918, 104, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144479, 2703, 630, 14, 46, "Input"],
Cell[145112, 2719, 349, 11, 28, "Output"]
}, Open  ]],
Cell[145476, 2733, 2058, 56, 47, "Input"],
Cell[147537, 2791, 260, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[147822, 2801, 430, 11, 28, "Input"],
Cell[148255, 2814, 666, 14, 42, "Message"],
Cell[148924, 2830, 666, 14, 42, "Message"],
Cell[149593, 2846, 9772, 171, 240, "Output"]
}, Open  ]],
Cell[159380, 3020, 189, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[159594, 3028, 181, 3, 28, "Input"],
Cell[159778, 3033, 138, 2, 28, "Output"]
}, Open  ]],
Cell[159931, 3038, 682, 19, 69, "Input"],
Cell[CellGroupData[{
Cell[160638, 3061, 316, 8, 28, "Input"],
Cell[160957, 3071, 3132, 53, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164126, 3129, 431, 11, 46, "Input"],
Cell[164560, 3142, 330, 11, 28, "Output"]
}, Open  ]],
Cell[164905, 3156, 1959, 54, 47, "Input"],
Cell[166867, 3212, 211, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[167103, 3221, 382, 10, 28, "Input"],
Cell[167488, 3233, 632, 13, 42, "Message"],
Cell[168123, 3248, 634, 13, 42, "Message"],
Cell[168760, 3263, 10159, 174, 226, "Output"]
}, Open  ]],
Cell[178934, 3440, 3064, 81, 288, "Input"],
Cell[CellGroupData[{
Cell[182023, 3525, 366, 9, 28, "Input"],
Cell[182392, 3536, 886, 16, 132, "Message"],
Cell[183281, 3554, 886, 16, 132, "Message"],
Cell[184170, 3572, 885, 16, 132, "Message"],
Cell[185058, 3590, 886, 16, 132, "Message"],
Cell[185947, 3608, 885, 16, 132, "Message"],
Cell[186835, 3626, 346, 9, 24, "Message"],
Cell[187184, 3637, 889, 16, 132, "Message"],
Cell[188076, 3655, 885, 16, 132, "Message"],
Cell[188964, 3673, 884, 16, 132, "Message"],
Cell[189851, 3691, 346, 9, 24, "Message"],
Cell[190200, 3702, 2981, 64, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193218, 3771, 480, 12, 46, "Input"],
Cell[193701, 3785, 348, 11, 28, "Output"]
}, Open  ]],
Cell[194064, 3799, 2063, 57, 59, "Input"],
Cell[CellGroupData[{
Cell[196152, 3860, 289, 7, 28, "Input"],
Cell[196444, 3869, 660, 13, 42, "Message"],
Cell[197107, 3884, 4674, 85, 238, "Output"]
}, Open  ]],
Cell[201796, 3972, 325, 8, 28, "Input"],
Cell[202124, 3982, 4584, 123, 385, "Input"],
Cell[CellGroupData[{
Cell[206733, 4109, 412, 10, 28, "Input"],
Cell[207148, 4121, 888, 16, 132, "Message"],
Cell[208039, 4139, 404, 10, 60, "Message"],
Cell[208446, 4151, 886, 16, 132, "Message"],
Cell[209335, 4169, 890, 16, 132, "Message"],
Cell[210228, 4187, 404, 10, 60, "Message"],
Cell[210635, 4199, 402, 10, 60, "Message"],
Cell[211040, 4211, 404, 10, 60, "Message"],
Cell[211447, 4223, 401, 10, 60, "Message"],
Cell[211851, 4235, 402, 10, 60, "Message"],
Cell[212256, 4247, 886, 16, 132, "Message"],
Cell[213145, 4265, 402, 10, 60, "Message"],
Cell[213550, 4277, 349, 9, 24, "Message"],
Cell[213902, 4288, 886, 16, 132, "Message"],
Cell[214791, 4306, 404, 10, 60, "Message"],
Cell[215198, 4318, 889, 16, 132, "Message"],
Cell[216090, 4336, 402, 10, 60, "Message"],
Cell[216495, 4348, 347, 9, 24, "Message"],
Cell[216845, 4359, 887, 16, 132, "Message"],
Cell[217735, 4377, 346, 9, 24, "Message"],
Cell[218084, 4388, 402, 10, 60, "Message"],
Cell[218489, 4400, 404, 10, 60, "Message"],
Cell[218896, 4412, 347, 9, 24, "Message"],
Cell[219246, 4423, 887, 16, 132, "Message"],
Cell[220136, 4441, 348, 9, 24, "Message"],
Cell[220487, 4452, 886, 16, 132, "Message"],
Cell[221376, 4470, 348, 9, 24, "Message"],
Cell[221727, 4481, 886, 16, 132, "Message"],
Cell[222616, 4499, 402, 10, 60, "Message"],
Cell[223021, 4511, 349, 9, 24, "Message"],
Cell[223373, 4522, 886, 16, 132, "Message"],
Cell[224262, 4540, 886, 16, 132, "Message"],
Cell[225151, 4558, 348, 9, 24, "Message"],
Cell[225502, 4569, 887, 16, 132, "Message"],
Cell[226392, 4587, 402, 10, 60, "Message"],
Cell[226797, 4599, 890, 16, 132, "Message"],
Cell[227690, 4617, 402, 10, 60, "Message"],
Cell[228095, 4629, 885, 16, 132, "Message"],
Cell[228983, 4647, 348, 9, 24, "Message"],
Cell[229334, 4658, 402, 10, 60, "Message"],
Cell[229739, 4670, 347, 9, 24, "Message"],
Cell[230089, 4681, 889, 16, 132, "Message"],
Cell[230981, 4699, 404, 10, 60, "Message"],
Cell[231388, 4711, 889, 16, 132, "Message"],
Cell[232280, 4729, 404, 10, 60, "Message"],
Cell[232687, 4741, 887, 16, 132, "Message"],
Cell[233577, 4759, 402, 10, 60, "Message"],
Cell[233982, 4771, 888, 16, 132, "Message"],
Cell[234873, 4789, 401, 10, 60, "Message"],
Cell[235277, 4801, 887, 16, 132, "Message"],
Cell[236167, 4819, 402, 10, 60, "Message"],
Cell[236572, 4831, 886, 16, 132, "Message"],
Cell[237461, 4849, 402, 10, 60, "Message"],
Cell[237866, 4861, 887, 16, 132, "Message"],
Cell[238756, 4879, 345, 9, 24, "Message"],
Cell[239104, 4890, 402, 10, 60, "Message"],
Cell[239509, 4902, 347, 9, 24, "Message"],
Cell[239859, 4913, 890, 16, 132, "Message"],
Cell[240752, 4931, 348, 9, 24, "Message"],
Cell[241103, 4942, 889, 16, 132, "Message"],
Cell[241995, 4960, 346, 9, 24, "Message"],
Cell[242344, 4971, 402, 10, 60, "Message"],
Cell[242749, 4983, 347, 9, 24, "Message"],
Cell[243099, 4994, 402, 10, 60, "Message"],
Cell[243504, 5006, 347, 9, 24, "Message"],
Cell[243854, 5017, 887, 16, 132, "Message"],
Cell[244744, 5035, 402, 10, 60, "Message"],
Cell[245149, 5047, 888, 16, 132, "Message"],
Cell[246040, 5065, 402, 10, 60, "Message"],
Cell[246445, 5077, 890, 16, 132, "Message"],
Cell[247338, 5095, 346, 9, 24, "Message"],
Cell[247687, 5106, 402, 10, 60, "Message"],
Cell[248092, 5118, 347, 9, 24, "Message"],
Cell[248442, 5129, 886, 16, 132, "Message"],
Cell[249331, 5147, 402, 10, 60, "Message"],
Cell[249736, 5159, 886, 16, 132, "Message"],
Cell[250625, 5177, 402, 10, 60, "Message"],
Cell[251030, 5189, 402, 10, 60, "Message"],
Cell[251435, 5201, 888, 16, 132, "Message"],
Cell[252326, 5219, 402, 10, 60, "Message"],
Cell[252731, 5231, 886, 16, 132, "Message"],
Cell[253620, 5249, 402, 10, 60, "Message"],
Cell[254025, 5261, 888, 16, 132, "Message"],
Cell[254916, 5279, 402, 10, 60, "Message"],
Cell[255321, 5291, 890, 16, 132, "Message"],
Cell[256214, 5309, 346, 9, 24, "Message"],
Cell[256563, 5320, 404, 10, 60, "Message"],
Cell[256970, 5332, 347, 9, 24, "Message"],
Cell[257320, 5343, 887, 16, 132, "Message"],
Cell[258210, 5361, 346, 9, 24, "Message"],
Cell[258559, 5372, 401, 10, 60, "Message"],
Cell[258963, 5384, 347, 9, 24, "Message"],
Cell[259313, 5395, 404, 10, 60, "Message"],
Cell[259720, 5407, 347, 9, 24, "Message"],
Cell[260070, 5418, 2659, 44, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262766, 5467, 527, 13, 46, "Input"],
Cell[263296, 5482, 358, 12, 28, "Output"]
}, Open  ]],
Cell[263669, 5497, 1976, 54, 69, "Input"],
Cell[CellGroupData[{
Cell[265670, 5555, 649, 15, 49, "Input"],
Cell[266322, 5572, 5282, 96, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271641, 5673, 466, 10, 28, "Input"],
Cell[272110, 5685, 404, 10, 60, "Message"],
Cell[272517, 5697, 888, 16, 132, "Message"],
Cell[273408, 5715, 402, 10, 60, "Message"],
Cell[273813, 5727, 887, 16, 132, "Message"],
Cell[274703, 5745, 888, 16, 132, "Message"],
Cell[275594, 5763, 402, 10, 60, "Message"],
Cell[275999, 5775, 402, 10, 60, "Message"],
Cell[276404, 5787, 402, 10, 60, "Message"],
Cell[276809, 5799, 887, 16, 132, "Message"],
Cell[277699, 5817, 404, 10, 60, "Message"],
Cell[278106, 5829, 347, 9, 24, "Message"],
Cell[278456, 5840, 890, 16, 132, "Message"],
Cell[279349, 5858, 888, 16, 132, "Message"],
Cell[280240, 5876, 402, 10, 60, "Message"],
Cell[280645, 5888, 402, 10, 60, "Message"],
Cell[281050, 5900, 404, 10, 60, "Message"],
Cell[281457, 5912, 888, 16, 132, "Message"],
Cell[282348, 5930, 346, 9, 24, "Message"],
Cell[282697, 5941, 888, 16, 132, "Message"],
Cell[283588, 5959, 346, 9, 24, "Message"],
Cell[283937, 5970, 401, 10, 60, "Message"],
Cell[284341, 5982, 349, 9, 24, "Message"],
Cell[284693, 5993, 888, 16, 132, "Message"],
Cell[285584, 6011, 346, 9, 24, "Message"],
Cell[285933, 6022, 402, 10, 60, "Message"],
Cell[286338, 6034, 349, 9, 24, "Message"],
Cell[286690, 6045, 886, 16, 132, "Message"],
Cell[287579, 6063, 401, 10, 60, "Message"],
Cell[287983, 6075, 347, 9, 24, "Message"],
Cell[288333, 6086, 888, 16, 132, "Message"],
Cell[289224, 6104, 886, 16, 132, "Message"],
Cell[290113, 6122, 346, 9, 24, "Message"],
Cell[290462, 6133, 885, 16, 132, "Message"],
Cell[291350, 6151, 402, 10, 60, "Message"],
Cell[291755, 6163, 888, 16, 132, "Message"],
Cell[292646, 6181, 402, 10, 60, "Message"],
Cell[293051, 6193, 887, 16, 132, "Message"],
Cell[293941, 6211, 346, 9, 24, "Message"],
Cell[294290, 6222, 401, 10, 60, "Message"],
Cell[294694, 6234, 347, 9, 24, "Message"],
Cell[295044, 6245, 887, 16, 132, "Message"],
Cell[295934, 6263, 402, 10, 60, "Message"],
Cell[296339, 6275, 886, 16, 132, "Message"],
Cell[297228, 6293, 404, 10, 60, "Message"],
Cell[297635, 6305, 402, 10, 60, "Message"],
Cell[298040, 6317, 402, 10, 60, "Message"],
Cell[298445, 6329, 402, 10, 60, "Message"],
Cell[298850, 6341, 888, 16, 132, "Message"],
Cell[299741, 6359, 346, 9, 24, "Message"],
Cell[300090, 6370, 402, 10, 60, "Message"],
Cell[300495, 6382, 347, 9, 24, "Message"],
Cell[300845, 6393, 404, 10, 60, "Message"],
Cell[301252, 6405, 401, 10, 60, "Message"],
Cell[301656, 6417, 347, 9, 24, "Message"],
Cell[302006, 6428, 402, 10, 60, "Message"],
Cell[302411, 6440, 347, 9, 24, "Message"],
Cell[302761, 6451, 402, 10, 60, "Message"],
Cell[303166, 6463, 402, 10, 60, "Message"],
Cell[303571, 6475, 402, 10, 60, "Message"],
Cell[303976, 6487, 347, 9, 24, "Message"],
Cell[304326, 6498, 6589, 105, 556, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310952, 6608, 535, 13, 46, "Input"],
Cell[311490, 6623, 343, 11, 28, "Output"]
}, Open  ]],
Cell[311848, 6637, 1996, 54, 69, "Input"],
Cell[CellGroupData[{
Cell[313869, 6695, 468, 10, 28, "Input"],
Cell[314340, 6707, 610, 12, 42, "Message"],
Cell[314953, 6721, 608, 12, 42, "Message"],
Cell[315564, 6735, 4955, 90, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320556, 6830, 751, 20, 63, "Input"],
Cell[321310, 6852, 157, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321504, 6859, 233, 4, 28, "Input"],
Cell[321740, 6865, 167, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321944, 6873, 120, 2, 28, "Input"],
Cell[322067, 6877, 96, 1, 28, "Output"]
}, Open  ]],
Cell[322178, 6881, 431, 11, 67, "Input"],
Cell[322612, 6894, 1074, 30, 56, "Input"],
Cell[CellGroupData[{
Cell[323711, 6928, 416, 10, 28, "Input"],
Cell[324130, 6940, 1530, 33, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325697, 6978, 433, 11, 28, "Input"],
Cell[326133, 6991, 1128, 24, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327298, 7020, 483, 12, 46, "Input"],
Cell[327784, 7034, 315, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328136, 7049, 918, 24, 80, "Input"],
Cell[329057, 7075, 159, 2, 28, "Output"]
}, Open  ]],
Cell[329231, 7080, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[329350, 7085, 333, 8, 28, "Input"],
Cell[329686, 7095, 157, 3, 62, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
